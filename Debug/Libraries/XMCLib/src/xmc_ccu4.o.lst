   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ccu4.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU4_StartPrescaler,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU4_StartPrescaler:
  25              	.LFB130:
  26              	 .file 1 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest\\Libraries\\XMCLib\\inc/xmc_ccu4.h"
   1:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
   2:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @date 2016-01-12
   4:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
   5:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @cond
   6:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
   7:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMClib v2.1.4 - XMC Peripheral Driver Library 
   8:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
   9:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                             
  12:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * following conditions are met:   
  14:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                                                              
  15:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * disclaimer.                        
  17:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
  18:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
  21:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                                                              
  24:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                                                              
  32:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
  35:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  36:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Change History
  37:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * --------------
  38:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  39:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-02-20:
  40:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - Initial <br>
  41:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  43:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-06-20:
  44:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  46:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-07-22:
  47:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  48:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  49:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-08-17:
  50:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  51:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum item names are updated according to the guideli
  52:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  53:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  54:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-09-29:
  55:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - In XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  56:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *       settings.
  57:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  58:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-10-07:
  59:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  60:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents(
  61:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *       XMC_CCU4_SLICE_DisableMultipleEvents() APIs.
  62:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - DOC updates for the newly added APIs.
  63:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
  64:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @endcond
  65:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
  66:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
  67:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #ifndef XMC_CCU4_H
  68:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_H
  69:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  
  70:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
  71:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * HEADER FILES
  72:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
  73:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #include "xmc_common.h"
  74:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU40)
  75:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
  76:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if UC_FAMILY == XMC1
  77:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  #include "xmc1_ccu4_map.h"
  78:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
  79:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
  80:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
  81:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  #include "xmc4_ccu4_map.h"
  82:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
  83:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
  84:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
  85:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
  86:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @{
  87:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
  88:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  
  89:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
  90:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @addtogroup CCU4
  91:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
  92:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  93:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
  94:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
  95:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
  96:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
  97:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
  98:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
  99:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 100:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
 101:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 102:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Note:
 103:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)
 104:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_)
 105:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 106:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:
 107:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
 108:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().
 109:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 110:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It can be used to:
 111:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
 112:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
 113:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
 114:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
 115:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
 116:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 117:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Capture configuration:
 118:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
 119:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().
 120:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 121:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It can be used to:
 122:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
 123:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 124:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
 125:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 126:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Function/Event configuration:
 127:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 128:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 129:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It can be used to:
 130:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 131:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 132:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 133:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 134:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 135:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 136:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 137:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 138:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 139:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Interrupt configuration:
 140:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 141:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @{
 142:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 143:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  
 144:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 145:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * MACROS
 146:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 147:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 148:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 149:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 150:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 151:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 152:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 153:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 154:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 155:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 156:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 157:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 158:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 159:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * ENUMS
 160:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 161:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 162:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 163:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 164:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 165:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 166:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 167:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 168:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 169:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 170:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 171:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 172:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 173:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Return Value of an API
 174:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 175:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 176:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 177:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 178:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 179:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 180:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 181:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 182:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 183:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 184:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  CCU4 module clock
 185:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 186:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 187:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 188:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 189:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 190:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 191:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C       /**< External clock-C */
 192:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 193:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 194:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 195:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 196:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 197:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 198:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 199:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 200:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      only for slice
 201:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 202:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      and hardware f
 203:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 204:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      only for slice
 205:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 206:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      and hardware f
 207:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 208:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       only for slic
 209:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 210:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       and hardware 
 211:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 212:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       only for slic
 213:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 214:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       and hardware 
 215:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 216:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 217:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 218:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 219:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 220:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 221:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 222:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 223:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE        /**< slice(CC4y) operates in Capture Mode */
 224:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 225:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 226:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 227:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 228:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 229:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 230:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 231:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 232:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA        /**< Center Aligned Mode */
 233:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 234:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 235:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 236:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 237:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 238:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 239:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 240:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 241:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE        /**< Single shot mode: Once a Period match/One mat
 242:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 243:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 244:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 245:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 246:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 247:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 248:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 249:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 250:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 251:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 252:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 253:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 254:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 255:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Capture mode register sets
 256:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 257:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 258:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 259:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 260:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH       /**< Capture register-2, Capture register-3 used */
 261:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 262:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 263:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 264:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Prescaler mode
 265:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 266:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 267:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 268:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 269:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider. */
 270:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 271:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 272:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 273:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer output passive level
 274:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 275:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 276:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 277:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 278:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 279:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 280:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 281:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 282:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Timer clock Divider
 283:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 284:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER
 285:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 286:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu4 */
 287:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2      , /**< Slice Clock = fccu4/2 */
 288:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4      , /**< Slice Clock = fccu4/4 */
 289:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8      , /**< Slice Clock = fccu4/8 */
 290:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16     , /**< Slice Clock = fccu4/16 */
 291:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32     , /**< Slice Clock = fccu4/32 */
 292:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_64     , /**< Slice Clock = fccu4/64 */
 293:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_128    , /**< Slice Clock = fccu4/128 */
 294:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_256    , /**< Slice Clock = fccu4/256 */
 295:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_512    , /**< Slice Clock = fccu4/512 */
 296:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu4/1024 */
 297:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu4/2048 */
 298:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu4/4096 */
 299:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu4/8192 */
 300:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu4/16384 */
 301:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32768    /**< Slice Clock = fccu4/32768 */
 302:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_t;
 303:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 304:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 305:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Function list
 306:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 307:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 308:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 309:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 310:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 311:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 312:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                      generation */
 313:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 314:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                      generation */
 315:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 316:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 317:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 318:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 319:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 320:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 321:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                  /**< Trap function */
 322:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 323:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 324:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 325:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event list
 326:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 327:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 328:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 329:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 330:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 331:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 332:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2           /**< Event-2 */
 333:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 334:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 335:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 336:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 337:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 338:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 339:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 340:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 341:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 342:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 343:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 trigger */
 344:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE          /**< Both Rising and Falling edges cause
 345:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 346:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 347:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 348:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 349:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 350:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 351:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 352:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 353:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 354:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   /* Below enum items can be utilised specific to the functionality */
 355:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 356:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 357:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 358:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 359:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 360:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 361:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 362:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 363:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 364:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 365:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 366:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 367:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES        /**< 7 clock cycles */
 368:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 369:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 370:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 371:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 372:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 373:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 374:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef uint8_t XMC_CCU4_SLICE_INPUT_t;
 375:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 376:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 377:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 378:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 379:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 380:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 381:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 382:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 383:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 384:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 385:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 386:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 387:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 388:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 389:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 390:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 391:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 392:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 393:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 394:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 395:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 396:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 397:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 398:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 399:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 400:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 401:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 402:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 403:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 404:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 405:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Trap exit mode
 406:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 407:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 408:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 409:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 410:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 411:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 412:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 413:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 414:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer clear on capture
 415:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 416:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 417:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 418:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 419:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 420:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 421:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 422:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 423:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 424:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 425:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 426:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 427:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 428:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 429:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 430:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 431:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 432:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 433:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 request */
 434:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 435:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 436:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 437:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 438:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 439:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 440:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 441:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 442:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 443:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 444:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 445:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 446:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 447:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 448:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 449:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 450:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 451:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U  /**< Trap occurrence */
 452:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 453:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 454:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 455:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 456:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 457:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MULTI_IRQ_ID
 458:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 459:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH       = 0x1U,   /**< Period match counting up */
 460:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH          = 0x2U,   /**< Period match -> One match counting 
 461:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP   = 0x4U,   /**< Compare match counting up */
 462:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN = 0x8U,   /**< Compare match counting down */
 463:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0             = 0x100U, /**< Event-0 occurrence */
 464:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1             = 0x200U, /**< Event-1 occurrence */
 465:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2             = 0x400U, /**< Event-2 occurrence */
 466:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MULTI_IRQ_ID_t;
 467:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 468:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 469:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 470:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 471:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 472:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 473:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 474:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 475:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 476:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 477:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 478:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 479:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 480:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 481:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 482:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 483:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 484:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 485:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 486:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 487:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 488:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual register for SL
 489:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 490:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 491:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 492:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 493:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 494:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 495:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual registers for S
 496:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 497:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 498:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 499:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 500:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 501:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 502:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual register for SL
 503:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 504:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 505:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 506:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 507:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 508:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 509:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual register for SL
 510:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 511:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 512:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 513:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 514:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU4V3) || defined(DOXYGEN)/* Defined for XMC1400 devices only */
 515:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 516:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Slice shadow transfer mode options.
 517:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @note Only available for XMC1400 series
 518:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 519:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE
 520:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 521:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U,  /**< Shadow transfer is 
 522:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                 One match. */
 523:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 524:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 525:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t; 
 526:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 527:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 528:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 529:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Immediate write into configuration register
 530:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 531:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 532:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_WRITE_INTO
 533:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 534:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU4_CC4_STC_IRPC_Msk,                  /**< Imm
 535:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Wri
 536:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Con
 537:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION = CCU4_CC4_STC_IRCC_Msk,                 /**< Imm
 538:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Wri
 539:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Con
 540:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU4_CC4_STC_IRLC_Msk,           /**< Imm
 541:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Wri
 542:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                            Config
 543:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRDC_Msk,            /**< Imm
 544:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Wri
 545:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                            Config
 546:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRFC_Msk /**< Imm
 547:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Wri
 548:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Val
 549:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_WRITE_INTO_t;
 550:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 551:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 552:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 553:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 554:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 555:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 556:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 557:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 558:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU4_CC4_STC_ASPC_Msk,        
 559:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 560:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 561:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 562:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW = CCU4_CC4_STC_ASCC_Msk,       
 563:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 564:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 565:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 566:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU4_CC4_STC_ASLC_Msk,        
 567:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 568:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 569:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU4_CC4_STC_ASDC_Msk,        
 570:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 571:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 572:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU4_CC4_STC_ASFC_
 573:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 574:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 575:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 576:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 577:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 578:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 579:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 580:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 581:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 582:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 583:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 584:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 585:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 586:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 587:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 588:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 589:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 590:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 591:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 592:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * DATA STRUCTURES
 593:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 594:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 595:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 596:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 597:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 598:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 599:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 600:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 601:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 602:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 603:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 604:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 605:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 606:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 607:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 608:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 609:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 610:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 611:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 612:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma push
 613:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma anon_unions
 614:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 615:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma warning 586
 616:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 617:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 618:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 619:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 620:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 621:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 622:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 623:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 624:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   union
 625:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   {
 626:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****     struct
 627:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****     {
 628:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 629:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 630:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 631:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 632:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 633:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 10;
 634:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 635:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 636:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 1;
 637:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 638:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 639:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 8;
 640:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 641:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 6;
 642:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****     };
 643:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****     uint32_t tc;
 644:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   };
 645:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 646:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                             Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t */
 647:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 648:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 649:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 650:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 651:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 652:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 653:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 654:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 655:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 656:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 657:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 658:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 659:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 660:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   union
 661:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   {
 662:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****     struct
 663:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****     {
 664:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 4;
 665:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 666:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 667:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 668:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 4;
 669:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 670:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 671:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 3;
 672:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 673:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 15;
 674:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****     };
 675:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****     uint32_t tc;
 676:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   };
 677:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 678:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 679:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 680:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 681:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 682:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 683:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma pop
 684:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 685:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma warning restore
 686:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 687:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 688:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * API Prototypes
 689:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 690:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 691:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #ifdef __cplusplus
 692:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** extern "C" {
 693:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 694:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 695:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidModule(const XMC_CCU4_MODULE_t *const module)
 696:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 697:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   bool tmp = false;
 698:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 699:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = (module == CCU40);
 700:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 701:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU41) 
 702:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU41);
 703:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 704:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 705:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU42)
 706:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU42);
 707:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 708:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 709:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU43)
 710:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU43);
 711:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 712:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 713:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return tmp;  
 714:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } 
 715:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 716:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidSlice(const XMC_CCU4_SLICE_t *const slice)
 717:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 718:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   bool tmp = false;
 719:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 720:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = (slice == CCU40_CC40);
 721:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU40_CC41)  
 722:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC41);
 723:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 724:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU40_CC42)  
 725:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC42);
 726:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 727:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU40_CC43)  
 728:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC43);
 729:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 730:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU41)  
 731:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC40);
 732:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU41_CC41)  
 733:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC41);
 734:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 735:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU41_CC42)  
 736:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC42);
 737:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 738:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU41_CC43)  
 739:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC43);
 740:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 741:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif 
 742:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU42)  
 743:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC40);
 744:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU42_CC41)  
 745:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC41);
 746:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 747:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU42_CC42)  
 748:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC42);
 749:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 750:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU42_CC43)  
 751:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC43);
 752:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 753:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 754:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU43)  
 755:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC40);
 756:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU43_CC41)  
 757:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC41);
 758:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 759:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU43_CC42)  
 760:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC42);
 761:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 762:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU43_CC43)  
 763:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC43);
 764:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 765:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif 
 766:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 767:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return tmp;  
 768:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** } 
 769:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 770:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 771:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 772:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 773:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 774:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 775:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 776:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 777:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 778:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 779:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 780:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 781:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 782:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 783:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 784:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 785:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 786:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 787:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 788:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 789:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 790:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 791:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 792:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 793:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 794:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 795:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 796:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 797:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 798:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 799:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 800:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * None.<BR>
 801:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 802:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 803:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 804:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 805:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 806:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 807:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 808:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 809:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 810:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 811:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 812:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 813:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 814:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 815:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 816:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 817:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 818:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 819:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 820:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 821:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 822:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 823:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 824:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 825:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 826:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 827:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 828:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 829:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 830:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 831:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 832:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 833:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 834:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 835:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 836:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 837:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 838:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 839:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 840:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 841:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 842:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 843:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 844:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 845:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 846:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 847:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 848:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 849:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 850:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 851:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
  27              	 .loc 1 851 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 852:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 853:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) CCU4_GIDLC_SPRB_Msk;
  43              	 .loc 1 853 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a DB68     	 ldr r3,[r3,#12]
  46 000c 43F48072 	 orr r2,r3,#256
  47 0010 7B68     	 ldr r3,[r7,#4]
  48 0012 DA60     	 str r2,[r3,#12]
 854:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
  49              	 .loc 1 854 0
  50 0014 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE130:
  65 001e 00BF     	 .section .text.XMC_CCU4_SLICE_SetDitherCompareValue,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	XMC_CCU4_SLICE_SetDitherCompareValue:
  71              	.LFB157:
 855:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 856:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 857:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 858:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 859:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 860:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 861:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 862:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 863:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 864:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 865:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 866:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 867:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 868:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 869:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 870:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 871:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 872:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 873:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLS |= (uint32_t) CCU4_GIDLS_CPRB_Msk;
 874:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 875:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 876:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 877:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 878:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 879:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 880:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 881:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 882:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 883:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 884:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * module then returns as true.
 885:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 886:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 887:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 888:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 889:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 890:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 891:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 892:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 893:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 894:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 895:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 896:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 897:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 898:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 899:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 900:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 901:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 902:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 903:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 904:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 905:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 906:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 907:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 908:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 909:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 910:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 911:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 912:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 913:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 914:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
 915:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 916:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 917:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) clock_mask;
 918:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 919:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 920:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 921:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 922:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 923:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 924:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 925:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 926:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 927:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 928:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 929:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 930:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 931:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 932:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 933:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 934:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 935:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 936:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 937:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 938:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 939:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 940:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 941:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLC |= ((uint32_t) 1) << slice_number;
 942:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 943:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 944:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 945:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 946:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 947:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 948:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 949:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 950:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 951:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 952:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 953:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 954:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 955:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 956:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 957:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 958:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 959:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
 960:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 961:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
 962:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 963:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 964:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
 965:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 966:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLS |= ((uint32_t) 1) << slice_number;
 967:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 968:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 969:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 970:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 971:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
 972:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 973:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 974:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 975:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 976:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
 977:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
 978:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
 979:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
 980:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
 981:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 982:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 983:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * None.
 984:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 985:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 986:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
 987:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 988:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 989:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 990:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
 991:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 992:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 993:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 994:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 995:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
 996:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
 997:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
 998:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * with appropriate mask.
 999:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1000:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1001:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
1002:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1003:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
1004:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
1005:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1006:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1007:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1008:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1009:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
1010:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
1011:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1012:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1013:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1014:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1015:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
1016:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
1017:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1018:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1019:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1020:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1021:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1022:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
1023:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
1024:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
1025:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1026:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1027:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1028:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
1029:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
1030:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1031:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1032:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1033:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1034:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
1035:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
1036:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1037:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1038:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1039:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1040:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1041:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
1042:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
1043:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
1044:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1045:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1046:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1047:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
1048:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1049:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1050:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1051:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1052:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
1053:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1054:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
1055:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
1056:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1057:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1058:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1059:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1060:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1061:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1062:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1063:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1064:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1065:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
1066:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
1067:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1068:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1069:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1070:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1071:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1072:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1073:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
1074:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
1075:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1076:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1077:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
1078:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1079:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1080:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1081:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1082:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
1083:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
1084:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
1085:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
1086:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1087:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1088:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1089:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
1090:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1091:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1092:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1093:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1094:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
1095:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
1096:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
1097:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * edges present on the \b event selected.
1098:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1099:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1100:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1101:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1102:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1103:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1104:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1105:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1106:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
1107:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1108:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1109:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1110:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1111:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
1112:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
1113:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1114:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1115:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1116:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1117:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1118:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1119:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1120:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1121:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1122:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
1123:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1124:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1125:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1126:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1127:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
1128:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
1129:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
1130:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1131:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1132:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1133:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1134:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1135:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1136:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1137:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1138:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
1139:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1140:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1141:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1142:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1143:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
1144:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
1145:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
1146:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1147:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1148:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1149:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1150:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1151:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1152:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1153:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1154:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1155:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1156:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1157:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1158:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1159:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1160:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1161:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1162:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1163:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1164:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1165:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1166:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1167:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_IsValidSlic
1168:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1169:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1170:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1171:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU4V1) /* Defined for XMC4500, XMC4400, XMC4200, XMC4100 devices only */
1172:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1173:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1174:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1175:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1176:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1177:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1178:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1179:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1180:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1181:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1182:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1183:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1184:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1185:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1186:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1187:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1188:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1189:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  @note Only available for XMC4500, XMC4400, XMC4200 and XMC4100 series 
1190:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1191:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1192:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #else
1193:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1194:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1195:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1196:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1197:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1198:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1199:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1200:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1201:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1202:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1203:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1204:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1205:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1206:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1207:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1208:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1209:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1210:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1211:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1212:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1213:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
1214:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1215:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1216:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1217:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1218:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1219:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1220:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1221:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1222:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1223:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1224:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1225:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1226:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1227:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1228:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1229:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1230:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1231:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1232:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1233:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1234:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1235:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1236:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1237:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1238:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1239:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1240:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1241:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1242:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1243:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1244:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1245:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1246:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1247:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1248:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1249:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1250:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1251:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1252:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1253:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1254:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1255:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1256:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1257:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1258:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1259:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1260:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1261:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1262:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1263:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1264:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1265:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1266:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1267:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1268:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1269:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1270:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1271:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1272:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1273:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1274:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1275:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1276:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1277:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1278:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1279:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1280:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1281:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1282:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1283:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1284:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1285:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1286:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1287:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1288:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1289:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1290:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1291:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1292:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1293:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1294:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1295:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1296:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1297:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1298:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1299:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1300:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1301:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1302:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1303:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1304:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1305:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1306:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1307:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1308:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1309:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1310:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1311:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1312:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1313:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1314:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1315:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1316:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1317:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1318:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1319:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1320:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1321:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1322:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1323:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1324:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1325:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1326:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1327:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1328:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1329:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1330:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1331:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1332:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1333:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1334:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1335:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1336:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1337:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1338:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1339:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1340:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1341:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1342:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1343:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1344:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1345:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1346:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1347:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1348:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1349:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1350:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1351:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1352:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1353:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
1354:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1355:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1356:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1357:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1358:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1359:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1360:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1361:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1362:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1363:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1364:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1365:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1366:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1367:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1368:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1369:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1370:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1371:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1372:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1373:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1374:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1375:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1376:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1377:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1378:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1379:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1380:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1381:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1382:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1383:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1384:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1385:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1386:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1387:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1388:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1389:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1390:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
1391:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1392:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1393:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1394:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1395:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1396:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1397:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1398:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1399:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1400:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1401:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1402:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1403:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1404:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  None.
1405:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1406:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1407:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1408:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1409:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1410:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1411:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1412:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1413:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1414:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1415:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1416:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1417:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1418:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1419:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1420:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1421:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1422:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1423:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1424:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1425:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1426:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1427:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1428:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
1429:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1430:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1431:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1432:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1433:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1434:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1435:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1436:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1437:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1438:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1439:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1440:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1441:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1442:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1443:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1444:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1445:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1446:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TCCLR |= (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
1447:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1448:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1449:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1450:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1451:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1452:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1453:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1454:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1455:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1456:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1457:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1458:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1459:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1460:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1461:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1462:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1463:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1464:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1465:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TCCLR |= (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
1466:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1467:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1468:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1469:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1470:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1471:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE_t returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in comp
1472:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1473:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1474:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1475:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1476:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1477:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1478:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * invalid.
1479:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1480:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1481:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  None.
1482:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1483:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1484:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1485:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1486:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1487:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1488:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1489:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1490:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1491:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1492:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1493:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1494:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1495:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1496:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1497:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1498:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * reaching the terminal count.
1499:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1500:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1501:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1502:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1503:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1504:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1505:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1506:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1507:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <br>
1508:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1509:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1510:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1511:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1512:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1513:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1514:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1515:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1516:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1517:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1518:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1519:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1520:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1521:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1522:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1523:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
1524:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1525:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1526:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1527:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1528:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1529:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1530:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1531:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1532:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1533:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1534:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1535:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1536:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1537:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1538:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * greater than the compare value.
1539:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1540:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1541:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1542:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1543:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1544:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1545:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1546:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1547:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <br>
1548:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1549:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1550:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1551:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1552:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1553:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1554:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1555:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1556:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1557:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1558:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1559:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1560:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1561:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1562:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1563:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1564:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1565:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param period_val Timer period value
1566:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1567:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1568:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1569:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1570:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1571:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1572:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1573:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1574:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1575:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1576:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1577:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1578:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1579:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1580:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1581:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1582:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1583:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
1584:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1585:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1586:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1587:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1588:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1589:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1590:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1591:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1592:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1593:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1594:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1595:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1596:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1597:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1598:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1599:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1600:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1601:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1602:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1603:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1604:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1605:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1606:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1607:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1608:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
1609:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1610:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1611:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1612:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1613:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1614:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1615:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1616:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1617:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1618:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1619:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1620:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1621:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1622:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1623:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1624:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1625:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1626:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1627:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1628:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1629:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1630:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1631:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
1632:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1633:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1634:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1635:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1636:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1637:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1638:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1639:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1640:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1641:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1642:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1643:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1644:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1645:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1646:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1647:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1648:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1649:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1650:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1651:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1652:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1653:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1654:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1655:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1656:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1657:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1658:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1659:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1660:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1661:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1662:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1663:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1664:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1665:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1666:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1667:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1668:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1669:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1670:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1671:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1672:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1673:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1674:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1675:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1676:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * must be succeeded by this API.
1677:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1678:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1679:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1680:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  None.
1681:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1682:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t 
1683:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1684:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableShadowTransfer:Invalid Slice Pointer", XMC_CCU4_IsValidModule(module))
1685:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GCSS |= (uint32_t)shadow_transfer_msk;  
1686:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1687:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1688:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1689:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1690:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1691:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   uint16_t returns the current timer value
1692:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1693:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1694:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1695:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the latest timer value, from CC4yTIMER register.\n\n
1696:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1697:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1698:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerValue().
1699:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1700:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerValue(const XMC_CCU4_SLICE_t *const slice)
1701:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1702:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1703:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((uint16_t)slice->TIMER);
1704:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1705:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1706:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1707:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
1708:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                  Range: [0x0 to 0xFFFF]
1709:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1710:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1711:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1712:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1713:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Loads a new timer value, by setting CC4yTIMER register.\n\n
1714:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1715:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1716:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Request to load is ignored if the timer is running.
1717:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1718:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1719:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerValue().
1720:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1721:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerValue(XMC_CCU4_SLICE_t *const slice, const uint16_t tim
1722:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1723:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1724:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TIMER = (uint32_t) timer_val;
1725:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1726:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1727:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1728:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param period_dither Boolean instruction on dithering of period match
1729:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param duty_dither Boolean instruction on dithering of compare match
1730:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param spread Dither compare value
1731:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1732:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1733:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1734:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1735:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits
1736:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
1737:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
1738:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
1739:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
1740:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
1741:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetDitherCompareValue().
1742:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1743:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1744:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * After this API call, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask
1745:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * to transfer the dither value.
1746:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1747:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1748:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableDithering().
1749:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1750:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1751:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                     const bool period_dither,
1752:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                     const bool duty_dither,
1753:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****                                     const uint8_t spread);
1754:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1755:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1756:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1757:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1758:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1759:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1760:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1761:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.\n\n
1762:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This disables the Dither mode that was set in XMC_CCU4_SLICE_EnableDithering().
1763:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This API will not clear the dither compare value.
1764:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1765:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1766:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1767:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1768:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableDithering(XMC_CCU4_SLICE_t *const slice)
1769:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1770:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1771:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
1772:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1773:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1774:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1775:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1776:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1777:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1778:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1779:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1780:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the floating prescaler, by setting CC4yTC.FPE bit.\n\n
1781:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
1782:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
1783:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
1784:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1785:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1786:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()<BR> XMC_CCU4_SLICE_DisableFloatingPrescaler()
1787:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1788:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1789:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1790:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1791:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1792:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_FPE_Msk;
1793:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1794:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1795:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1796:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1797:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1798:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1799:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1800:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1801:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables the floating prescaler, by clearing CC4yTC.FPE bit.\n\n
1802:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This would return the prescaler to the normal mode.
1803:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The prescaler that would be applied is the value present in CC4yPSC.
1804:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1805:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1806:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableFloatingPrescaler().
1807:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1808:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1809:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1810:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1811:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_FPE_Msk);
1812:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1813:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1814:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1815:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1816:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param comp_val Dither compare value
1817:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1818:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1819:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1820:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1821:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1822:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.\n\n
1823:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
1824:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
1825:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU4_EnableShadowTransfer()
1826:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  * called with appropriate mask.
1827:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1828:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1829:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1830:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1831:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetDitherCompareValue(XMC_CCU4_SLICE_t *const slice, const uint
1832:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** {
  72              	 .loc 1 1832 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 83B0     	 sub sp,sp,#12
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
  88 0008 0B46     	 mov r3,r1
  89 000a FB70     	 strb r3,[r7,#3]
1833:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
1834:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->DITS = comp_val;
  90              	 .loc 1 1834 0
  91 000c FA78     	 ldrb r2,[r7,#3]
  92 000e 7B68     	 ldr r3,[r7,#4]
  93 0010 1A62     	 str r2,[r3,#32]
1835:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_ccu4.h **** }
  94              	 .loc 1 1835 0
  95 0012 0C37     	 adds r7,r7,#12
  96              	.LCFI9:
  97              	 .cfi_def_cfa_offset 4
  98 0014 BD46     	 mov sp,r7
  99              	.LCFI10:
 100              	 .cfi_def_cfa_register 13
 101              	 
 102 0016 5DF8047B 	 ldr r7,[sp],#4
 103              	.LCFI11:
 104              	 .cfi_restore 7
 105              	 .cfi_def_cfa_offset 0
 106 001a 7047     	 bx lr
 107              	 .cfi_endproc
 108              	.LFE157:
 110              	 .section .text.XMC_CCU4_lAssertReset,"ax",%progbits
 111              	 .align 2
 112              	 .thumb
 113              	 .thumb_func
 115              	XMC_CCU4_lAssertReset:
 116              	.LFB193:
 117              	 .file 2 "../Libraries/XMCLib/src/xmc_ccu4.c"
   1:../Libraries/XMCLib/src/xmc_ccu4.c **** /**
   2:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @file xmc_ccu4.c
   3:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @date 2016-01-12
   4:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
   5:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ccu4.c ****  * XMClib v2.1.4 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
   9:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ccu4.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ccu4.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ccu4.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ccu4.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ccu4.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ccu4.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ccu4.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ccu4.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ccu4.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ccu4.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ccu4.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ccu4.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ccu4.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  36:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ccu4.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  39:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  42:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  45:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-07-01:
  46:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - In XMC_CCU4_SLICE_StartConfig(), Options in XMC_ASSERT check for start mode is corrected. 
  47:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  48:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-07-24:
  49:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  50:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  51:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-08-17:
  52:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Start of prescaler XMC_CCU4_StartPrescaler() is invoked in XMC_CCU4_Init() API. <br>
  53:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Bug fix XMC_CCU4_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  54:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  55:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  56:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  57:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-10-07:
  58:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  59:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - DOC updates for the newly added APIs.
  60:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  61:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @endcond
  62:../Libraries/XMCLib/src/xmc_ccu4.c ****  */
  63:../Libraries/XMCLib/src/xmc_ccu4.c ****  
  64:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
  65:../Libraries/XMCLib/src/xmc_ccu4.c ****  * HEADER FILES
  66:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_ccu4.c **** #include "xmc_ccu4.h"
  68:../Libraries/XMCLib/src/xmc_ccu4.c **** 
  69:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU40)
  70:../Libraries/XMCLib/src/xmc_ccu4.c **** #include "xmc_scu.h"
  71:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_ccu4.c ****  * MACROS
  73:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  74:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_NUM_SLICES_PER_MODULE          (4U)
  75:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_DITHER_PERIOD_MASK       (1U)
  76:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  77:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  78:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  79:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  80:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
  81:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK  CCU4_CC4_INS1_EV0IS_Msk
  82:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
  83:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK  CCU4_CC4_INS_EV0IS_Msk
  84:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
  85:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GIDLC_CLOCK_MASK               (15U)
  86:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE0_MASK               (1U)
  87:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE1_MASK               (16U)
  88:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE2_MASK               (256U)
  89:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE3_MASK               (4096U)
  90:../Libraries/XMCLib/src/xmc_ccu4.c **** 
  91:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro to check if the clock selected enum passed is valid */
  92:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_CLOCK(clock) \
  93:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((clock == XMC_CCU4_CLOCK_SCU)        || \
  94:../Libraries/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_A) || \
  95:../Libraries/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_B) || \
  96:../Libraries/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_C))
  97:../Libraries/XMCLib/src/xmc_ccu4.c **** 
  98:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the event ID is valid*/
  99:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EVENT_ID(event_id) \
 100:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((event_id == XMC_CCU4_SLICE_EVENT_NONE)|| \
 101:../Libraries/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_0)   || \
 102:../Libraries/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_1)   || \
 103:../Libraries/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_2))
 104:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 105:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the edge sensitivity is valid*/
 106:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 107:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 108:../Libraries/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 109:../Libraries/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 110:../Libraries/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 111:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 112:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the filter clock cycles are valid */
 113:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EVENT_FILTER(cycles) \
 114:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((cycles == XMC_CCU4_SLICE_EVENT_FILTER_DISABLED) || \
 115:../Libraries/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES) || \
 116:../Libraries/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES) || \
 117:../Libraries/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES))
 118:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 119:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the Multi-channel input related action is valid*/
 120:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_MCS_ACTION(mcs_action) \
 121:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 122:../Libraries/XMCLib/src/xmc_ccu4.c ****      (mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 123:../Libraries/XMCLib/src/xmc_ccu4.c ****      (mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 124:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 125:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the SR line is valid*/
 126:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_SR_ID(id) \
 127:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((id == XMC_CCU4_SLICE_SR_ID_0) || \
 128:../Libraries/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_1) || \
 129:../Libraries/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_2) || \
 130:../Libraries/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_3))
 131:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 132:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro to check if the end mode enum passed is valid */
 133:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_CHECK_END_MODE(end_mode) \
 134:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_STOP) || \
 135:../Libraries/XMCLib/src/xmc_ccu4.c ****      (end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR) || \
 136:../Libraries/XMCLib/src/xmc_ccu4.c ****      (end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR))
 137:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 138:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
 139:../Libraries/XMCLib/src/xmc_ccu4.c ****  * LOCAL ROUTINES
 140:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
 141:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 142:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lAssertReset(const XMC_CCU4_MODULE_t *const module)
 143:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 118              	 .loc 2 143 0
 119              	 .cfi_startproc
 120              	 
 121              	 
 122 0000 80B5     	 push {r7,lr}
 123              	.LCFI12:
 124              	 .cfi_def_cfa_offset 8
 125              	 .cfi_offset 7,-8
 126              	 .cfi_offset 14,-4
 127 0002 82B0     	 sub sp,sp,#8
 128              	.LCFI13:
 129              	 .cfi_def_cfa_offset 16
 130 0004 00AF     	 add r7,sp,#0
 131              	.LCFI14:
 132              	 .cfi_def_cfa_register 7
 133 0006 7860     	 str r0,[r7,#4]
 144:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 134              	 .loc 2 144 0
 135 0008 7B68     	 ldr r3,[r7,#4]
 136 000a 124A     	 ldr r2,.L11
 137 000c 9342     	 cmp r3,r2
 138 000e 11D0     	 beq .L5
 139 0010 104A     	 ldr r2,.L11
 140 0012 9342     	 cmp r3,r2
 141 0014 03D8     	 bhi .L6
 142 0016 104A     	 ldr r2,.L11+4
 143 0018 9342     	 cmp r3,r2
 144 001a 07D0     	 beq .L7
 145:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 146:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU40:
 147:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU40);
 148:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 149:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 150:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 151:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU41:
 152:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU41);
 153:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 154:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 155:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 156:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 157:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU42:
 158:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU42);
 159:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 160:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 161:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 162:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 163:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU43:
 164:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU43);
 165:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 166:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 167:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 168:../Libraries/XMCLib/src/xmc_ccu4.c ****     default:
 169:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_ASSERT("XMC_CCU4_lAssertReset:Invalid Module Pointer", 0);
 170:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;   
 145              	 .loc 2 170 0
 146 001c 16E0     	 b .L3
 147              	.L6:
 144:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 148              	 .loc 2 144 0
 149 001e 0F4A     	 ldr r2,.L11+8
 150 0020 9342     	 cmp r3,r2
 151 0022 0BD0     	 beq .L8
 152 0024 0E4A     	 ldr r2,.L11+12
 153 0026 9342     	 cmp r3,r2
 154 0028 0CD0     	 beq .L9
 155              	 .loc 2 170 0
 156 002a 0FE0     	 b .L3
 157              	.L7:
 147:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 158              	 .loc 2 147 0
 159 002c 0420     	 movs r0,#4
 160 002e FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 148:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 161              	 .loc 2 148 0
 162 0032 0BE0     	 b .L3
 163              	.L5:
 152:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 164              	 .loc 2 152 0
 165 0034 0820     	 movs r0,#8
 166 0036 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 153:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 167              	 .loc 2 153 0
 168 003a 07E0     	 b .L3
 169              	.L8:
 158:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 170              	 .loc 2 158 0
 171 003c 1020     	 movs r0,#16
 172 003e FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 159:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 173              	 .loc 2 159 0
 174 0042 03E0     	 b .L3
 175              	.L9:
 164:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 176              	 .loc 2 164 0
 177 0044 0748     	 ldr r0,.L11+16
 178 0046 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 165:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 179              	 .loc 2 165 0
 180 004a 00BF     	 nop
 181              	.L3:
 171:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 172:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 173:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 182              	 .loc 2 173 0
 183 004c 0837     	 adds r7,r7,#8
 184              	.LCFI15:
 185              	 .cfi_def_cfa_offset 8
 186 004e BD46     	 mov sp,r7
 187              	.LCFI16:
 188              	 .cfi_def_cfa_register 13
 189              	 
 190 0050 80BD     	 pop {r7,pc}
 191              	.L12:
 192 0052 00BF     	 .align 2
 193              	.L11:
 194 0054 00000140 	 .word 1073807360
 195 0058 00C00040 	 .word 1073790976
 196 005c 00400140 	 .word 1073823744
 197 0060 00400048 	 .word 1207975936
 198 0064 01000010 	 .word 268435457
 199              	 .cfi_endproc
 200              	.LFE193:
 202              	 .section .text.XMC_CCU4_lDeassertReset,"ax",%progbits
 203              	 .align 2
 204              	 .thumb
 205              	 .thumb_func
 207              	XMC_CCU4_lDeassertReset:
 208              	.LFB194:
 174:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 175:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lDeassertReset(const XMC_CCU4_MODULE_t *const module)
 176:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 209              	 .loc 2 176 0
 210              	 .cfi_startproc
 211              	 
 212              	 
 213 0000 80B5     	 push {r7,lr}
 214              	.LCFI17:
 215              	 .cfi_def_cfa_offset 8
 216              	 .cfi_offset 7,-8
 217              	 .cfi_offset 14,-4
 218 0002 82B0     	 sub sp,sp,#8
 219              	.LCFI18:
 220              	 .cfi_def_cfa_offset 16
 221 0004 00AF     	 add r7,sp,#0
 222              	.LCFI19:
 223              	 .cfi_def_cfa_register 7
 224 0006 7860     	 str r0,[r7,#4]
 177:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 225              	 .loc 2 177 0
 226 0008 7B68     	 ldr r3,[r7,#4]
 227 000a 124A     	 ldr r2,.L21
 228 000c 9342     	 cmp r3,r2
 229 000e 11D0     	 beq .L15
 230 0010 104A     	 ldr r2,.L21
 231 0012 9342     	 cmp r3,r2
 232 0014 03D8     	 bhi .L16
 233 0016 104A     	 ldr r2,.L21+4
 234 0018 9342     	 cmp r3,r2
 235 001a 07D0     	 beq .L17
 178:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 179:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU40:
 180:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU40);
 181:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 182:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 183:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 184:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU41:
 185:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU41);
 186:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 187:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 188:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 189:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 190:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU42:
 191:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU42);
 192:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 193:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 194:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 195:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 196:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU43:
 197:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU43);
 198:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 199:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 200:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 201:../Libraries/XMCLib/src/xmc_ccu4.c ****     default:
 202:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_ASSERT("XMC_CCU4_lDeassertReset:Invalid Module Pointer", 0);
 203:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;   
 236              	 .loc 2 203 0
 237 001c 16E0     	 b .L13
 238              	.L16:
 177:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 239              	 .loc 2 177 0
 240 001e 0F4A     	 ldr r2,.L21+8
 241 0020 9342     	 cmp r3,r2
 242 0022 0BD0     	 beq .L18
 243 0024 0E4A     	 ldr r2,.L21+12
 244 0026 9342     	 cmp r3,r2
 245 0028 0CD0     	 beq .L19
 246              	 .loc 2 203 0
 247 002a 0FE0     	 b .L13
 248              	.L17:
 180:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 249              	 .loc 2 180 0
 250 002c 0420     	 movs r0,#4
 251 002e FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 181:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 252              	 .loc 2 181 0
 253 0032 0BE0     	 b .L13
 254              	.L15:
 185:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 255              	 .loc 2 185 0
 256 0034 0820     	 movs r0,#8
 257 0036 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 186:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 258              	 .loc 2 186 0
 259 003a 07E0     	 b .L13
 260              	.L18:
 191:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 261              	 .loc 2 191 0
 262 003c 1020     	 movs r0,#16
 263 003e FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 192:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 264              	 .loc 2 192 0
 265 0042 03E0     	 b .L13
 266              	.L19:
 197:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 267              	 .loc 2 197 0
 268 0044 0748     	 ldr r0,.L21+16
 269 0046 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 198:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 270              	 .loc 2 198 0
 271 004a 00BF     	 nop
 272              	.L13:
 204:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 205:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 206:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 273              	 .loc 2 206 0
 274 004c 0837     	 adds r7,r7,#8
 275              	.LCFI20:
 276              	 .cfi_def_cfa_offset 8
 277 004e BD46     	 mov sp,r7
 278              	.LCFI21:
 279              	 .cfi_def_cfa_register 13
 280              	 
 281 0050 80BD     	 pop {r7,pc}
 282              	.L22:
 283 0052 00BF     	 .align 2
 284              	.L21:
 285 0054 00000140 	 .word 1073807360
 286 0058 00C00040 	 .word 1073790976
 287 005c 00400140 	 .word 1073823744
 288 0060 00400048 	 .word 1207975936
 289 0064 01000010 	 .word 268435457
 290              	 .cfi_endproc
 291              	.LFE194:
 293              	 .section .text.XMC_CCU4_lGateClock,"ax",%progbits
 294              	 .align 2
 295              	 .thumb
 296              	 .thumb_func
 298              	XMC_CCU4_lGateClock:
 299              	.LFB195:
 207:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 208:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 209:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 210:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lGateClock(const XMC_CCU4_MODULE_t *const module)
 211:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 300              	 .loc 2 211 0
 301              	 .cfi_startproc
 302              	 
 303              	 
 304 0000 80B5     	 push {r7,lr}
 305              	.LCFI22:
 306              	 .cfi_def_cfa_offset 8
 307              	 .cfi_offset 7,-8
 308              	 .cfi_offset 14,-4
 309 0002 82B0     	 sub sp,sp,#8
 310              	.LCFI23:
 311              	 .cfi_def_cfa_offset 16
 312 0004 00AF     	 add r7,sp,#0
 313              	.LCFI24:
 314              	 .cfi_def_cfa_register 7
 315 0006 7860     	 str r0,[r7,#4]
 212:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 316              	 .loc 2 212 0
 317 0008 7B68     	 ldr r3,[r7,#4]
 318 000a 124A     	 ldr r2,.L31
 319 000c 9342     	 cmp r3,r2
 320 000e 11D0     	 beq .L25
 321 0010 104A     	 ldr r2,.L31
 322 0012 9342     	 cmp r3,r2
 323 0014 03D8     	 bhi .L26
 324 0016 104A     	 ldr r2,.L31+4
 325 0018 9342     	 cmp r3,r2
 326 001a 07D0     	 beq .L27
 213:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 214:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU40:
 215:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU40);
 216:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 217:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 218:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)      
 219:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU41:
 220:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU41);
 221:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 222:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 223:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 224:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)      
 225:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU42:
 226:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU42);
 227:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 228:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 229:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 230:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)      
 231:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU43:
 232:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU43);
 233:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 234:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif     
 235:../Libraries/XMCLib/src/xmc_ccu4.c ****  
 236:../Libraries/XMCLib/src/xmc_ccu4.c ****     default:
 237:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_ASSERT("XMC_CCU4_lGateClock:Invalid Module Pointer", 0);
 238:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;   
 327              	 .loc 2 238 0
 328 001c 16E0     	 b .L23
 329              	.L26:
 212:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 330              	 .loc 2 212 0
 331 001e 0F4A     	 ldr r2,.L31+8
 332 0020 9342     	 cmp r3,r2
 333 0022 0BD0     	 beq .L28
 334 0024 0E4A     	 ldr r2,.L31+12
 335 0026 9342     	 cmp r3,r2
 336 0028 0CD0     	 beq .L29
 337              	 .loc 2 238 0
 338 002a 0FE0     	 b .L23
 339              	.L27:
 215:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 340              	 .loc 2 215 0
 341 002c 0420     	 movs r0,#4
 342 002e FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 216:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 343              	 .loc 2 216 0
 344 0032 0BE0     	 b .L23
 345              	.L25:
 220:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 346              	 .loc 2 220 0
 347 0034 0820     	 movs r0,#8
 348 0036 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 221:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 349              	 .loc 2 221 0
 350 003a 07E0     	 b .L23
 351              	.L28:
 226:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 352              	 .loc 2 226 0
 353 003c 1020     	 movs r0,#16
 354 003e FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 227:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 355              	 .loc 2 227 0
 356 0042 03E0     	 b .L23
 357              	.L29:
 232:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 358              	 .loc 2 232 0
 359 0044 0748     	 ldr r0,.L31+16
 360 0046 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 233:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif     
 361              	 .loc 2 233 0
 362 004a 00BF     	 nop
 363              	.L23:
 239:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 240:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 241:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 364              	 .loc 2 241 0
 365 004c 0837     	 adds r7,r7,#8
 366              	.LCFI25:
 367              	 .cfi_def_cfa_offset 8
 368 004e BD46     	 mov sp,r7
 369              	.LCFI26:
 370              	 .cfi_def_cfa_register 13
 371              	 
 372 0050 80BD     	 pop {r7,pc}
 373              	.L32:
 374 0052 00BF     	 .align 2
 375              	.L31:
 376 0054 00000140 	 .word 1073807360
 377 0058 00C00040 	 .word 1073790976
 378 005c 00400140 	 .word 1073823744
 379 0060 00400048 	 .word 1207975936
 380 0064 01000010 	 .word 268435457
 381              	 .cfi_endproc
 382              	.LFE195:
 384              	 .section .text.XMC_CCU4_lUngateClock,"ax",%progbits
 385              	 .align 2
 386              	 .thumb
 387              	 .thumb_func
 389              	XMC_CCU4_lUngateClock:
 390              	.LFB196:
 242:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 243:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lUngateClock(const XMC_CCU4_MODULE_t *const module)
 244:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 391              	 .loc 2 244 0
 392              	 .cfi_startproc
 393              	 
 394              	 
 395 0000 80B5     	 push {r7,lr}
 396              	.LCFI27:
 397              	 .cfi_def_cfa_offset 8
 398              	 .cfi_offset 7,-8
 399              	 .cfi_offset 14,-4
 400 0002 82B0     	 sub sp,sp,#8
 401              	.LCFI28:
 402              	 .cfi_def_cfa_offset 16
 403 0004 00AF     	 add r7,sp,#0
 404              	.LCFI29:
 405              	 .cfi_def_cfa_register 7
 406 0006 7860     	 str r0,[r7,#4]
 245:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 407              	 .loc 2 245 0
 408 0008 7B68     	 ldr r3,[r7,#4]
 409 000a 124A     	 ldr r2,.L41
 410 000c 9342     	 cmp r3,r2
 411 000e 11D0     	 beq .L35
 412 0010 104A     	 ldr r2,.L41
 413 0012 9342     	 cmp r3,r2
 414 0014 03D8     	 bhi .L36
 415 0016 104A     	 ldr r2,.L41+4
 416 0018 9342     	 cmp r3,r2
 417 001a 07D0     	 beq .L37
 246:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 247:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU40:
 248:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU40);
 249:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 250:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 251:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)      
 252:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU41:
 253:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU41);
 254:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 255:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 256:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 257:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)      
 258:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU42:
 259:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU42);
 260:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 261:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 262:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 263:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)      
 264:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU43:
 265:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU43);
 266:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 267:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif  
 268:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 269:../Libraries/XMCLib/src/xmc_ccu4.c ****     default:
 270:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_ASSERT("XMC_CCU4_lUngateClock:Invalid Module Pointer", 0);
 271:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;   
 418              	 .loc 2 271 0
 419 001c 16E0     	 b .L33
 420              	.L36:
 245:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 421              	 .loc 2 245 0
 422 001e 0F4A     	 ldr r2,.L41+8
 423 0020 9342     	 cmp r3,r2
 424 0022 0BD0     	 beq .L38
 425 0024 0E4A     	 ldr r2,.L41+12
 426 0026 9342     	 cmp r3,r2
 427 0028 0CD0     	 beq .L39
 428              	 .loc 2 271 0
 429 002a 0FE0     	 b .L33
 430              	.L37:
 248:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 431              	 .loc 2 248 0
 432 002c 0420     	 movs r0,#4
 433 002e FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 249:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 434              	 .loc 2 249 0
 435 0032 0BE0     	 b .L33
 436              	.L35:
 253:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 437              	 .loc 2 253 0
 438 0034 0820     	 movs r0,#8
 439 0036 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 254:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 440              	 .loc 2 254 0
 441 003a 07E0     	 b .L33
 442              	.L38:
 259:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 443              	 .loc 2 259 0
 444 003c 1020     	 movs r0,#16
 445 003e FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 260:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 446              	 .loc 2 260 0
 447 0042 03E0     	 b .L33
 448              	.L39:
 265:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 449              	 .loc 2 265 0
 450 0044 0748     	 ldr r0,.L41+16
 451 0046 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 266:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif  
 452              	 .loc 2 266 0
 453 004a 00BF     	 nop
 454              	.L33:
 272:../Libraries/XMCLib/src/xmc_ccu4.c ****     
 273:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 274:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 455              	 .loc 2 274 0
 456 004c 0837     	 adds r7,r7,#8
 457              	.LCFI30:
 458              	 .cfi_def_cfa_offset 8
 459 004e BD46     	 mov sp,r7
 460              	.LCFI31:
 461              	 .cfi_def_cfa_register 13
 462              	 
 463 0050 80BD     	 pop {r7,pc}
 464              	.L42:
 465 0052 00BF     	 .align 2
 466              	.L41:
 467 0054 00000140 	 .word 1073807360
 468 0058 00C00040 	 .word 1073790976
 469 005c 00400140 	 .word 1073823744
 470 0060 00400048 	 .word 1207975936
 471 0064 01000010 	 .word 268435457
 472              	 .cfi_endproc
 473              	.LFE196:
 475              	 .section .text.XMC_CCU4_EnableModule,"ax",%progbits
 476              	 .align 2
 477              	 .global XMC_CCU4_EnableModule
 478              	 .thumb
 479              	 .thumb_func
 481              	XMC_CCU4_EnableModule:
 482              	.LFB197:
 275:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 276:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 277:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined (XMC_ASSERT_ENABLE)
 278:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsInputvalid(XMC_CCU4_SLICE_INPUT_t input)
 279:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 280:../Libraries/XMCLib/src/xmc_ccu4.c **** #if (UC_SERIES == XMC14)
 281:../Libraries/XMCLib/src/xmc_ccu4.c ****   return (input < 48U);
 282:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 283:../Libraries/XMCLib/src/xmc_ccu4.c ****   return (input < 16U);
 284:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 285:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 286:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 287:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
 288:../Libraries/XMCLib/src/xmc_ccu4.c ****  * API IMPLEMENTATION
 289:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
 290:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 291:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module)
 292:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 483              	 .loc 2 292 0
 484              	 .cfi_startproc
 485              	 
 486              	 
 487 0000 80B5     	 push {r7,lr}
 488              	.LCFI32:
 489              	 .cfi_def_cfa_offset 8
 490              	 .cfi_offset 7,-8
 491              	 .cfi_offset 14,-4
 492 0002 82B0     	 sub sp,sp,#8
 493              	.LCFI33:
 494              	 .cfi_def_cfa_offset 16
 495 0004 00AF     	 add r7,sp,#0
 496              	.LCFI34:
 497              	 .cfi_def_cfa_register 7
 498 0006 7860     	 str r0,[r7,#4]
 293:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_EnableModule:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 294:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 295:../Libraries/XMCLib/src/xmc_ccu4.c **** #if UC_FAMILY == XMC4
 296:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable CCU4 module clock */
 297:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
 499              	 .loc 2 297 0
 500 0008 1020     	 movs r0,#16
 501 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 298:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 299:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 300:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 301:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lUngateClock(module);
 502              	 .loc 2 301 0
 503 000e 7868     	 ldr r0,[r7,#4]
 504 0010 FFF7FEFF 	 bl XMC_CCU4_lUngateClock
 302:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 303:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 304:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 305:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lDeassertReset(module);
 505              	 .loc 2 305 0
 506 0014 7868     	 ldr r0,[r7,#4]
 507 0016 FFF7FEFF 	 bl XMC_CCU4_lDeassertReset
 306:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 307:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 508              	 .loc 2 307 0
 509 001a 0837     	 adds r7,r7,#8
 510              	.LCFI35:
 511              	 .cfi_def_cfa_offset 8
 512 001c BD46     	 mov sp,r7
 513              	.LCFI36:
 514              	 .cfi_def_cfa_register 13
 515              	 
 516 001e 80BD     	 pop {r7,pc}
 517              	 .cfi_endproc
 518              	.LFE197:
 520              	 .section .text.XMC_CCU4_DisableModule,"ax",%progbits
 521              	 .align 2
 522              	 .global XMC_CCU4_DisableModule
 523              	 .thumb
 524              	 .thumb_func
 526              	XMC_CCU4_DisableModule:
 527              	.LFB198:
 308:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 309:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module)
 310:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 528              	 .loc 2 310 0
 529              	 .cfi_startproc
 530              	 
 531              	 
 532 0000 80B5     	 push {r7,lr}
 533              	.LCFI37:
 534              	 .cfi_def_cfa_offset 8
 535              	 .cfi_offset 7,-8
 536              	 .cfi_offset 14,-4
 537 0002 82B0     	 sub sp,sp,#8
 538              	.LCFI38:
 539              	 .cfi_def_cfa_offset 16
 540 0004 00AF     	 add r7,sp,#0
 541              	.LCFI39:
 542              	 .cfi_def_cfa_register 7
 543 0006 7860     	 str r0,[r7,#4]
 311:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_DisableModule:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 312:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 313:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 314:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lAssertReset(module);
 544              	 .loc 2 314 0
 545 0008 7868     	 ldr r0,[r7,#4]
 546 000a FFF7FEFF 	 bl XMC_CCU4_lAssertReset
 315:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 316:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 317:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 318:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lGateClock(module);
 547              	 .loc 2 318 0
 548 000e 7868     	 ldr r0,[r7,#4]
 549 0010 FFF7FEFF 	 bl XMC_CCU4_lGateClock
 319:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 320:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 550              	 .loc 2 320 0
 551 0014 0837     	 adds r7,r7,#8
 552              	.LCFI40:
 553              	 .cfi_def_cfa_offset 8
 554 0016 BD46     	 mov sp,r7
 555              	.LCFI41:
 556              	 .cfi_def_cfa_register 13
 557              	 
 558 0018 80BD     	 pop {r7,pc}
 559              	 .cfi_endproc
 560              	.LFE198:
 562 001a 00BF     	 .section .text.XMC_CCU4_Init,"ax",%progbits
 563              	 .align 2
 564              	 .global XMC_CCU4_Init
 565              	 .thumb
 566              	 .thumb_func
 568              	XMC_CCU4_Init:
 569              	.LFB199:
 321:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 322:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to initialize CCU4 global resources  */
 323:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action)
 324:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 570              	 .loc 2 324 0
 571              	 .cfi_startproc
 572              	 
 573              	 
 574 0000 80B5     	 push {r7,lr}
 575              	.LCFI42:
 576              	 .cfi_def_cfa_offset 8
 577              	 .cfi_offset 7,-8
 578              	 .cfi_offset 14,-4
 579 0002 84B0     	 sub sp,sp,#16
 580              	.LCFI43:
 581              	 .cfi_def_cfa_offset 24
 582 0004 00AF     	 add r7,sp,#0
 583              	.LCFI44:
 584              	 .cfi_def_cfa_register 7
 585 0006 7860     	 str r0,[r7,#4]
 586 0008 0B46     	 mov r3,r1
 587 000a FB70     	 strb r3,[r7,#3]
 325:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 326:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 327:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_Init:Invalid module pointer", XMC_CCU4_IsValidModule(module));
 328:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_Init:Invalid mcs action", XMC_CCU4_SLICE_CHECK_MCS_ACTION(mcs_action));
 329:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 330:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable CCU4 module */
 331:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_EnableModule(module);
 588              	 .loc 2 331 0
 589 000c 7868     	 ldr r0,[r7,#4]
 590 000e FFF7FEFF 	 bl XMC_CCU4_EnableModule
 332:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Start the prescaler */
 333:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_StartPrescaler(module);
 591              	 .loc 2 333 0
 592 0012 7868     	 ldr r0,[r7,#4]
 593 0014 FFF7FEFF 	 bl XMC_CCU4_StartPrescaler
 334:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 335:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 594              	 .loc 2 335 0
 595 0018 7B68     	 ldr r3,[r7,#4]
 596 001a 1B68     	 ldr r3,[r3]
 597 001c FB60     	 str r3,[r7,#12]
 336:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t) CCU4_GCTRL_MSDE_Msk);
 598              	 .loc 2 336 0
 599 001e FB68     	 ldr r3,[r7,#12]
 600 0020 23F44043 	 bic r3,r3,#49152
 601 0024 FB60     	 str r3,[r7,#12]
 337:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t) mcs_action) << CCU4_GCTRL_MSDE_Pos;
 602              	 .loc 2 337 0
 603 0026 FB78     	 ldrb r3,[r7,#3]
 604 0028 9B03     	 lsls r3,r3,#14
 605 002a FA68     	 ldr r2,[r7,#12]
 606 002c 1343     	 orrs r3,r3,r2
 607 002e FB60     	 str r3,[r7,#12]
 338:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 339:../Libraries/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 608              	 .loc 2 339 0
 609 0030 7B68     	 ldr r3,[r7,#4]
 610 0032 FA68     	 ldr r2,[r7,#12]
 611 0034 1A60     	 str r2,[r3]
 340:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 612              	 .loc 2 340 0
 613 0036 1037     	 adds r7,r7,#16
 614              	.LCFI45:
 615              	 .cfi_def_cfa_offset 8
 616 0038 BD46     	 mov sp,r7
 617              	.LCFI46:
 618              	 .cfi_def_cfa_register 13
 619              	 
 620 003a 80BD     	 pop {r7,pc}
 621              	 .cfi_endproc
 622              	.LFE199:
 624              	 .section .text.XMC_CCU4_SetModuleClock,"ax",%progbits
 625              	 .align 2
 626              	 .global XMC_CCU4_SetModuleClock
 627              	 .thumb
 628              	 .thumb_func
 630              	XMC_CCU4_SetModuleClock:
 631              	.LFB200:
 341:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 342:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to select CCU4 module clock */
 343:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock)
 344:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 632              	 .loc 2 344 0
 633              	 .cfi_startproc
 634              	 
 635              	 
 636              	 
 637 0000 80B4     	 push {r7}
 638              	.LCFI47:
 639              	 .cfi_def_cfa_offset 4
 640              	 .cfi_offset 7,-4
 641 0002 85B0     	 sub sp,sp,#20
 642              	.LCFI48:
 643              	 .cfi_def_cfa_offset 24
 644 0004 00AF     	 add r7,sp,#0
 645              	.LCFI49:
 646              	 .cfi_def_cfa_register 7
 647 0006 7860     	 str r0,[r7,#4]
 648 0008 0B46     	 mov r3,r1
 649 000a FB70     	 strb r3,[r7,#3]
 345:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 346:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 347:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetModuleClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 348:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetModuleClock:Invalid Module Clock", XMC_CCU4_SLICE_CHECK_CLOCK(clock));
 349:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 350:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 650              	 .loc 2 350 0
 651 000c 7B68     	 ldr r3,[r7,#4]
 652 000e 1B68     	 ldr r3,[r3]
 653 0010 FB60     	 str r3,[r7,#12]
 351:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t) CCU4_GCTRL_PCIS_Msk);
 654              	 .loc 2 351 0
 655 0012 FB68     	 ldr r3,[r7,#12]
 656 0014 23F03003 	 bic r3,r3,#48
 657 0018 FB60     	 str r3,[r7,#12]
 352:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t) clock) << CCU4_GCTRL_PCIS_Pos;
 658              	 .loc 2 352 0
 659 001a FB78     	 ldrb r3,[r7,#3]
 660 001c 1B01     	 lsls r3,r3,#4
 661 001e FA68     	 ldr r2,[r7,#12]
 662 0020 1343     	 orrs r3,r3,r2
 663 0022 FB60     	 str r3,[r7,#12]
 353:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 354:../Libraries/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 664              	 .loc 2 354 0
 665 0024 7B68     	 ldr r3,[r7,#4]
 666 0026 FA68     	 ldr r2,[r7,#12]
 667 0028 1A60     	 str r2,[r3]
 355:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 668              	 .loc 2 355 0
 669 002a 1437     	 adds r7,r7,#20
 670              	.LCFI50:
 671              	 .cfi_def_cfa_offset 4
 672 002c BD46     	 mov sp,r7
 673              	.LCFI51:
 674              	 .cfi_def_cfa_register 13
 675              	 
 676 002e 5DF8047B 	 ldr r7,[sp],#4
 677              	.LCFI52:
 678              	 .cfi_restore 7
 679              	 .cfi_def_cfa_offset 0
 680 0032 7047     	 bx lr
 681              	 .cfi_endproc
 682              	.LFE200:
 684              	 .section .text.XMC_CCU4_SetMultiChannelShadowTransferMode,"ax",%progbits
 685              	 .align 2
 686              	 .global XMC_CCU4_SetMultiChannelShadowTransferMode
 687              	 .thumb
 688              	 .thumb_func
 690              	XMC_CCU4_SetMultiChannelShadowTransferMode:
 691              	.LFB201:
 356:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 357:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU4x.MCSS input. *
 358:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SetMultiChannelShadowTransferMode(XMC_CCU4_MODULE_t *const module, const uint32_t sli
 359:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 692              	 .loc 2 359 0
 693              	 .cfi_startproc
 694              	 
 695              	 
 696              	 
 697 0000 80B4     	 push {r7}
 698              	.LCFI53:
 699              	 .cfi_def_cfa_offset 4
 700              	 .cfi_offset 7,-4
 701 0002 85B0     	 sub sp,sp,#20
 702              	.LCFI54:
 703              	 .cfi_def_cfa_offset 24
 704 0004 00AF     	 add r7,sp,#0
 705              	.LCFI55:
 706              	 .cfi_def_cfa_register 7
 707 0006 7860     	 str r0,[r7,#4]
 708 0008 3960     	 str r1,[r7]
 360:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 361:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 362:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU4_IsValidM
 363:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 364:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 709              	 .loc 2 364 0
 710 000a 7B68     	 ldr r3,[r7,#4]
 711 000c 1B68     	 ldr r3,[r3]
 712 000e FB60     	 str r3,[r7,#12]
 365:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 713              	 .loc 2 365 0
 714 0010 3B68     	 ldr r3,[r7]
 715 0012 1B0C     	 lsrs r3,r3,#16
 716 0014 DB43     	 mvns r3,r3
 717 0016 FA68     	 ldr r2,[r7,#12]
 718 0018 1340     	 ands r3,r3,r2
 719 001a FB60     	 str r3,[r7,#12]
 366:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 720              	 .loc 2 366 0
 721 001c 3B68     	 ldr r3,[r7]
 722 001e 9BB2     	 uxth r3,r3
 723 0020 FA68     	 ldr r2,[r7,#12]
 724 0022 1343     	 orrs r3,r3,r2
 725 0024 FB60     	 str r3,[r7,#12]
 367:../Libraries/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 726              	 .loc 2 367 0
 727 0026 7B68     	 ldr r3,[r7,#4]
 728 0028 FA68     	 ldr r2,[r7,#12]
 729 002a 1A60     	 str r2,[r3]
 368:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 730              	 .loc 2 368 0
 731 002c 1437     	 adds r7,r7,#20
 732              	.LCFI56:
 733              	 .cfi_def_cfa_offset 4
 734 002e BD46     	 mov sp,r7
 735              	.LCFI57:
 736              	 .cfi_def_cfa_register 13
 737              	 
 738 0030 5DF8047B 	 ldr r7,[sp],#4
 739              	.LCFI58:
 740              	 .cfi_restore 7
 741              	 .cfi_def_cfa_offset 0
 742 0034 7047     	 bx lr
 743              	 .cfi_endproc
 744              	.LFE201:
 746 0036 00BF     	 .section .text.XMC_CCU4_SLICE_CompareInit,"ax",%progbits
 747              	 .align 2
 748              	 .global XMC_CCU4_SLICE_CompareInit
 749              	 .thumb
 750              	 .thumb_func
 752              	XMC_CCU4_SLICE_CompareInit:
 753              	.LFB202:
 369:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 370:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure CC4 Slice as Timer */
 371:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 372:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                            const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init)
 373:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 754              	 .loc 2 373 0
 755              	 .cfi_startproc
 756              	 
 757              	 
 758              	 
 759 0000 80B4     	 push {r7}
 760              	.LCFI59:
 761              	 .cfi_def_cfa_offset 4
 762              	 .cfi_offset 7,-4
 763 0002 83B0     	 sub sp,sp,#12
 764              	.LCFI60:
 765              	 .cfi_def_cfa_offset 16
 766 0004 00AF     	 add r7,sp,#0
 767              	.LCFI61:
 768              	 .cfi_def_cfa_register 7
 769 0006 7860     	 str r0,[r7,#4]
 770 0008 3960     	 str r1,[r7]
 374:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 375:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CompareInit:Compare Init Pointer is NULL",
 376:../Libraries/XMCLib/src/xmc_ccu4.c ****              (XMC_CCU4_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 377:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 378:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program the timer mode */
 379:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = compare_init->tc;
 771              	 .loc 2 379 0
 772 000a 3B68     	 ldr r3,[r7]
 773 000c 1A68     	 ldr r2,[r3]
 774 000e 7B68     	 ldr r3,[r7,#4]
 775 0010 5A61     	 str r2,[r3,#20]
 380:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable the timer concatenation */
 381:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = ((uint32_t) compare_init->timer_concatenation << CCU4_CC4_CMC_TCE_Pos);
 776              	 .loc 2 381 0
 777 0012 3B68     	 ldr r3,[r7]
 778 0014 5B79     	 ldrb r3,[r3,#5]
 779 0016 C3F34013 	 ubfx r3,r3,#5,#1
 780 001a DBB2     	 uxtb r3,r3
 781 001c 1A05     	 lsls r2,r3,#20
 782 001e 7B68     	 ldr r3,[r7,#4]
 783 0020 5A60     	 str r2,[r3,#4]
 382:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program initial prescaler divider value */
 383:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 784              	 .loc 2 383 0
 785 0022 3B68     	 ldr r3,[r7]
 786 0024 1B79     	 ldrb r3,[r3,#4]
 787 0026 C3F30303 	 ubfx r3,r3,#0,#4
 788 002a DBB2     	 uxtb r3,r3
 789 002c 1A46     	 mov r2,r3
 790 002e 7B68     	 ldr r3,[r7,#4]
 791 0030 5A62     	 str r2,[r3,#36]
 384:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program the dither compare value */
 385:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 792              	 .loc 2 385 0
 793 0032 3B68     	 ldr r3,[r7]
 794 0034 5B79     	 ldrb r3,[r3,#5]
 795 0036 C3F30303 	 ubfx r3,r3,#0,#4
 796 003a DBB2     	 uxtb r3,r3
 797 003c 1A46     	 mov r2,r3
 798 003e 7B68     	 ldr r3,[r7,#4]
 799 0040 1A62     	 str r2,[r3,#32]
 386:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program timer output passive level */
 387:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSL = (uint32_t) compare_init->passive_level;
 800              	 .loc 2 387 0
 801 0042 3B68     	 ldr r3,[r7]
 802 0044 5B79     	 ldrb r3,[r3,#5]
 803 0046 C3F30013 	 ubfx r3,r3,#4,#1
 804 004a DBB2     	 uxtb r3,r3
 805 004c 1A46     	 mov r2,r3
 806 004e 7B68     	 ldr r3,[r7,#4]
 807 0050 9A61     	 str r2,[r3,#24]
 388:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program floating prescaler compare value */
 389:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 808              	 .loc 2 389 0
 809 0052 3B68     	 ldr r3,[r7]
 810 0054 1B79     	 ldrb r3,[r3,#4]
 811 0056 C3F30313 	 ubfx r3,r3,#4,#4
 812 005a DBB2     	 uxtb r3,r3
 813 005c 1A46     	 mov r2,r3
 814 005e 7B68     	 ldr r3,[r7,#4]
 815 0060 DA62     	 str r2,[r3,#44]
 390:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 816              	 .loc 2 390 0
 817 0062 0C37     	 adds r7,r7,#12
 818              	.LCFI62:
 819              	 .cfi_def_cfa_offset 4
 820 0064 BD46     	 mov sp,r7
 821              	.LCFI63:
 822              	 .cfi_def_cfa_register 13
 823              	 
 824 0066 5DF8047B 	 ldr r7,[sp],#4
 825              	.LCFI64:
 826              	 .cfi_restore 7
 827              	 .cfi_def_cfa_offset 0
 828 006a 7047     	 bx lr
 829              	 .cfi_endproc
 830              	.LFE202:
 832              	 .section .text.XMC_CCU4_SLICE_CaptureInit,"ax",%progbits
 833              	 .align 2
 834              	 .global XMC_CCU4_SLICE_CaptureInit
 835              	 .thumb
 836              	 .thumb_func
 838              	XMC_CCU4_SLICE_CaptureInit:
 839              	.LFB203:
 391:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 392:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure CC4 Slice for Capture */
 393:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
 394:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                        const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init)
 395:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 840              	 .loc 2 395 0
 841              	 .cfi_startproc
 842              	 
 843              	 
 844              	 
 845 0000 80B4     	 push {r7}
 846              	.LCFI65:
 847              	 .cfi_def_cfa_offset 4
 848              	 .cfi_offset 7,-4
 849 0002 83B0     	 sub sp,sp,#12
 850              	.LCFI66:
 851              	 .cfi_def_cfa_offset 16
 852 0004 00AF     	 add r7,sp,#0
 853              	.LCFI67:
 854              	 .cfi_def_cfa_register 7
 855 0006 7860     	 str r0,[r7,#4]
 856 0008 3960     	 str r1,[r7]
 396:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 397:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CaptureInit:Capture Init Pointer is NULL",
 398:../Libraries/XMCLib/src/xmc_ccu4.c ****              (XMC_CCU4_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 399:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 400:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program the capture mode */
 401:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = capture_init->tc;
 857              	 .loc 2 401 0
 858 000a 3B68     	 ldr r3,[r7]
 859 000c 1A68     	 ldr r2,[r3]
 860 000e 7B68     	 ldr r3,[r7,#4]
 861 0010 5A61     	 str r2,[r3,#20]
 402:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable the timer concatenation */
 403:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = ((uint32_t)capture_init->timer_concatenation << CCU4_CC4_CMC_TCE_Pos);
 862              	 .loc 2 403 0
 863 0012 3B68     	 ldr r3,[r7]
 864 0014 5B79     	 ldrb r3,[r3,#5]
 865 0016 C3F30003 	 ubfx r3,r3,#0,#1
 866 001a DBB2     	 uxtb r3,r3
 867 001c 1A05     	 lsls r2,r3,#20
 868 001e 7B68     	 ldr r3,[r7,#4]
 869 0020 5A60     	 str r2,[r3,#4]
 404:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program initial prescaler divider value */
 405:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 870              	 .loc 2 405 0
 871 0022 3B68     	 ldr r3,[r7]
 872 0024 1B79     	 ldrb r3,[r3,#4]
 873 0026 C3F30303 	 ubfx r3,r3,#0,#4
 874 002a DBB2     	 uxtb r3,r3
 875 002c 1A46     	 mov r2,r3
 876 002e 7B68     	 ldr r3,[r7,#4]
 877 0030 5A62     	 str r2,[r3,#36]
 406:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program initial floating prescaler compare value */
 407:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 878              	 .loc 2 407 0
 879 0032 3B68     	 ldr r3,[r7]
 880 0034 1B79     	 ldrb r3,[r3,#4]
 881 0036 C3F30313 	 ubfx r3,r3,#4,#4
 882 003a DBB2     	 uxtb r3,r3
 883 003c 1A46     	 mov r2,r3
 884 003e 7B68     	 ldr r3,[r7,#4]
 885 0040 DA62     	 str r2,[r3,#44]
 408:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 886              	 .loc 2 408 0
 887 0042 0C37     	 adds r7,r7,#12
 888              	.LCFI68:
 889              	 .cfi_def_cfa_offset 4
 890 0044 BD46     	 mov sp,r7
 891              	.LCFI69:
 892              	 .cfi_def_cfa_register 13
 893              	 
 894 0046 5DF8047B 	 ldr r7,[sp],#4
 895              	.LCFI70:
 896              	 .cfi_restore 7
 897              	 .cfi_def_cfa_offset 0
 898 004a 7047     	 bx lr
 899              	 .cfi_endproc
 900              	.LFE203:
 902              	 .section .text.XMC_CCU4_SLICE_StartConfig,"ax",%progbits
 903              	 .align 2
 904              	 .global XMC_CCU4_SLICE_StartConfig
 905              	 .thumb
 906              	 .thumb_func
 908              	XMC_CCU4_SLICE_StartConfig:
 909              	.LFB204:
 409:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 410:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 411:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the Start trigger function of a slice */
 412:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
 413:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                        const XMC_CCU4_SLICE_EVENT_t event,
 414:../Libraries/XMCLib/src/xmc_ccu4.c ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode)
 415:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 910              	 .loc 2 415 0
 911              	 .cfi_startproc
 912              	 
 913              	 
 914              	 
 915 0000 80B4     	 push {r7}
 916              	.LCFI71:
 917              	 .cfi_def_cfa_offset 4
 918              	 .cfi_offset 7,-4
 919 0002 85B0     	 sub sp,sp,#20
 920              	.LCFI72:
 921              	 .cfi_def_cfa_offset 24
 922 0004 00AF     	 add r7,sp,#0
 923              	.LCFI73:
 924              	 .cfi_def_cfa_register 7
 925 0006 7860     	 str r0,[r7,#4]
 926 0008 0B46     	 mov r3,r1
 927 000a FB70     	 strb r3,[r7,#3]
 928 000c 1346     	 mov r3,r2
 929 000e BB70     	 strb r3,[r7,#2]
 416:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 417:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 418:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 419:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 420:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 421:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Start Mode", 
 422:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR) ||\
 423:../Libraries/XMCLib/src/xmc_ccu4.c **** 		          (start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START)));
 424:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the stop function */
 425:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 930              	 .loc 2 425 0
 931 0010 7B68     	 ldr r3,[r7,#4]
 932 0012 5B68     	 ldr r3,[r3,#4]
 933 0014 BB60     	 str r3,[r7,#8]
 426:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_STRTS_Msk);
 934              	 .loc 2 426 0
 935 0016 BB68     	 ldr r3,[r7,#8]
 936 0018 23F00303 	 bic r3,r3,#3
 937 001c BB60     	 str r3,[r7,#8]
 427:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_STRTS_Pos;
 938              	 .loc 2 427 0
 939 001e FB78     	 ldrb r3,[r7,#3]
 940 0020 BA68     	 ldr r2,[r7,#8]
 941 0022 1343     	 orrs r3,r3,r2
 942 0024 BB60     	 str r3,[r7,#8]
 428:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 429:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 943              	 .loc 2 429 0
 944 0026 7B68     	 ldr r3,[r7,#4]
 945 0028 BA68     	 ldr r2,[r7,#8]
 946 002a 5A60     	 str r2,[r3,#4]
 430:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 431:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc  = slice->TC;
 947              	 .loc 2 431 0
 948 002c 7B68     	 ldr r3,[r7,#4]
 949 002e 5B69     	 ldr r3,[r3,#20]
 950 0030 FB60     	 str r3,[r7,#12]
 432:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure the start mode */
 433:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR)
 951              	 .loc 2 433 0
 952 0032 BB78     	 ldrb r3,[r7,#2]
 953 0034 012B     	 cmp r3,#1
 954 0036 04D1     	 bne .L51
 434:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 435:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t)CCU4_CC4_TC_STRM_Msk;
 955              	 .loc 2 435 0
 956 0038 FB68     	 ldr r3,[r7,#12]
 957 003a 43F48063 	 orr r3,r3,#1024
 958 003e FB60     	 str r3,[r7,#12]
 959 0040 03E0     	 b .L52
 960              	.L51:
 436:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 437:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 438:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 439:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t)CCU4_CC4_TC_STRM_Msk);
 961              	 .loc 2 439 0
 962 0042 FB68     	 ldr r3,[r7,#12]
 963 0044 23F48063 	 bic r3,r3,#1024
 964 0048 FB60     	 str r3,[r7,#12]
 965              	.L52:
 440:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 441:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 442:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 966              	 .loc 2 442 0
 967 004a 7B68     	 ldr r3,[r7,#4]
 968 004c FA68     	 ldr r2,[r7,#12]
 969 004e 5A61     	 str r2,[r3,#20]
 443:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 970              	 .loc 2 443 0
 971 0050 1437     	 adds r7,r7,#20
 972              	.LCFI74:
 973              	 .cfi_def_cfa_offset 4
 974 0052 BD46     	 mov sp,r7
 975              	.LCFI75:
 976              	 .cfi_def_cfa_register 13
 977              	 
 978 0054 5DF8047B 	 ldr r7,[sp],#4
 979              	.LCFI76:
 980              	 .cfi_restore 7
 981              	 .cfi_def_cfa_offset 0
 982 0058 7047     	 bx lr
 983              	 .cfi_endproc
 984              	.LFE204:
 986 005a 00BF     	 .section .text.XMC_CCU4_SLICE_StopConfig,"ax",%progbits
 987              	 .align 2
 988              	 .global XMC_CCU4_SLICE_StopConfig
 989              	 .thumb
 990              	 .thumb_func
 992              	XMC_CCU4_SLICE_StopConfig:
 993              	.LFB205:
 444:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 445:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the Stop trigger function of a slice */
 446:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
 447:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                       const XMC_CCU4_SLICE_EVENT_t event,
 448:../Libraries/XMCLib/src/xmc_ccu4.c ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode)
 449:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 994              	 .loc 2 449 0
 995              	 .cfi_startproc
 996              	 
 997              	 
 998              	 
 999 0000 80B4     	 push {r7}
 1000              	.LCFI77:
 1001              	 .cfi_def_cfa_offset 4
 1002              	 .cfi_offset 7,-4
 1003 0002 85B0     	 sub sp,sp,#20
 1004              	.LCFI78:
 1005              	 .cfi_def_cfa_offset 24
 1006 0004 00AF     	 add r7,sp,#0
 1007              	.LCFI79:
 1008              	 .cfi_def_cfa_register 7
 1009 0006 7860     	 str r0,[r7,#4]
 1010 0008 0B46     	 mov r3,r1
 1011 000a FB70     	 strb r3,[r7,#3]
 1012 000c 1346     	 mov r3,r2
 1013 000e BB70     	 strb r3,[r7,#2]
 450:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 451:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 452:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 453:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 454:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 455:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Start Mode", XMC_CCU4_CHECK_END_MODE(end_mode));
 456:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 457:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the stop function */
 458:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1014              	 .loc 2 458 0
 1015 0010 7B68     	 ldr r3,[r7,#4]
 1016 0012 5B68     	 ldr r3,[r3,#4]
 1017 0014 FB60     	 str r3,[r7,#12]
 459:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_ENDS_Msk);
 1018              	 .loc 2 459 0
 1019 0016 FB68     	 ldr r3,[r7,#12]
 1020 0018 23F00C03 	 bic r3,r3,#12
 1021 001c FB60     	 str r3,[r7,#12]
 460:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_ENDS_Pos;
 1022              	 .loc 2 460 0
 1023 001e FB78     	 ldrb r3,[r7,#3]
 1024 0020 9B00     	 lsls r3,r3,#2
 1025 0022 FA68     	 ldr r2,[r7,#12]
 1026 0024 1343     	 orrs r3,r3,r2
 1027 0026 FB60     	 str r3,[r7,#12]
 461:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 462:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1028              	 .loc 2 462 0
 1029 0028 7B68     	 ldr r3,[r7,#4]
 1030 002a FA68     	 ldr r2,[r7,#12]
 1031 002c 5A60     	 str r2,[r3,#4]
 463:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 464:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure the stop mode */
 465:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 1032              	 .loc 2 465 0
 1033 002e 7B68     	 ldr r3,[r7,#4]
 1034 0030 5B69     	 ldr r3,[r3,#20]
 1035 0032 BB60     	 str r3,[r7,#8]
 466:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc &= ~((uint32_t) CCU4_CC4_TC_ENDM_Msk);
 1036              	 .loc 2 466 0
 1037 0034 BB68     	 ldr r3,[r7,#8]
 1038 0036 23F44073 	 bic r3,r3,#768
 1039 003a BB60     	 str r3,[r7,#8]
 467:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc |= ((uint32_t) end_mode) << CCU4_CC4_TC_ENDM_Pos;
 1040              	 .loc 2 467 0
 1041 003c BB78     	 ldrb r3,[r7,#2]
 1042 003e 1B02     	 lsls r3,r3,#8
 1043 0040 BA68     	 ldr r2,[r7,#8]
 1044 0042 1343     	 orrs r3,r3,r2
 1045 0044 BB60     	 str r3,[r7,#8]
 468:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 469:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 1046              	 .loc 2 469 0
 1047 0046 7B68     	 ldr r3,[r7,#4]
 1048 0048 BA68     	 ldr r2,[r7,#8]
 1049 004a 5A61     	 str r2,[r3,#20]
 470:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1050              	 .loc 2 470 0
 1051 004c 1437     	 adds r7,r7,#20
 1052              	.LCFI80:
 1053              	 .cfi_def_cfa_offset 4
 1054 004e BD46     	 mov sp,r7
 1055              	.LCFI81:
 1056              	 .cfi_def_cfa_register 13
 1057              	 
 1058 0050 5DF8047B 	 ldr r7,[sp],#4
 1059              	.LCFI82:
 1060              	 .cfi_restore 7
 1061              	 .cfi_def_cfa_offset 0
 1062 0054 7047     	 bx lr
 1063              	 .cfi_endproc
 1064              	.LFE205:
 1066 0056 00BF     	 .section .text.XMC_CCU4_SLICE_LoadConfig,"ax",%progbits
 1067              	 .align 2
 1068              	 .global XMC_CCU4_SLICE_LoadConfig
 1069              	 .thumb
 1070              	 .thumb_func
 1072              	XMC_CCU4_SLICE_LoadConfig:
 1073              	.LFB206:
 471:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 472:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the Load trigger function of a slice */
 473:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 474:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1074              	 .loc 2 474 0
 1075              	 .cfi_startproc
 1076              	 
 1077              	 
 1078              	 
 1079 0000 80B4     	 push {r7}
 1080              	.LCFI83:
 1081              	 .cfi_def_cfa_offset 4
 1082              	 .cfi_offset 7,-4
 1083 0002 85B0     	 sub sp,sp,#20
 1084              	.LCFI84:
 1085              	 .cfi_def_cfa_offset 24
 1086 0004 00AF     	 add r7,sp,#0
 1087              	.LCFI85:
 1088              	 .cfi_def_cfa_register 7
 1089 0006 7860     	 str r0,[r7,#4]
 1090 0008 0B46     	 mov r3,r1
 1091 000a FB70     	 strb r3,[r7,#3]
 475:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 476:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 477:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 478:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_LoadConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 479:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 480:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the load function */
 481:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1092              	 .loc 2 481 0
 1093 000c 7B68     	 ldr r3,[r7,#4]
 1094 000e 5B68     	 ldr r3,[r3,#4]
 1095 0010 FB60     	 str r3,[r7,#12]
 482:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_LDS_Msk);
 1096              	 .loc 2 482 0
 1097 0012 FB68     	 ldr r3,[r7,#12]
 1098 0014 23F44053 	 bic r3,r3,#12288
 1099 0018 FB60     	 str r3,[r7,#12]
 483:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_LDS_Pos;
 1100              	 .loc 2 483 0
 1101 001a FB78     	 ldrb r3,[r7,#3]
 1102 001c 1B03     	 lsls r3,r3,#12
 1103 001e FA68     	 ldr r2,[r7,#12]
 1104 0020 1343     	 orrs r3,r3,r2
 1105 0022 FB60     	 str r3,[r7,#12]
 484:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 485:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1106              	 .loc 2 485 0
 1107 0024 7B68     	 ldr r3,[r7,#4]
 1108 0026 FA68     	 ldr r2,[r7,#12]
 1109 0028 5A60     	 str r2,[r3,#4]
 486:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1110              	 .loc 2 486 0
 1111 002a 1437     	 adds r7,r7,#20
 1112              	.LCFI86:
 1113              	 .cfi_def_cfa_offset 4
 1114 002c BD46     	 mov sp,r7
 1115              	.LCFI87:
 1116              	 .cfi_def_cfa_register 13
 1117              	 
 1118 002e 5DF8047B 	 ldr r7,[sp],#4
 1119              	.LCFI88:
 1120              	 .cfi_restore 7
 1121              	 .cfi_def_cfa_offset 0
 1122 0032 7047     	 bx lr
 1123              	 .cfi_endproc
 1124              	.LFE206:
 1126              	 .section .text.XMC_CCU4_SLICE_ModulationConfig,"ax",%progbits
 1127              	 .align 2
 1128              	 .global XMC_CCU4_SLICE_ModulationConfig
 1129              	 .thumb
 1130              	 .thumb_func
 1132              	XMC_CCU4_SLICE_ModulationConfig:
 1133              	.LFB207:
 487:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 488:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the slice modulation function */
 489:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
 490:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_EVENT_t event,
 491:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
 492:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const bool synch_with_pwm)
 493:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1134              	 .loc 2 493 0
 1135              	 .cfi_startproc
 1136              	 
 1137              	 
 1138              	 
 1139 0000 80B4     	 push {r7}
 1140              	.LCFI89:
 1141              	 .cfi_def_cfa_offset 4
 1142              	 .cfi_offset 7,-4
 1143 0002 85B0     	 sub sp,sp,#20
 1144              	.LCFI90:
 1145              	 .cfi_def_cfa_offset 24
 1146 0004 00AF     	 add r7,sp,#0
 1147              	.LCFI91:
 1148              	 .cfi_def_cfa_register 7
 1149 0006 7860     	 str r0,[r7,#4]
 1150 0008 0846     	 mov r0,r1
 1151 000a 1146     	 mov r1,r2
 1152 000c 1A46     	 mov r2,r3
 1153 000e 0346     	 mov r3,r0
 1154 0010 FB70     	 strb r3,[r7,#3]
 1155 0012 0B46     	 mov r3,r1
 1156 0014 BB70     	 strb r3,[r7,#2]
 1157 0016 1346     	 mov r3,r2
 1158 0018 7B70     	 strb r3,[r7,#1]
 494:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 495:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 496:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 497:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
 498:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(even
 499:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Modulation Mode",
 500:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT) ||\
 501:../Libraries/XMCLib/src/xmc_ccu4.c **** 		          (mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT)));
 502:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 503:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc  = slice->TC;
 1159              	 .loc 2 503 0
 1160 001a 7B68     	 ldr r3,[r7,#4]
 1161 001c 5B69     	 ldr r3,[r3,#20]
 1162 001e FB60     	 str r3,[r7,#12]
 504:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1163              	 .loc 2 504 0
 1164 0020 7B68     	 ldr r3,[r7,#4]
 1165 0022 5B68     	 ldr r3,[r3,#4]
 1166 0024 BB60     	 str r3,[r7,#8]
 505:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 506:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the modulation function */
 507:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_MOS_Msk);
 1167              	 .loc 2 507 0
 1168 0026 BB68     	 ldr r3,[r7,#8]
 1169 0028 23F44023 	 bic r3,r3,#786432
 1170 002c BB60     	 str r3,[r7,#8]
 508:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_MOS_Pos;
 1171              	 .loc 2 508 0
 1172 002e FB78     	 ldrb r3,[r7,#3]
 1173 0030 9B04     	 lsls r3,r3,#18
 1174 0032 BA68     	 ldr r2,[r7,#8]
 1175 0034 1343     	 orrs r3,r3,r2
 1176 0036 BB60     	 str r3,[r7,#8]
 509:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1177              	 .loc 2 509 0
 1178 0038 7B68     	 ldr r3,[r7,#4]
 1179 003a BA68     	 ldr r2,[r7,#8]
 1180 003c 5A60     	 str r2,[r3,#4]
 510:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 511:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Modulation mode */
 512:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT)
 1181              	 .loc 2 512 0
 1182 003e BB78     	 ldrb r3,[r7,#2]
 1183 0040 012B     	 cmp r3,#1
 1184 0042 04D1     	 bne .L56
 513:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 514:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_EMT_Msk;
 1185              	 .loc 2 514 0
 1186 0044 FB68     	 ldr r3,[r7,#12]
 1187 0046 43F08073 	 orr r3,r3,#16777216
 1188 004a FB60     	 str r3,[r7,#12]
 1189 004c 03E0     	 b .L57
 1190              	.L56:
 515:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 516:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 517:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 518:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_EMT_Msk);
 1191              	 .loc 2 518 0
 1192 004e FB68     	 ldr r3,[r7,#12]
 1193 0050 23F08073 	 bic r3,r3,#16777216
 1194 0054 FB60     	 str r3,[r7,#12]
 1195              	.L57:
 519:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 520:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 521:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Synchronization of modulation effect with PWM cycle */
 522:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (synch_with_pwm == (bool) true)
 1196              	 .loc 2 522 0
 1197 0056 7B78     	 ldrb r3,[r7,#1]
 1198 0058 002B     	 cmp r3,#0
 1199 005a 04D0     	 beq .L58
 523:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 524:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_EMS_Msk;
 1200              	 .loc 2 524 0
 1201 005c FB68     	 ldr r3,[r7,#12]
 1202 005e 43F40003 	 orr r3,r3,#8388608
 1203 0062 FB60     	 str r3,[r7,#12]
 1204 0064 03E0     	 b .L59
 1205              	.L58:
 525:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 526:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 527:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 528:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_EMS_Msk);
 1206              	 .loc 2 528 0
 1207 0066 FB68     	 ldr r3,[r7,#12]
 1208 0068 23F40003 	 bic r3,r3,#8388608
 1209 006c FB60     	 str r3,[r7,#12]
 1210              	.L59:
 529:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 530:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 531:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 1211              	 .loc 2 531 0
 1212 006e 7B68     	 ldr r3,[r7,#4]
 1213 0070 FA68     	 ldr r2,[r7,#12]
 1214 0072 5A61     	 str r2,[r3,#20]
 532:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1215              	 .loc 2 532 0
 1216 0074 1437     	 adds r7,r7,#20
 1217              	.LCFI92:
 1218              	 .cfi_def_cfa_offset 4
 1219 0076 BD46     	 mov sp,r7
 1220              	.LCFI93:
 1221              	 .cfi_def_cfa_register 13
 1222              	 
 1223 0078 5DF8047B 	 ldr r7,[sp],#4
 1224              	.LCFI94:
 1225              	 .cfi_restore 7
 1226              	 .cfi_def_cfa_offset 0
 1227 007c 7047     	 bx lr
 1228              	 .cfi_endproc
 1229              	.LFE207:
 1231 007e 00BF     	 .section .text.XMC_CCU4_SLICE_CountConfig,"ax",%progbits
 1232              	 .align 2
 1233              	 .global XMC_CCU4_SLICE_CountConfig
 1234              	 .thumb
 1235              	 .thumb_func
 1237              	XMC_CCU4_SLICE_CountConfig:
 1238              	.LFB208:
 533:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 534:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the slice count function */
 535:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 536:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1239              	 .loc 2 536 0
 1240              	 .cfi_startproc
 1241              	 
 1242              	 
 1243              	 
 1244 0000 80B4     	 push {r7}
 1245              	.LCFI95:
 1246              	 .cfi_def_cfa_offset 4
 1247              	 .cfi_offset 7,-4
 1248 0002 85B0     	 sub sp,sp,#20
 1249              	.LCFI96:
 1250              	 .cfi_def_cfa_offset 24
 1251 0004 00AF     	 add r7,sp,#0
 1252              	.LCFI97:
 1253              	 .cfi_def_cfa_register 7
 1254 0006 7860     	 str r0,[r7,#4]
 1255 0008 0B46     	 mov r3,r1
 1256 000a FB70     	 strb r3,[r7,#3]
 537:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 538:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 539:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 540:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CountConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 541:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 542:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the count function */
 543:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1257              	 .loc 2 543 0
 1258 000c 7B68     	 ldr r3,[r7,#4]
 1259 000e 5B68     	 ldr r3,[r3,#4]
 1260 0010 FB60     	 str r3,[r7,#12]
 544:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CNTS_Msk);
 1261              	 .loc 2 544 0
 1262 0012 FB68     	 ldr r3,[r7,#12]
 1263 0014 23F44043 	 bic r3,r3,#49152
 1264 0018 FB60     	 str r3,[r7,#12]
 545:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CNTS_Pos;
 1265              	 .loc 2 545 0
 1266 001a FB78     	 ldrb r3,[r7,#3]
 1267 001c 9B03     	 lsls r3,r3,#14
 1268 001e FA68     	 ldr r2,[r7,#12]
 1269 0020 1343     	 orrs r3,r3,r2
 1270 0022 FB60     	 str r3,[r7,#12]
 546:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 547:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1271              	 .loc 2 547 0
 1272 0024 7B68     	 ldr r3,[r7,#4]
 1273 0026 FA68     	 ldr r2,[r7,#12]
 1274 0028 5A60     	 str r2,[r3,#4]
 548:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1275              	 .loc 2 548 0
 1276 002a 1437     	 adds r7,r7,#20
 1277              	.LCFI98:
 1278              	 .cfi_def_cfa_offset 4
 1279 002c BD46     	 mov sp,r7
 1280              	.LCFI99:
 1281              	 .cfi_def_cfa_register 13
 1282              	 
 1283 002e 5DF8047B 	 ldr r7,[sp],#4
 1284              	.LCFI100:
 1285              	 .cfi_restore 7
 1286              	 .cfi_def_cfa_offset 0
 1287 0032 7047     	 bx lr
 1288              	 .cfi_endproc
 1289              	.LFE208:
 1291              	 .section .text.XMC_CCU4_SLICE_GateConfig,"ax",%progbits
 1292              	 .align 2
 1293              	 .global XMC_CCU4_SLICE_GateConfig
 1294              	 .thumb
 1295              	 .thumb_func
 1297              	XMC_CCU4_SLICE_GateConfig:
 1298              	.LFB209:
 549:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 550:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure slice gate function */
 551:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 552:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1299              	 .loc 2 552 0
 1300              	 .cfi_startproc
 1301              	 
 1302              	 
 1303              	 
 1304 0000 80B4     	 push {r7}
 1305              	.LCFI101:
 1306              	 .cfi_def_cfa_offset 4
 1307              	 .cfi_offset 7,-4
 1308 0002 85B0     	 sub sp,sp,#20
 1309              	.LCFI102:
 1310              	 .cfi_def_cfa_offset 24
 1311 0004 00AF     	 add r7,sp,#0
 1312              	.LCFI103:
 1313              	 .cfi_def_cfa_register 7
 1314 0006 7860     	 str r0,[r7,#4]
 1315 0008 0B46     	 mov r3,r1
 1316 000a FB70     	 strb r3,[r7,#3]
 553:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 554:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 555:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 556:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GateConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 557:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 558:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 559:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1317              	 .loc 2 559 0
 1318 000c 7B68     	 ldr r3,[r7,#4]
 1319 000e 5B68     	 ldr r3,[r3,#4]
 1320 0010 FB60     	 str r3,[r7,#12]
 560:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_GATES_Msk);
 1321              	 .loc 2 560 0
 1322 0012 FB68     	 ldr r3,[r7,#12]
 1323 0014 23F44073 	 bic r3,r3,#768
 1324 0018 FB60     	 str r3,[r7,#12]
 561:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_GATES_Pos;
 1325              	 .loc 2 561 0
 1326 001a FB78     	 ldrb r3,[r7,#3]
 1327 001c 1B02     	 lsls r3,r3,#8
 1328 001e FA68     	 ldr r2,[r7,#12]
 1329 0020 1343     	 orrs r3,r3,r2
 1330 0022 FB60     	 str r3,[r7,#12]
 562:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 563:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1331              	 .loc 2 563 0
 1332 0024 7B68     	 ldr r3,[r7,#4]
 1333 0026 FA68     	 ldr r2,[r7,#12]
 1334 0028 5A60     	 str r2,[r3,#4]
 564:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1335              	 .loc 2 564 0
 1336 002a 1437     	 adds r7,r7,#20
 1337              	.LCFI104:
 1338              	 .cfi_def_cfa_offset 4
 1339 002c BD46     	 mov sp,r7
 1340              	.LCFI105:
 1341              	 .cfi_def_cfa_register 13
 1342              	 
 1343 002e 5DF8047B 	 ldr r7,[sp],#4
 1344              	.LCFI106:
 1345              	 .cfi_restore 7
 1346              	 .cfi_def_cfa_offset 0
 1347 0032 7047     	 bx lr
 1348              	 .cfi_endproc
 1349              	.LFE209:
 1351              	 .section .text.XMC_CCU4_SLICE_Capture0Config,"ax",%progbits
 1352              	 .align 2
 1353              	 .global XMC_CCU4_SLICE_Capture0Config
 1354              	 .thumb
 1355              	 .thumb_func
 1357              	XMC_CCU4_SLICE_Capture0Config:
 1358              	.LFB210:
 565:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 566:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure Capture-0 function */
 567:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 568:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1359              	 .loc 2 568 0
 1360              	 .cfi_startproc
 1361              	 
 1362              	 
 1363              	 
 1364 0000 80B4     	 push {r7}
 1365              	.LCFI107:
 1366              	 .cfi_def_cfa_offset 4
 1367              	 .cfi_offset 7,-4
 1368 0002 85B0     	 sub sp,sp,#20
 1369              	.LCFI108:
 1370              	 .cfi_def_cfa_offset 24
 1371 0004 00AF     	 add r7,sp,#0
 1372              	.LCFI109:
 1373              	 .cfi_def_cfa_register 7
 1374 0006 7860     	 str r0,[r7,#4]
 1375 0008 0B46     	 mov r3,r1
 1376 000a FB70     	 strb r3,[r7,#3]
 569:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 570:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 571:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 572:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture0Config:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 573:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 574:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 575:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1377              	 .loc 2 575 0
 1378 000c 7B68     	 ldr r3,[r7,#4]
 1379 000e 5B68     	 ldr r3,[r3,#4]
 1380 0010 FB60     	 str r3,[r7,#12]
 576:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CAP0S_Msk);
 1381              	 .loc 2 576 0
 1382 0012 FB68     	 ldr r3,[r7,#12]
 1383 0014 23F03003 	 bic r3,r3,#48
 1384 0018 FB60     	 str r3,[r7,#12]
 577:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CAP0S_Pos;
 1385              	 .loc 2 577 0
 1386 001a FB78     	 ldrb r3,[r7,#3]
 1387 001c 1B01     	 lsls r3,r3,#4
 1388 001e FA68     	 ldr r2,[r7,#12]
 1389 0020 1343     	 orrs r3,r3,r2
 1390 0022 FB60     	 str r3,[r7,#12]
 578:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 579:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1391              	 .loc 2 579 0
 1392 0024 7B68     	 ldr r3,[r7,#4]
 1393 0026 FA68     	 ldr r2,[r7,#12]
 1394 0028 5A60     	 str r2,[r3,#4]
 580:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1395              	 .loc 2 580 0
 1396 002a 1437     	 adds r7,r7,#20
 1397              	.LCFI110:
 1398              	 .cfi_def_cfa_offset 4
 1399 002c BD46     	 mov sp,r7
 1400              	.LCFI111:
 1401              	 .cfi_def_cfa_register 13
 1402              	 
 1403 002e 5DF8047B 	 ldr r7,[sp],#4
 1404              	.LCFI112:
 1405              	 .cfi_restore 7
 1406              	 .cfi_def_cfa_offset 0
 1407 0032 7047     	 bx lr
 1408              	 .cfi_endproc
 1409              	.LFE210:
 1411              	 .section .text.XMC_CCU4_SLICE_Capture1Config,"ax",%progbits
 1412              	 .align 2
 1413              	 .global XMC_CCU4_SLICE_Capture1Config
 1414              	 .thumb
 1415              	 .thumb_func
 1417              	XMC_CCU4_SLICE_Capture1Config:
 1418              	.LFB211:
 581:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 582:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure Capture-1 function */
 583:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 584:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1419              	 .loc 2 584 0
 1420              	 .cfi_startproc
 1421              	 
 1422              	 
 1423              	 
 1424 0000 80B4     	 push {r7}
 1425              	.LCFI113:
 1426              	 .cfi_def_cfa_offset 4
 1427              	 .cfi_offset 7,-4
 1428 0002 85B0     	 sub sp,sp,#20
 1429              	.LCFI114:
 1430              	 .cfi_def_cfa_offset 24
 1431 0004 00AF     	 add r7,sp,#0
 1432              	.LCFI115:
 1433              	 .cfi_def_cfa_register 7
 1434 0006 7860     	 str r0,[r7,#4]
 1435 0008 0B46     	 mov r3,r1
 1436 000a FB70     	 strb r3,[r7,#3]
 585:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 586:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 587:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 588:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture1Config:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 589:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 590:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 591:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1437              	 .loc 2 591 0
 1438 000c 7B68     	 ldr r3,[r7,#4]
 1439 000e 5B68     	 ldr r3,[r3,#4]
 1440 0010 FB60     	 str r3,[r7,#12]
 592:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CAP1S_Msk);
 1441              	 .loc 2 592 0
 1442 0012 FB68     	 ldr r3,[r7,#12]
 1443 0014 23F0C003 	 bic r3,r3,#192
 1444 0018 FB60     	 str r3,[r7,#12]
 593:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CAP1S_Pos;
 1445              	 .loc 2 593 0
 1446 001a FB78     	 ldrb r3,[r7,#3]
 1447 001c 9B01     	 lsls r3,r3,#6
 1448 001e FA68     	 ldr r2,[r7,#12]
 1449 0020 1343     	 orrs r3,r3,r2
 1450 0022 FB60     	 str r3,[r7,#12]
 594:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 595:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1451              	 .loc 2 595 0
 1452 0024 7B68     	 ldr r3,[r7,#4]
 1453 0026 FA68     	 ldr r2,[r7,#12]
 1454 0028 5A60     	 str r2,[r3,#4]
 596:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1455              	 .loc 2 596 0
 1456 002a 1437     	 adds r7,r7,#20
 1457              	.LCFI116:
 1458              	 .cfi_def_cfa_offset 4
 1459 002c BD46     	 mov sp,r7
 1460              	.LCFI117:
 1461              	 .cfi_def_cfa_register 13
 1462              	 
 1463 002e 5DF8047B 	 ldr r7,[sp],#4
 1464              	.LCFI118:
 1465              	 .cfi_restore 7
 1466              	 .cfi_def_cfa_offset 0
 1467 0032 7047     	 bx lr
 1468              	 .cfi_endproc
 1469              	.LFE211:
 1471              	 .section .text.XMC_CCU4_SLICE_DirectionConfig,"ax",%progbits
 1472              	 .align 2
 1473              	 .global XMC_CCU4_SLICE_DirectionConfig
 1474              	 .thumb
 1475              	 .thumb_func
 1477              	XMC_CCU4_SLICE_DirectionConfig:
 1478              	.LFB212:
 597:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 598:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure direction function */
 599:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
 600:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1479              	 .loc 2 600 0
 1480              	 .cfi_startproc
 1481              	 
 1482              	 
 1483              	 
 1484 0000 80B4     	 push {r7}
 1485              	.LCFI119:
 1486              	 .cfi_def_cfa_offset 4
 1487              	 .cfi_offset 7,-4
 1488 0002 85B0     	 sub sp,sp,#20
 1489              	.LCFI120:
 1490              	 .cfi_def_cfa_offset 24
 1491 0004 00AF     	 add r7,sp,#0
 1492              	.LCFI121:
 1493              	 .cfi_def_cfa_register 7
 1494 0006 7860     	 str r0,[r7,#4]
 1495 0008 0B46     	 mov r3,r1
 1496 000a FB70     	 strb r3,[r7,#3]
 601:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 602:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 603:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 604:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event
 605:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 606:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the direction function */
 607:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1497              	 .loc 2 607 0
 1498 000c 7B68     	 ldr r3,[r7,#4]
 1499 000e 5B68     	 ldr r3,[r3,#4]
 1500 0010 FB60     	 str r3,[r7,#12]
 608:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_UDS_Msk);
 1501              	 .loc 2 608 0
 1502 0012 FB68     	 ldr r3,[r7,#12]
 1503 0014 23F44063 	 bic r3,r3,#3072
 1504 0018 FB60     	 str r3,[r7,#12]
 609:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_UDS_Pos;
 1505              	 .loc 2 609 0
 1506 001a FB78     	 ldrb r3,[r7,#3]
 1507 001c 9B02     	 lsls r3,r3,#10
 1508 001e FA68     	 ldr r2,[r7,#12]
 1509 0020 1343     	 orrs r3,r3,r2
 1510 0022 FB60     	 str r3,[r7,#12]
 610:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 611:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1511              	 .loc 2 611 0
 1512 0024 7B68     	 ldr r3,[r7,#4]
 1513 0026 FA68     	 ldr r2,[r7,#12]
 1514 0028 5A60     	 str r2,[r3,#4]
 612:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1515              	 .loc 2 612 0
 1516 002a 1437     	 adds r7,r7,#20
 1517              	.LCFI122:
 1518              	 .cfi_def_cfa_offset 4
 1519 002c BD46     	 mov sp,r7
 1520              	.LCFI123:
 1521              	 .cfi_def_cfa_register 13
 1522              	 
 1523 002e 5DF8047B 	 ldr r7,[sp],#4
 1524              	.LCFI124:
 1525              	 .cfi_restore 7
 1526              	 .cfi_def_cfa_offset 0
 1527 0032 7047     	 bx lr
 1528              	 .cfi_endproc
 1529              	.LFE212:
 1531              	 .section .text.XMC_CCU4_SLICE_StatusBitOverrideConfig,"ax",%progbits
 1532              	 .align 2
 1533              	 .global XMC_CCU4_SLICE_StatusBitOverrideConfig
 1534              	 .thumb
 1535              	 .thumb_func
 1537              	XMC_CCU4_SLICE_StatusBitOverrideConfig:
 1538              	.LFB213:
 613:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 614:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure slice status bit override function */
 615:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice)
 616:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1539              	 .loc 2 616 0
 1540              	 .cfi_startproc
 1541              	 
 1542              	 
 1543              	 
 1544 0000 80B4     	 push {r7}
 1545              	.LCFI125:
 1546              	 .cfi_def_cfa_offset 4
 1547              	 .cfi_offset 7,-4
 1548 0002 85B0     	 sub sp,sp,#20
 1549              	.LCFI126:
 1550              	 .cfi_def_cfa_offset 24
 1551 0004 00AF     	 add r7,sp,#0
 1552              	.LCFI127:
 1553              	 .cfi_def_cfa_register 7
 1554 0006 7860     	 str r0,[r7,#4]
 617:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 618:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 619:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
 620:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 621:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the override function */
 622:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1555              	 .loc 2 622 0
 1556 0008 7B68     	 ldr r3,[r7,#4]
 1557 000a 5B68     	 ldr r3,[r3,#4]
 1558 000c FB60     	 str r3,[r7,#12]
 623:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Map status bit trigger override to Event 1 & 
 624:../Libraries/XMCLib/src/xmc_ccu4.c ****          status bit value override to Event 2 */
 625:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_OFS_Msk);
 1559              	 .loc 2 625 0
 1560 000e FB68     	 ldr r3,[r7,#12]
 1561 0010 23F48033 	 bic r3,r3,#65536
 1562 0014 FB60     	 str r3,[r7,#12]
 626:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) 1) << CCU4_CC4_CMC_OFS_Pos;
 1563              	 .loc 2 626 0
 1564 0016 FB68     	 ldr r3,[r7,#12]
 1565 0018 43F48033 	 orr r3,r3,#65536
 1566 001c FB60     	 str r3,[r7,#12]
 627:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 628:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1567              	 .loc 2 628 0
 1568 001e 7B68     	 ldr r3,[r7,#4]
 1569 0020 FA68     	 ldr r2,[r7,#12]
 1570 0022 5A60     	 str r2,[r3,#4]
 629:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1571              	 .loc 2 629 0
 1572 0024 1437     	 adds r7,r7,#20
 1573              	.LCFI128:
 1574              	 .cfi_def_cfa_offset 4
 1575 0026 BD46     	 mov sp,r7
 1576              	.LCFI129:
 1577              	 .cfi_def_cfa_register 13
 1578              	 
 1579 0028 5DF8047B 	 ldr r7,[sp],#4
 1580              	.LCFI130:
 1581              	 .cfi_restore 7
 1582              	 .cfi_def_cfa_offset 0
 1583 002c 7047     	 bx lr
 1584              	 .cfi_endproc
 1585              	.LFE213:
 1587 002e 00BF     	 .section .text.XMC_CCU4_SLICE_TrapConfig,"ax",%progbits
 1588              	 .align 2
 1589              	 .global XMC_CCU4_SLICE_TrapConfig
 1590              	 .thumb
 1591              	 .thumb_func
 1593              	XMC_CCU4_SLICE_TrapConfig:
 1594              	.LFB214:
 630:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 631:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure trap function */
 632:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
 633:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                           const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
 634:../Libraries/XMCLib/src/xmc_ccu4.c ****                                const bool synch_with_pwm)
 635:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1595              	 .loc 2 635 0
 1596              	 .cfi_startproc
 1597              	 
 1598              	 
 1599              	 
 1600 0000 80B4     	 push {r7}
 1601              	.LCFI131:
 1602              	 .cfi_def_cfa_offset 4
 1603              	 .cfi_offset 7,-4
 1604 0002 85B0     	 sub sp,sp,#20
 1605              	.LCFI132:
 1606              	 .cfi_def_cfa_offset 24
 1607 0004 00AF     	 add r7,sp,#0
 1608              	.LCFI133:
 1609              	 .cfi_def_cfa_register 7
 1610 0006 7860     	 str r0,[r7,#4]
 1611 0008 0B46     	 mov r3,r1
 1612 000a FB70     	 strb r3,[r7,#3]
 1613 000c 1346     	 mov r3,r2
 1614 000e BB70     	 strb r3,[r7,#2]
 636:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 637:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 638:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 639:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 640:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU4_SLICE_TRAP_EXIT
 641:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                                         (exit_mode == XMC_CCU4_SLICE_TRAP_EXIT_M
 642:../Libraries/XMCLib/src/xmc_ccu4.c ****     
 643:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Map trap function to Event 2 */
 644:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1615              	 .loc 2 644 0
 1616 0010 7B68     	 ldr r3,[r7,#4]
 1617 0012 5B68     	 ldr r3,[r3,#4]
 1618 0014 BB60     	 str r3,[r7,#8]
 645:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_TS_Msk);
 1619              	 .loc 2 645 0
 1620 0016 BB68     	 ldr r3,[r7,#8]
 1621 0018 23F40033 	 bic r3,r3,#131072
 1622 001c BB60     	 str r3,[r7,#8]
 646:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) 1) << CCU4_CC4_CMC_TS_Pos;
 1623              	 .loc 2 646 0
 1624 001e BB68     	 ldr r3,[r7,#8]
 1625 0020 43F40033 	 orr r3,r3,#131072
 1626 0024 BB60     	 str r3,[r7,#8]
 647:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1627              	 .loc 2 647 0
 1628 0026 7B68     	 ldr r3,[r7,#4]
 1629 0028 BA68     	 ldr r2,[r7,#8]
 1630 002a 5A60     	 str r2,[r3,#4]
 648:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 649:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure synchronization option */
 650:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 1631              	 .loc 2 650 0
 1632 002c 7B68     	 ldr r3,[r7,#4]
 1633 002e 5B69     	 ldr r3,[r3,#20]
 1634 0030 FB60     	 str r3,[r7,#12]
 651:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 652:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (synch_with_pwm == (bool) true)
 1635              	 .loc 2 652 0
 1636 0032 BB78     	 ldrb r3,[r7,#2]
 1637 0034 002B     	 cmp r3,#0
 1638 0036 04D0     	 beq .L67
 653:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 654:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_TRPSE_Msk;
 1639              	 .loc 2 654 0
 1640 0038 FB68     	 ldr r3,[r7,#12]
 1641 003a 43F40013 	 orr r3,r3,#2097152
 1642 003e FB60     	 str r3,[r7,#12]
 1643 0040 03E0     	 b .L68
 1644              	.L67:
 655:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 656:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 657:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 658:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_TRPSE_Msk);
 1645              	 .loc 2 658 0
 1646 0042 FB68     	 ldr r3,[r7,#12]
 1647 0044 23F40013 	 bic r3,r3,#2097152
 1648 0048 FB60     	 str r3,[r7,#12]
 1649              	.L68:
 659:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 660:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 661:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure exit mode */
 662:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (exit_mode == XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW)
 1650              	 .loc 2 662 0
 1651 004a FB78     	 ldrb r3,[r7,#3]
 1652 004c 012B     	 cmp r3,#1
 1653 004e 04D1     	 bne .L69
 663:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 664:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_TRPSW_Msk;
 1654              	 .loc 2 664 0
 1655 0050 FB68     	 ldr r3,[r7,#12]
 1656 0052 43F48003 	 orr r3,r3,#4194304
 1657 0056 FB60     	 str r3,[r7,#12]
 1658 0058 03E0     	 b .L70
 1659              	.L69:
 665:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 666:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 667:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 668:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_TRPSW_Msk);
 1660              	 .loc 2 668 0
 1661 005a FB68     	 ldr r3,[r7,#12]
 1662 005c 23F48003 	 bic r3,r3,#4194304
 1663 0060 FB60     	 str r3,[r7,#12]
 1664              	.L70:
 669:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 670:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 671:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 1665              	 .loc 2 671 0
 1666 0062 7B68     	 ldr r3,[r7,#4]
 1667 0064 FA68     	 ldr r2,[r7,#12]
 1668 0066 5A61     	 str r2,[r3,#20]
 672:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1669              	 .loc 2 672 0
 1670 0068 1437     	 adds r7,r7,#20
 1671              	.LCFI134:
 1672              	 .cfi_def_cfa_offset 4
 1673 006a BD46     	 mov sp,r7
 1674              	.LCFI135:
 1675              	 .cfi_def_cfa_register 13
 1676              	 
 1677 006c 5DF8047B 	 ldr r7,[sp],#4
 1678              	.LCFI136:
 1679              	 .cfi_restore 7
 1680              	 .cfi_def_cfa_offset 0
 1681 0070 7047     	 bx lr
 1682              	 .cfi_endproc
 1683              	.LFE214:
 1685 0072 00BF     	 .section .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 1686              	 .align 2
 1687              	 .global XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
 1688              	 .thumb
 1689              	 .thumb_func
 1691              	XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:
 1692              	.LFB215:
 673:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 674:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure a slice Status Bit Override event */
 675:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
 676:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
 677:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
 678:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1693              	 .loc 2 678 0
 1694              	 .cfi_startproc
 1695              	 
 1696              	 
 1697              	 
 1698 0000 80B4     	 push {r7}
 1699              	.LCFI137:
 1700              	 .cfi_def_cfa_offset 4
 1701              	 .cfi_offset 7,-4
 1702 0002 87B0     	 sub sp,sp,#28
 1703              	.LCFI138:
 1704              	 .cfi_def_cfa_offset 32
 1705 0004 00AF     	 add r7,sp,#0
 1706              	.LCFI139:
 1707              	 .cfi_def_cfa_register 7
 1708 0006 F860     	 str r0,[r7,#12]
 1709 0008 B960     	 str r1,[r7,#8]
 1710 000a 7A60     	 str r2,[r7,#4]
 679:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 680:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 681:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU4_IsVal
 682:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 683:../Libraries/XMCLib/src/xmc_ccu4.c **** 		     XMC_CCU4_SLICE_IsInputvalid(ev1_config->mapped_input));
 684:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 685:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 686:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 687:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((ev1_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 688:../Libraries/XMCLib/src/xmc_ccu4.c ****               (ev1_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 689:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 690:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 691:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 692:../Libraries/XMCLib/src/xmc_ccu4.c **** 		     XMC_CCU4_SLICE_IsInputvalid(ev2_config->mapped_input));
 693:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 694:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 695:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 696:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((ev2_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 697:../Libraries/XMCLib/src/xmc_ccu4.c ****               (ev2_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 698:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period", 
 699:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 700:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 701:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS2;
 702:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 703:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 1 */
 704:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS2_EV1EM_Pos);
 705:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU4_CC4_INS2_EV1EM_Pos;
 706:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 707:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 2 */
 708:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS2_EV2EM_Pos);
 709:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU4_CC4_INS2_EV2EM_Pos;
 710:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 711:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 1 */
 712:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS2_EV1LM_Pos);
 713:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->level) << CCU4_CC4_INS2_EV1LM_Pos;
 714:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 715:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 2 */
 716:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS2_EV2LM_Pos);
 717:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->level) << CCU4_CC4_INS2_EV2LM_Pos;
 718:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 719:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 1 */
 720:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS2_LPF1M_Pos);
 721:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU4_CC4_INS2_LPF1M_Pos;
 722:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 723:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 2 */
 724:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS2_LPF2M_Pos);
 725:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU4_CC4_INS2_LPF2M_Pos;
 726:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 727:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS2 = ins;
 728:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 729:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 730:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 731:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the input for Event1 */
 732:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS1_EV1IS_Pos);
 733:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU4_CC4_INS1_EV1IS_Pos;
 734:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 735:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally, the input for Event2 */
 736:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS1_EV2IS_Pos);
 737:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU4_CC4_INS1_EV2IS_Pos;
 738:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 739:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 740:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 741:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 1711              	 .loc 2 741 0
 1712 000c FB68     	 ldr r3,[r7,#12]
 1713 000e 1B68     	 ldr r3,[r3]
 1714 0010 7B61     	 str r3,[r7,#20]
 742:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 743:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 1 */
 744:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS_EV1EM_Pos);
 1715              	 .loc 2 744 0
 1716 0012 7B69     	 ldr r3,[r7,#20]
 1717 0014 23F44023 	 bic r3,r3,#786432
 1718 0018 7B61     	 str r3,[r7,#20]
 745:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU4_CC4_INS_EV1EM_Pos;
 1719              	 .loc 2 745 0
 1720 001a BB68     	 ldr r3,[r7,#8]
 1721 001c 5B78     	 ldrb r3,[r3,#1]
 1722 001e 9B04     	 lsls r3,r3,#18
 1723 0020 7A69     	 ldr r2,[r7,#20]
 1724 0022 1343     	 orrs r3,r3,r2
 1725 0024 7B61     	 str r3,[r7,#20]
 746:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 747:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 2 */
 748:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS_EV2EM_Pos);
 1726              	 .loc 2 748 0
 1727 0026 7B69     	 ldr r3,[r7,#20]
 1728 0028 23F44013 	 bic r3,r3,#3145728
 1729 002c 7B61     	 str r3,[r7,#20]
 749:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU4_CC4_INS_EV2EM_Pos;
 1730              	 .loc 2 749 0
 1731 002e 7B68     	 ldr r3,[r7,#4]
 1732 0030 5B78     	 ldrb r3,[r3,#1]
 1733 0032 1B05     	 lsls r3,r3,#20
 1734 0034 7A69     	 ldr r2,[r7,#20]
 1735 0036 1343     	 orrs r3,r3,r2
 1736 0038 7B61     	 str r3,[r7,#20]
 750:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 751:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 1 */
 752:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS_EV1LM_Pos);
 1737              	 .loc 2 752 0
 1738 003a 7B69     	 ldr r3,[r7,#20]
 1739 003c 23F40003 	 bic r3,r3,#8388608
 1740 0040 7B61     	 str r3,[r7,#20]
 753:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->level) << CCU4_CC4_INS_EV1LM_Pos;
 1741              	 .loc 2 753 0
 1742 0042 BB68     	 ldr r3,[r7,#8]
 1743 0044 9B78     	 ldrb r3,[r3,#2]
 1744 0046 DB05     	 lsls r3,r3,#23
 1745 0048 7A69     	 ldr r2,[r7,#20]
 1746 004a 1343     	 orrs r3,r3,r2
 1747 004c 7B61     	 str r3,[r7,#20]
 754:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 755:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 2 */
 756:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS_EV2LM_Pos);
 1748              	 .loc 2 756 0
 1749 004e 7B69     	 ldr r3,[r7,#20]
 1750 0050 23F08073 	 bic r3,r3,#16777216
 1751 0054 7B61     	 str r3,[r7,#20]
 757:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->level) << CCU4_CC4_INS_EV2LM_Pos;
 1752              	 .loc 2 757 0
 1753 0056 7B68     	 ldr r3,[r7,#4]
 1754 0058 9B78     	 ldrb r3,[r3,#2]
 1755 005a 1B06     	 lsls r3,r3,#24
 1756 005c 7A69     	 ldr r2,[r7,#20]
 1757 005e 1343     	 orrs r3,r3,r2
 1758 0060 7B61     	 str r3,[r7,#20]
 758:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 759:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 1 */
 760:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS_LPF1M_Pos);
 1759              	 .loc 2 760 0
 1760 0062 7B69     	 ldr r3,[r7,#20]
 1761 0064 23F0C053 	 bic r3,r3,#402653184
 1762 0068 7B61     	 str r3,[r7,#20]
 761:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU4_CC4_INS_LPF1M_Pos;
 1763              	 .loc 2 761 0
 1764 006a BB68     	 ldr r3,[r7,#8]
 1765 006c DB78     	 ldrb r3,[r3,#3]
 1766 006e DB06     	 lsls r3,r3,#27
 1767 0070 7A69     	 ldr r2,[r7,#20]
 1768 0072 1343     	 orrs r3,r3,r2
 1769 0074 7B61     	 str r3,[r7,#20]
 762:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 763:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 2 */
 764:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS_LPF2M_Pos);
 1770              	 .loc 2 764 0
 1771 0076 7B69     	 ldr r3,[r7,#20]
 1772 0078 23F0C043 	 bic r3,r3,#1610612736
 1773 007c 7B61     	 str r3,[r7,#20]
 765:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU4_CC4_INS_LPF2M_Pos;
 1774              	 .loc 2 765 0
 1775 007e 7B68     	 ldr r3,[r7,#4]
 1776 0080 DB78     	 ldrb r3,[r3,#3]
 1777 0082 5B07     	 lsls r3,r3,#29
 1778 0084 7A69     	 ldr r2,[r7,#20]
 1779 0086 1343     	 orrs r3,r3,r2
 1780 0088 7B61     	 str r3,[r7,#20]
 766:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 767:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the input for Event1 */
 768:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS_EV1IS_Pos);
 1781              	 .loc 2 768 0
 1782 008a 7B69     	 ldr r3,[r7,#20]
 1783 008c 23F0F003 	 bic r3,r3,#240
 1784 0090 7B61     	 str r3,[r7,#20]
 769:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU4_CC4_INS_EV1IS_Pos;
 1785              	 .loc 2 769 0
 1786 0092 BB68     	 ldr r3,[r7,#8]
 1787 0094 1B78     	 ldrb r3,[r3]
 1788 0096 1B01     	 lsls r3,r3,#4
 1789 0098 7A69     	 ldr r2,[r7,#20]
 1790 009a 1343     	 orrs r3,r3,r2
 1791 009c 7B61     	 str r3,[r7,#20]
 770:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 771:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally, the input for Event2 */
 772:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS_EV2IS_Pos);
 1792              	 .loc 2 772 0
 1793 009e 7B69     	 ldr r3,[r7,#20]
 1794 00a0 23F47063 	 bic r3,r3,#3840
 1795 00a4 7B61     	 str r3,[r7,#20]
 773:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU4_CC4_INS_EV2IS_Pos;
 1796              	 .loc 2 773 0
 1797 00a6 7B68     	 ldr r3,[r7,#4]
 1798 00a8 1B78     	 ldrb r3,[r3]
 1799 00aa 1B02     	 lsls r3,r3,#8
 1800 00ac 7A69     	 ldr r2,[r7,#20]
 1801 00ae 1343     	 orrs r3,r3,r2
 1802 00b0 7B61     	 str r3,[r7,#20]
 774:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 775:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 1803              	 .loc 2 775 0
 1804 00b2 FB68     	 ldr r3,[r7,#12]
 1805 00b4 7A69     	 ldr r2,[r7,#20]
 1806 00b6 1A60     	 str r2,[r3]
 776:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 777:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1807              	 .loc 2 777 0
 1808 00b8 1C37     	 adds r7,r7,#28
 1809              	.LCFI140:
 1810              	 .cfi_def_cfa_offset 4
 1811 00ba BD46     	 mov sp,r7
 1812              	.LCFI141:
 1813              	 .cfi_def_cfa_register 13
 1814              	 
 1815 00bc 5DF8047B 	 ldr r7,[sp],#4
 1816              	.LCFI142:
 1817              	 .cfi_restore 7
 1818              	 .cfi_def_cfa_offset 0
 1819 00c0 7047     	 bx lr
 1820              	 .cfi_endproc
 1821              	.LFE215:
 1823 00c2 00BF     	 .section .text.XMC_CCU4_SLICE_ConfigureEvent,"ax",%progbits
 1824              	 .align 2
 1825              	 .global XMC_CCU4_SLICE_ConfigureEvent
 1826              	 .thumb
 1827              	 .thumb_func
 1829              	XMC_CCU4_SLICE_ConfigureEvent:
 1830              	.LFB216:
 778:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 779:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure a slice trigger event */
 780:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
 781:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                               const XMC_CCU4_SLICE_EVENT_t event,
 782:../Libraries/XMCLib/src/xmc_ccu4.c ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config)
 783:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1831              	 .loc 2 783 0
 1832              	 .cfi_startproc
 1833              	 
 1834              	 
 1835              	 
 1836 0000 80B4     	 push {r7}
 1837              	.LCFI143:
 1838              	 .cfi_def_cfa_offset 4
 1839              	 .cfi_offset 7,-4
 1840 0002 89B0     	 sub sp,sp,#36
 1841              	.LCFI144:
 1842              	 .cfi_def_cfa_offset 40
 1843 0004 00AF     	 add r7,sp,#0
 1844              	.LCFI145:
 1845              	 .cfi_def_cfa_register 7
 1846 0006 F860     	 str r0,[r7,#12]
 1847 0008 0B46     	 mov r3,r1
 1848 000a 7A60     	 str r2,[r7,#4]
 1849 000c FB72     	 strb r3,[r7,#11]
 784:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 785:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  pos;
 786:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  offset;
 787:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 788:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 789:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 790:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Input", XMC_CCU4_SLICE_IsInputvalid(config->map
 791:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 792:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 793:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Level Sensitivity",
 794:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 795:../Libraries/XMCLib/src/xmc_ccu4.c ****               (config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 796:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Debounce Period", 
 797:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(config->duration));
 798:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Calculate offset with reference to event */
 799:../Libraries/XMCLib/src/xmc_ccu4.c ****   offset = ((uint8_t) event) - 1U;
 1850              	 .loc 2 799 0
 1851 000e FB7A     	 ldrb r3,[r7,#11]
 1852 0010 013B     	 subs r3,r3,#1
 1853 0012 FB77     	 strb r3,[r7,#31]
 800:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 801:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 802:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS2;
 803:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 804:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, configure the edge sensitivity */
 805:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 806:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 807:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->edge) << pos;
 808:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 809:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the level */
 810:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 811:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 812:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->level) << pos;
 813:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 814:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the debounce filter */
 815:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 816:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 817:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->duration) << pos;
 818:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 819:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS2 = ins;
 820:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 821:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 822:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 823:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally the input */
 824:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 825:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 826:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 827:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 828:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 829:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 830:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 831:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 1854              	 .loc 2 831 0
 1855 0014 FB68     	 ldr r3,[r7,#12]
 1856 0016 1B68     	 ldr r3,[r3]
 1857 0018 BB61     	 str r3,[r7,#24]
 832:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 833:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, configure the edge sensitivity */
 834:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 1858              	 .loc 2 834 0
 1859 001a FB7F     	 ldrb r3,[r7,#31]
 1860 001c 5B00     	 lsls r3,r3,#1
 1861 001e DBB2     	 uxtb r3,r3
 1862 0020 1033     	 adds r3,r3,#16
 1863 0022 FB75     	 strb r3,[r7,#23]
 835:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 1864              	 .loc 2 835 0
 1865 0024 FB7D     	 ldrb r3,[r7,#23]
 1866 0026 0322     	 movs r2,#3
 1867 0028 02FA03F3 	 lsl r3,r2,r3
 1868 002c DB43     	 mvns r3,r3
 1869 002e BA69     	 ldr r2,[r7,#24]
 1870 0030 1340     	 ands r3,r3,r2
 1871 0032 BB61     	 str r3,[r7,#24]
 836:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->edge) << pos;
 1872              	 .loc 2 836 0
 1873 0034 7B68     	 ldr r3,[r7,#4]
 1874 0036 5B78     	 ldrb r3,[r3,#1]
 1875 0038 1A46     	 mov r2,r3
 1876 003a FB7D     	 ldrb r3,[r7,#23]
 1877 003c 02FA03F3 	 lsl r3,r2,r3
 1878 0040 BA69     	 ldr r2,[r7,#24]
 1879 0042 1343     	 orrs r3,r3,r2
 1880 0044 BB61     	 str r3,[r7,#24]
 837:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 838:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the level */
 839:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0LM_Pos) + offset;
 1881              	 .loc 2 839 0
 1882 0046 FB7F     	 ldrb r3,[r7,#31]
 1883 0048 1633     	 adds r3,r3,#22
 1884 004a FB75     	 strb r3,[r7,#23]
 840:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 1885              	 .loc 2 840 0
 1886 004c FB7D     	 ldrb r3,[r7,#23]
 1887 004e 0122     	 movs r2,#1
 1888 0050 02FA03F3 	 lsl r3,r2,r3
 1889 0054 DB43     	 mvns r3,r3
 1890 0056 BA69     	 ldr r2,[r7,#24]
 1891 0058 1340     	 ands r3,r3,r2
 1892 005a BB61     	 str r3,[r7,#24]
 841:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->level) << pos;
 1893              	 .loc 2 841 0
 1894 005c 7B68     	 ldr r3,[r7,#4]
 1895 005e 9B78     	 ldrb r3,[r3,#2]
 1896 0060 1A46     	 mov r2,r3
 1897 0062 FB7D     	 ldrb r3,[r7,#23]
 1898 0064 02FA03F3 	 lsl r3,r2,r3
 1899 0068 BA69     	 ldr r2,[r7,#24]
 1900 006a 1343     	 orrs r3,r3,r2
 1901 006c BB61     	 str r3,[r7,#24]
 842:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 843:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the debounce filter */
 844:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 1902              	 .loc 2 844 0
 1903 006e FB7F     	 ldrb r3,[r7,#31]
 1904 0070 5B00     	 lsls r3,r3,#1
 1905 0072 DBB2     	 uxtb r3,r3
 1906 0074 1933     	 adds r3,r3,#25
 1907 0076 FB75     	 strb r3,[r7,#23]
 845:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 1908              	 .loc 2 845 0
 1909 0078 FB7D     	 ldrb r3,[r7,#23]
 1910 007a 0322     	 movs r2,#3
 1911 007c 02FA03F3 	 lsl r3,r2,r3
 1912 0080 DB43     	 mvns r3,r3
 1913 0082 BA69     	 ldr r2,[r7,#24]
 1914 0084 1340     	 ands r3,r3,r2
 1915 0086 BB61     	 str r3,[r7,#24]
 846:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->duration) << pos;
 1916              	 .loc 2 846 0
 1917 0088 7B68     	 ldr r3,[r7,#4]
 1918 008a DB78     	 ldrb r3,[r3,#3]
 1919 008c 1A46     	 mov r2,r3
 1920 008e FB7D     	 ldrb r3,[r7,#23]
 1921 0090 02FA03F3 	 lsl r3,r2,r3
 1922 0094 BA69     	 ldr r2,[r7,#24]
 1923 0096 1343     	 orrs r3,r3,r2
 1924 0098 BB61     	 str r3,[r7,#24]
 847:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 848:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally the input */
 849:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 1925              	 .loc 2 849 0
 1926 009a FB7F     	 ldrb r3,[r7,#31]
 1927 009c 9B00     	 lsls r3,r3,#2
 1928 009e FB75     	 strb r3,[r7,#23]
 850:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1929              	 .loc 2 850 0
 1930 00a0 FB7D     	 ldrb r3,[r7,#23]
 1931 00a2 0F22     	 movs r2,#15
 1932 00a4 02FA03F3 	 lsl r3,r2,r3
 1933 00a8 DB43     	 mvns r3,r3
 1934 00aa BA69     	 ldr r2,[r7,#24]
 1935 00ac 1340     	 ands r3,r3,r2
 1936 00ae BB61     	 str r3,[r7,#24]
 851:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 1937              	 .loc 2 851 0
 1938 00b0 7B68     	 ldr r3,[r7,#4]
 1939 00b2 1B78     	 ldrb r3,[r3]
 1940 00b4 1A46     	 mov r2,r3
 1941 00b6 FB7D     	 ldrb r3,[r7,#23]
 1942 00b8 02FA03F3 	 lsl r3,r2,r3
 1943 00bc BA69     	 ldr r2,[r7,#24]
 1944 00be 1343     	 orrs r3,r3,r2
 1945 00c0 BB61     	 str r3,[r7,#24]
 852:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 853:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 1946              	 .loc 2 853 0
 1947 00c2 FB68     	 ldr r3,[r7,#12]
 1948 00c4 BA69     	 ldr r2,[r7,#24]
 1949 00c6 1A60     	 str r2,[r3]
 854:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 855:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1950              	 .loc 2 855 0
 1951 00c8 2437     	 adds r7,r7,#36
 1952              	.LCFI146:
 1953              	 .cfi_def_cfa_offset 4
 1954 00ca BD46     	 mov sp,r7
 1955              	.LCFI147:
 1956              	 .cfi_def_cfa_register 13
 1957              	 
 1958 00cc 5DF8047B 	 ldr r7,[sp],#4
 1959              	.LCFI148:
 1960              	 .cfi_restore 7
 1961              	 .cfi_def_cfa_offset 0
 1962 00d0 7047     	 bx lr
 1963              	 .cfi_endproc
 1964              	.LFE216:
 1966 00d2 00BF     	 .section .text.XMC_CCU4_SLICE_SetInput,"ax",%progbits
 1967              	 .align 2
 1968              	 .global XMC_CCU4_SLICE_SetInput
 1969              	 .thumb
 1970              	 .thumb_func
 1972              	XMC_CCU4_SLICE_SetInput:
 1973              	.LFB217:
 856:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 857:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to bind an input to a slice trigger event */
 858:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
 859:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                     const XMC_CCU4_SLICE_EVENT_t event,
 860:../Libraries/XMCLib/src/xmc_ccu4.c ****                              const XMC_CCU4_SLICE_INPUT_t input)
 861:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1974              	 .loc 2 861 0
 1975              	 .cfi_startproc
 1976              	 
 1977              	 
 1978              	 
 1979 0000 80B4     	 push {r7}
 1980              	.LCFI149:
 1981              	 .cfi_def_cfa_offset 4
 1982              	 .cfi_offset 7,-4
 1983 0002 85B0     	 sub sp,sp,#20
 1984              	.LCFI150:
 1985              	 .cfi_def_cfa_offset 24
 1986 0004 00AF     	 add r7,sp,#0
 1987              	.LCFI151:
 1988              	 .cfi_def_cfa_register 7
 1989 0006 7860     	 str r0,[r7,#4]
 1990 0008 0B46     	 mov r3,r1
 1991 000a FB70     	 strb r3,[r7,#3]
 1992 000c 1346     	 mov r3,r2
 1993 000e BB70     	 strb r3,[r7,#2]
 862:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 863:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  pos;
 864:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  offset;
 865:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 866:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 867:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 868:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Input", XMC_CCU4_SLICE_IsInputvalid(input));
 869:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 870:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Calculate offset with reference to event */
 871:../Libraries/XMCLib/src/xmc_ccu4.c ****   offset = ((uint8_t) event) - 1U;
 1994              	 .loc 2 871 0
 1995 0010 FB78     	 ldrb r3,[r7,#3]
 1996 0012 013B     	 subs r3,r3,#1
 1997 0014 FB73     	 strb r3,[r7,#15]
 872:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 873:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 874:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 875:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 876:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 877:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 878:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) input) << pos;
 879:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 880:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 881:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 882:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 1998              	 .loc 2 882 0
 1999 0016 FB7B     	 ldrb r3,[r7,#15]
 2000 0018 9B00     	 lsls r3,r3,#2
 2001 001a BB73     	 strb r3,[r7,#14]
 883:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 884:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 2002              	 .loc 2 884 0
 2003 001c 7B68     	 ldr r3,[r7,#4]
 2004 001e 1B68     	 ldr r3,[r3]
 2005 0020 BB60     	 str r3,[r7,#8]
 885:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 2006              	 .loc 2 885 0
 2007 0022 BB7B     	 ldrb r3,[r7,#14]
 2008 0024 0F22     	 movs r2,#15
 2009 0026 02FA03F3 	 lsl r3,r2,r3
 2010 002a DB43     	 mvns r3,r3
 2011 002c BA68     	 ldr r2,[r7,#8]
 2012 002e 1340     	 ands r3,r3,r2
 2013 0030 BB60     	 str r3,[r7,#8]
 886:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) input) << pos;
 2014              	 .loc 2 886 0
 2015 0032 BA78     	 ldrb r2,[r7,#2]
 2016 0034 BB7B     	 ldrb r3,[r7,#14]
 2017 0036 02FA03F3 	 lsl r3,r2,r3
 2018 003a BA68     	 ldr r2,[r7,#8]
 2019 003c 1343     	 orrs r3,r3,r2
 2020 003e BB60     	 str r3,[r7,#8]
 887:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 888:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 2021              	 .loc 2 888 0
 2022 0040 7B68     	 ldr r3,[r7,#4]
 2023 0042 BA68     	 ldr r2,[r7,#8]
 2024 0044 1A60     	 str r2,[r3]
 889:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 890:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2025              	 .loc 2 890 0
 2026 0046 1437     	 adds r7,r7,#20
 2027              	.LCFI152:
 2028              	 .cfi_def_cfa_offset 4
 2029 0048 BD46     	 mov sp,r7
 2030              	.LCFI153:
 2031              	 .cfi_def_cfa_register 13
 2032              	 
 2033 004a 5DF8047B 	 ldr r7,[sp],#4
 2034              	.LCFI154:
 2035              	 .cfi_restore 7
 2036              	 .cfi_def_cfa_offset 0
 2037 004e 7047     	 bx lr
 2038              	 .cfi_endproc
 2039              	.LFE217:
 2041              	 .section .text.XMC_CCU4_SLICE_SetTimerRepeatMode,"ax",%progbits
 2042              	 .align 2
 2043              	 .global XMC_CCU4_SLICE_SetTimerRepeatMode
 2044              	 .thumb
 2045              	 .thumb_func
 2047              	XMC_CCU4_SLICE_SetTimerRepeatMode:
 2048              	.LFB218:
 891:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 892:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to program timer repeat mode - Single shot vs repeat */
 893:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
 894:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2049              	 .loc 2 894 0
 2050              	 .cfi_startproc
 2051              	 
 2052              	 
 2053              	 
 2054 0000 80B4     	 push {r7}
 2055              	.LCFI155:
 2056              	 .cfi_def_cfa_offset 4
 2057              	 .cfi_offset 7,-4
 2058 0002 83B0     	 sub sp,sp,#12
 2059              	.LCFI156:
 2060              	 .cfi_def_cfa_offset 16
 2061 0004 00AF     	 add r7,sp,#0
 2062              	.LCFI157:
 2063              	 .cfi_def_cfa_register 7
 2064 0006 7860     	 str r0,[r7,#4]
 2065 0008 0B46     	 mov r3,r1
 2066 000a FB70     	 strb r3,[r7,#3]
 895:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
 896:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode",
 897:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((mode == XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT) ||\
 898:../Libraries/XMCLib/src/xmc_ccu4.c **** 		      (mode == XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE)));
 899:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 900:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 2067              	 .loc 2 900 0
 2068 000c FB78     	 ldrb r3,[r7,#3]
 2069 000e 002B     	 cmp r3,#0
 2070 0010 06D1     	 bne .L75
 901:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 902:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC &= ~((uint32_t) CCU4_CC4_TC_TSSM_Msk);
 2071              	 .loc 2 902 0
 2072 0012 7B68     	 ldr r3,[r7,#4]
 2073 0014 5B69     	 ldr r3,[r3,#20]
 2074 0016 23F00202 	 bic r2,r3,#2
 2075 001a 7B68     	 ldr r3,[r7,#4]
 2076 001c 5A61     	 str r2,[r3,#20]
 2077 001e 05E0     	 b .L74
 2078              	.L75:
 903:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 904:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 905:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 906:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC |= (uint32_t) CCU4_CC4_TC_TSSM_Msk;
 2079              	 .loc 2 906 0
 2080 0020 7B68     	 ldr r3,[r7,#4]
 2081 0022 5B69     	 ldr r3,[r3,#20]
 2082 0024 43F00202 	 orr r2,r3,#2
 2083 0028 7B68     	 ldr r3,[r7,#4]
 2084 002a 5A61     	 str r2,[r3,#20]
 2085              	.L74:
 907:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 908:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2086              	 .loc 2 908 0
 2087 002c 0C37     	 adds r7,r7,#12
 2088              	.LCFI158:
 2089              	 .cfi_def_cfa_offset 4
 2090 002e BD46     	 mov sp,r7
 2091              	.LCFI159:
 2092              	 .cfi_def_cfa_register 13
 2093              	 
 2094 0030 5DF8047B 	 ldr r7,[sp],#4
 2095              	.LCFI160:
 2096              	 .cfi_restore 7
 2097              	 .cfi_def_cfa_offset 0
 2098 0034 7047     	 bx lr
 2099              	 .cfi_endproc
 2100              	.LFE218:
 2102 0036 00BF     	 .section .text.XMC_CCU4_SLICE_SetTimerCountingMode,"ax",%progbits
 2103              	 .align 2
 2104              	 .global XMC_CCU4_SLICE_SetTimerCountingMode
 2105              	 .thumb
 2106              	 .thumb_func
 2108              	XMC_CCU4_SLICE_SetTimerCountingMode:
 2109              	.LFB219:
 909:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 910:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Programs timer counting mode */
 911:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
 912:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2110              	 .loc 2 912 0
 2111              	 .cfi_startproc
 2112              	 
 2113              	 
 2114              	 
 2115 0000 80B4     	 push {r7}
 2116              	.LCFI161:
 2117              	 .cfi_def_cfa_offset 4
 2118              	 .cfi_offset 7,-4
 2119 0002 83B0     	 sub sp,sp,#12
 2120              	.LCFI162:
 2121              	 .cfi_def_cfa_offset 16
 2122 0004 00AF     	 add r7,sp,#0
 2123              	.LCFI163:
 2124              	 .cfi_def_cfa_register 7
 2125 0006 7860     	 str r0,[r7,#4]
 2126 0008 0B46     	 mov r3,r1
 2127 000a FB70     	 strb r3,[r7,#3]
 913:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
 914:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCountingMode:Invalid Timer Count Mode", ((mode == XMC_CCU4_SLI
 915:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                                                          (mode == XMC_CCU4_SLICE
 916:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 917:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA == mode)
 2128              	 .loc 2 917 0
 2129 000c FB78     	 ldrb r3,[r7,#3]
 2130 000e 002B     	 cmp r3,#0
 2131 0010 06D1     	 bne .L78
 918:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 919:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC &= ~((uint32_t) CCU4_CC4_TC_TCM_Msk);
 2132              	 .loc 2 919 0
 2133 0012 7B68     	 ldr r3,[r7,#4]
 2134 0014 5B69     	 ldr r3,[r3,#20]
 2135 0016 23F00102 	 bic r2,r3,#1
 2136 001a 7B68     	 ldr r3,[r7,#4]
 2137 001c 5A61     	 str r2,[r3,#20]
 2138 001e 05E0     	 b .L77
 2139              	.L78:
 920:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 921:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 922:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 923:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC |= (uint32_t) CCU4_CC4_TC_TCM_Msk;
 2140              	 .loc 2 923 0
 2141 0020 7B68     	 ldr r3,[r7,#4]
 2142 0022 5B69     	 ldr r3,[r3,#20]
 2143 0024 43F00102 	 orr r2,r3,#1
 2144 0028 7B68     	 ldr r3,[r7,#4]
 2145 002a 5A61     	 str r2,[r3,#20]
 2146              	.L77:
 924:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 925:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2147              	 .loc 2 925 0
 2148 002c 0C37     	 adds r7,r7,#12
 2149              	.LCFI164:
 2150              	 .cfi_def_cfa_offset 4
 2151 002e BD46     	 mov sp,r7
 2152              	.LCFI165:
 2153              	 .cfi_def_cfa_register 13
 2154              	 
 2155 0030 5DF8047B 	 ldr r7,[sp],#4
 2156              	.LCFI166:
 2157              	 .cfi_restore 7
 2158              	 .cfi_def_cfa_offset 0
 2159 0034 7047     	 bx lr
 2160              	 .cfi_endproc
 2161              	.LFE219:
 2163 0036 00BF     	 .section .text.XMC_CCU4_SLICE_GetCaptureRegisterValue,"ax",%progbits
 2164              	 .align 2
 2165              	 .global XMC_CCU4_SLICE_GetCaptureRegisterValue
 2166              	 .thumb
 2167              	 .thumb_func
 2169              	XMC_CCU4_SLICE_GetCaptureRegisterValue:
 2170              	.LFB220:
 926:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 927:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Retrieves desired capture register value */
 928:../Libraries/XMCLib/src/xmc_ccu4.c **** uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue(const XMC_CCU4_SLICE_t *const slice, const uint8_t 
 929:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2171              	 .loc 2 929 0
 2172              	 .cfi_startproc
 2173              	 
 2174              	 
 2175              	 
 2176 0000 80B4     	 push {r7}
 2177              	.LCFI167:
 2178              	 .cfi_def_cfa_offset 4
 2179              	 .cfi_offset 7,-4
 2180 0002 83B0     	 sub sp,sp,#12
 2181              	.LCFI168:
 2182              	 .cfi_def_cfa_offset 16
 2183 0004 00AF     	 add r7,sp,#0
 2184              	.LCFI169:
 2185              	 .cfi_def_cfa_register 7
 2186 0006 7860     	 str r0,[r7,#4]
 2187 0008 0B46     	 mov r3,r1
 2188 000a FB70     	 strb r3,[r7,#3]
 930:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
 931:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
 932:../Libraries/XMCLib/src/xmc_ccu4.c ****   return(slice->CV[reg_num]);
 2189              	 .loc 2 932 0
 2190 000c FB78     	 ldrb r3,[r7,#3]
 2191 000e 7A68     	 ldr r2,[r7,#4]
 2192 0010 1C33     	 adds r3,r3,#28
 2193 0012 9B00     	 lsls r3,r3,#2
 2194 0014 1344     	 add r3,r3,r2
 2195 0016 5B68     	 ldr r3,[r3,#4]
 933:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2196              	 .loc 2 933 0
 2197 0018 1846     	 mov r0,r3
 2198 001a 0C37     	 adds r7,r7,#12
 2199              	.LCFI170:
 2200              	 .cfi_def_cfa_offset 4
 2201 001c BD46     	 mov sp,r7
 2202              	.LCFI171:
 2203              	 .cfi_def_cfa_register 13
 2204              	 
 2205 001e 5DF8047B 	 ldr r7,[sp],#4
 2206              	.LCFI172:
 2207              	 .cfi_restore 7
 2208              	 .cfi_def_cfa_offset 0
 2209 0022 7047     	 bx lr
 2210              	 .cfi_endproc
 2211              	.LFE220:
 2213              	 .section .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 2214              	 .align 2
 2215              	 .global XMC_CCU4_SLICE_GetLastCapturedTimerValue
 2216              	 .thumb
 2217              	 .thumb_func
 2219              	XMC_CCU4_SLICE_GetLastCapturedTimerValue:
 2220              	.LFB221:
 934:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 935:../Libraries/XMCLib/src/xmc_ccu4.c **** /* @brief Retrieves the latest captured timer value */
 936:../Libraries/XMCLib/src/xmc_ccu4.c **** XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue(const XMC_CCU4_SLICE_t *const slice,
 937:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                            const XMC_CCU4_SLICE_CAP_REG_SET_t set,
 938:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                            uint32_t *val_ptr)
 939:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2221              	 .loc 2 939 0
 2222              	 .cfi_startproc
 2223              	 
 2224              	 
 2225              	 
 2226 0000 80B4     	 push {r7}
 2227              	.LCFI173:
 2228              	 .cfi_def_cfa_offset 4
 2229              	 .cfi_offset 7,-4
 2230 0002 87B0     	 sub sp,sp,#28
 2231              	.LCFI174:
 2232              	 .cfi_def_cfa_offset 32
 2233 0004 00AF     	 add r7,sp,#0
 2234              	.LCFI175:
 2235              	 .cfi_def_cfa_register 7
 2236 0006 F860     	 str r0,[r7,#12]
 2237 0008 0B46     	 mov r3,r1
 2238 000a 7A60     	 str r2,[r7,#4]
 2239 000c FB72     	 strb r3,[r7,#11]
 940:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_STATUS_t retval;
 941:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t i;
 942:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t start;
 943:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t end;
 944:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 945:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlic
 946:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetLastCapturedTimerValue:Invalid Register Set", ((set == XMC_CCU4_SLI
 947:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                                                           (set == XMC_CCU4_SLICE
 948:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 949:../Libraries/XMCLib/src/xmc_ccu4.c ****   retval = XMC_CCU4_STATUS_ERROR;
 2240              	 .loc 2 949 0
 2241 000e 0123     	 movs r3,#1
 2242 0010 FB75     	 strb r3,[r7,#23]
 950:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 951:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First check if extended capture mode is enabled */
 952:../Libraries/XMCLib/src/xmc_ccu4.c ****   if ((slice->TC) & CCU4_CC4_TC_ECM_Msk)
 2243              	 .loc 2 952 0
 2244 0012 FB68     	 ldr r3,[r7,#12]
 2245 0014 5B69     	 ldr r3,[r3,#20]
 2246 0016 03F01003 	 and r3,r3,#16
 2247 001a 002B     	 cmp r3,#0
 2248 001c 04D0     	 beq .L83
 953:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 954:../Libraries/XMCLib/src/xmc_ccu4.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
 955:../Libraries/XMCLib/src/xmc_ccu4.c ****     start = 0U;
 2249              	 .loc 2 955 0
 2250 001e 0023     	 movs r3,#0
 2251 0020 7B75     	 strb r3,[r7,#21]
 956:../Libraries/XMCLib/src/xmc_ccu4.c ****     end = XMC_CCU4_NUM_SLICES_PER_MODULE;
 2252              	 .loc 2 956 0
 2253 0022 0423     	 movs r3,#4
 2254 0024 3B75     	 strb r3,[r7,#20]
 2255 0026 0BE0     	 b .L84
 2256              	.L83:
 957:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 958:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 959:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 960:../Libraries/XMCLib/src/xmc_ccu4.c ****     /* Extended capture mode is not enabled */
 961:../Libraries/XMCLib/src/xmc_ccu4.c ****     if (set == XMC_CCU4_SLICE_CAP_REG_SET_HIGH)
 2257              	 .loc 2 961 0
 2258 0028 FB7A     	 ldrb r3,[r7,#11]
 2259 002a 012B     	 cmp r3,#1
 2260 002c 04D1     	 bne .L85
 962:../Libraries/XMCLib/src/xmc_ccu4.c ****     {
 963:../Libraries/XMCLib/src/xmc_ccu4.c ****       start = ((uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE) >> 1U;
 2261              	 .loc 2 963 0
 2262 002e 0223     	 movs r3,#2
 2263 0030 7B75     	 strb r3,[r7,#21]
 964:../Libraries/XMCLib/src/xmc_ccu4.c ****       end   = (uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE;
 2264              	 .loc 2 964 0
 2265 0032 0423     	 movs r3,#4
 2266 0034 3B75     	 strb r3,[r7,#20]
 2267 0036 03E0     	 b .L84
 2268              	.L85:
 965:../Libraries/XMCLib/src/xmc_ccu4.c ****     }
 966:../Libraries/XMCLib/src/xmc_ccu4.c ****     else
 967:../Libraries/XMCLib/src/xmc_ccu4.c ****     {
 968:../Libraries/XMCLib/src/xmc_ccu4.c ****       start = 0U;
 2269              	 .loc 2 968 0
 2270 0038 0023     	 movs r3,#0
 2271 003a 7B75     	 strb r3,[r7,#21]
 969:../Libraries/XMCLib/src/xmc_ccu4.c ****       end = ((uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE) >> 1U;
 2272              	 .loc 2 969 0
 2273 003c 0223     	 movs r3,#2
 2274 003e 3B75     	 strb r3,[r7,#20]
 2275              	.L84:
 970:../Libraries/XMCLib/src/xmc_ccu4.c ****     }
 971:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 972:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 973:../Libraries/XMCLib/src/xmc_ccu4.c ****   for(i=start; i < end; i++)
 2276              	 .loc 2 973 0
 2277 0040 7B7D     	 ldrb r3,[r7,#21]
 2278 0042 BB75     	 strb r3,[r7,#22]
 2279 0044 17E0     	 b .L86
 2280              	.L89:
 974:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 975:../Libraries/XMCLib/src/xmc_ccu4.c ****     if ( (slice->CV[i]) & CCU4_CC4_CV_FFL_Msk )
 2281              	 .loc 2 975 0
 2282 0046 BB7D     	 ldrb r3,[r7,#22]
 2283 0048 FA68     	 ldr r2,[r7,#12]
 2284 004a 1C33     	 adds r3,r3,#28
 2285 004c 9B00     	 lsls r3,r3,#2
 2286 004e 1344     	 add r3,r3,r2
 2287 0050 5B68     	 ldr r3,[r3,#4]
 2288 0052 03F48013 	 and r3,r3,#1048576
 2289 0056 002B     	 cmp r3,#0
 2290 0058 0AD0     	 beq .L87
 976:../Libraries/XMCLib/src/xmc_ccu4.c ****     {
 977:../Libraries/XMCLib/src/xmc_ccu4.c ****       *val_ptr = slice->CV[i];
 2291              	 .loc 2 977 0
 2292 005a BB7D     	 ldrb r3,[r7,#22]
 2293 005c FA68     	 ldr r2,[r7,#12]
 2294 005e 1C33     	 adds r3,r3,#28
 2295 0060 9B00     	 lsls r3,r3,#2
 2296 0062 1344     	 add r3,r3,r2
 2297 0064 5A68     	 ldr r2,[r3,#4]
 2298 0066 7B68     	 ldr r3,[r7,#4]
 2299 0068 1A60     	 str r2,[r3]
 978:../Libraries/XMCLib/src/xmc_ccu4.c ****       retval = XMC_CCU4_STATUS_OK;
 2300              	 .loc 2 978 0
 2301 006a 0023     	 movs r3,#0
 2302 006c FB75     	 strb r3,[r7,#23]
 979:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2303              	 .loc 2 979 0
 2304 006e 06E0     	 b .L88
 2305              	.L87:
 973:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 2306              	 .loc 2 973 0 discriminator 2
 2307 0070 BB7D     	 ldrb r3,[r7,#22]
 2308 0072 0133     	 adds r3,r3,#1
 2309 0074 BB75     	 strb r3,[r7,#22]
 2310              	.L86:
 973:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 2311              	 .loc 2 973 0 is_stmt 0 discriminator 1
 2312 0076 BA7D     	 ldrb r2,[r7,#22]
 2313 0078 3B7D     	 ldrb r3,[r7,#20]
 2314 007a 9A42     	 cmp r2,r3
 2315 007c E3D3     	 bcc .L89
 2316              	.L88:
 980:../Libraries/XMCLib/src/xmc_ccu4.c ****     }
 981:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 982:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 983:../Libraries/XMCLib/src/xmc_ccu4.c ****   return retval;
 2317              	 .loc 2 983 0 is_stmt 1
 2318 007e FB7D     	 ldrb r3,[r7,#23]
 984:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2319              	 .loc 2 984 0
 2320 0080 1846     	 mov r0,r3
 2321 0082 1C37     	 adds r7,r7,#28
 2322              	.LCFI176:
 2323              	 .cfi_def_cfa_offset 4
 2324 0084 BD46     	 mov sp,r7
 2325              	.LCFI177:
 2326              	 .cfi_def_cfa_register 13
 2327              	 
 2328 0086 5DF8047B 	 ldr r7,[sp],#4
 2329              	.LCFI178:
 2330              	 .cfi_restore 7
 2331              	 .cfi_def_cfa_offset 0
 2332 008a 7047     	 bx lr
 2333              	 .cfi_endproc
 2334              	.LFE221:
 2336              	 .section .text.XMC_CCU4_SLICE_GetCapturedValueFromFifo,"ax",%progbits
 2337              	 .align 2
 2338              	 .global XMC_CCU4_SLICE_GetCapturedValueFromFifo
 2339              	 .thumb
 2340              	 .thumb_func
 2342              	XMC_CCU4_SLICE_GetCapturedValueFromFifo:
 2343              	.LFB222:
 985:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 986:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
 987:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V1) /* Defined for XMC4500, XMC400, XMC4200, XMC4100 devices only */
 988:../Libraries/XMCLib/src/xmc_ccu4.c **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
 989:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 990:../Libraries/XMCLib/src/xmc_ccu4.c ****   int32_t   cap;
 991:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t  extracted_slice;
 992:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 993:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU4_IsValidModule(modu
 994:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 995:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First read the global fifo register */
 996:../Libraries/XMCLib/src/xmc_ccu4.c ****   cap = (int32_t) module->ECRD;
 997:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 998:../Libraries/XMCLib/src/xmc_ccu4.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU4_ECRD_SPTR_Msk)) >> CCU4_ECRD_SPTR_Pos;
 999:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1000:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Return captured result only if it were applicable to this slice */
1001:../Libraries/XMCLib/src/xmc_ccu4.c ****   if(extracted_slice != ((uint32_t)slice_number))
1002:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1003:../Libraries/XMCLib/src/xmc_ccu4.c ****     cap = -1;
1004:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1005:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1006:../Libraries/XMCLib/src/xmc_ccu4.c ****   return (cap);
1007:../Libraries/XMCLib/src/xmc_ccu4.c **** }
1008:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
1009:../Libraries/XMCLib/src/xmc_ccu4.c **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1010:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                         const XMC_CCU4_SLICE_CAP_REG_SET_t set)
1011:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2344              	 .loc 2 1011 0
 2345              	 .cfi_startproc
 2346              	 
 2347              	 
 2348              	 
 2349 0000 80B4     	 push {r7}
 2350              	.LCFI179:
 2351              	 .cfi_def_cfa_offset 4
 2352              	 .cfi_offset 7,-4
 2353 0002 85B0     	 sub sp,sp,#20
 2354              	.LCFI180:
 2355              	 .cfi_def_cfa_offset 24
 2356 0004 00AF     	 add r7,sp,#0
 2357              	.LCFI181:
 2358              	 .cfi_def_cfa_register 7
 2359 0006 7860     	 str r0,[r7,#4]
 2360 0008 0B46     	 mov r3,r1
 2361 000a FB70     	 strb r3,[r7,#3]
1012:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cap;
1013:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1014:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1015:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCapturedValueFromFifo:Invalid Register Set", 
1016:../Libraries/XMCLib/src/xmc_ccu4.c ****       ((set == XMC_CCU4_SLICE_CAP_REG_SET_LOW) ||\
1017:../Libraries/XMCLib/src/xmc_ccu4.c **** 		   (set == XMC_CCU4_SLICE_CAP_REG_SET_HIGH)));
1018:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1019:../Libraries/XMCLib/src/xmc_ccu4.c ****   if(XMC_CCU4_SLICE_CAP_REG_SET_LOW == set)
 2362              	 .loc 2 1019 0
 2363 000c FB78     	 ldrb r3,[r7,#3]
 2364 000e 002B     	 cmp r3,#0
 2365 0010 04D1     	 bne .L92
1020:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1021:../Libraries/XMCLib/src/xmc_ccu4.c ****     cap = slice->ECRD0;
 2366              	 .loc 2 1021 0
 2367 0012 7B68     	 ldr r3,[r7,#4]
 2368 0014 D3F8B830 	 ldr r3,[r3,#184]
 2369 0018 FB60     	 str r3,[r7,#12]
 2370 001a 03E0     	 b .L93
 2371              	.L92:
1022:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1023:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
1024:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1025:../Libraries/XMCLib/src/xmc_ccu4.c ****     cap = slice->ECRD1;
 2372              	 .loc 2 1025 0
 2373 001c 7B68     	 ldr r3,[r7,#4]
 2374 001e D3F8BC30 	 ldr r3,[r3,#188]
 2375 0022 FB60     	 str r3,[r7,#12]
 2376              	.L93:
1026:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1027:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1028:../Libraries/XMCLib/src/xmc_ccu4.c ****   return cap;
 2377              	 .loc 2 1028 0
 2378 0024 FB68     	 ldr r3,[r7,#12]
1029:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2379              	 .loc 2 1029 0
 2380 0026 1846     	 mov r0,r3
 2381 0028 1437     	 adds r7,r7,#20
 2382              	.LCFI182:
 2383              	 .cfi_def_cfa_offset 4
 2384 002a BD46     	 mov sp,r7
 2385              	.LCFI183:
 2386              	 .cfi_def_cfa_register 13
 2387              	 
 2388 002c 5DF8047B 	 ldr r7,[sp],#4
 2389              	.LCFI184:
 2390              	 .cfi_restore 7
 2391              	 .cfi_def_cfa_offset 0
 2392 0030 7047     	 bx lr
 2393              	 .cfi_endproc
 2394              	.LFE222:
 2396 0032 00BF     	 .section .text.XMC_CCU4_SLICE_EnableDithering,"ax",%progbits
 2397              	 .align 2
 2398              	 .global XMC_CCU4_SLICE_EnableDithering
 2399              	 .thumb
 2400              	 .thumb_func
 2402              	XMC_CCU4_SLICE_EnableDithering:
 2403              	.LFB223:
1030:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
1031:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1032:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Enables PWM dithering feature */
1033:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1034:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                const bool period_dither,
1035:../Libraries/XMCLib/src/xmc_ccu4.c ****                                     const bool duty_dither,
1036:../Libraries/XMCLib/src/xmc_ccu4.c ****                                     const uint8_t spread)
1037:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2404              	 .loc 2 1037 0
 2405              	 .cfi_startproc
 2406              	 
 2407              	 
 2408 0000 80B5     	 push {r7,lr}
 2409              	.LCFI185:
 2410              	 .cfi_def_cfa_offset 8
 2411              	 .cfi_offset 7,-8
 2412              	 .cfi_offset 14,-4
 2413 0002 84B0     	 sub sp,sp,#16
 2414              	.LCFI186:
 2415              	 .cfi_def_cfa_offset 24
 2416 0004 00AF     	 add r7,sp,#0
 2417              	.LCFI187:
 2418              	 .cfi_def_cfa_register 7
 2419 0006 7860     	 str r0,[r7,#4]
 2420 0008 0846     	 mov r0,r1
 2421 000a 1146     	 mov r1,r2
 2422 000c 1A46     	 mov r2,r3
 2423 000e 0346     	 mov r3,r0
 2424 0010 FB70     	 strb r3,[r7,#3]
 2425 0012 0B46     	 mov r3,r1
 2426 0014 BB70     	 strb r3,[r7,#2]
 2427 0016 1346     	 mov r3,r2
 2428 0018 7B70     	 strb r3,[r7,#1]
1038:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
1039:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1040:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1041:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1042:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 2429              	 .loc 2 1042 0
 2430 001a 7B68     	 ldr r3,[r7,#4]
 2431 001c 5B69     	 ldr r3,[r3,#20]
 2432 001e FB60     	 str r3,[r7,#12]
1043:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
 2433              	 .loc 2 1043 0
 2434 0020 FB68     	 ldr r3,[r7,#12]
 2435 0022 23F4C043 	 bic r3,r3,#24576
 2436 0026 FB60     	 str r3,[r7,#12]
1044:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1045:../Libraries/XMCLib/src/xmc_ccu4.c ****   if ((bool) true == period_dither)
 2437              	 .loc 2 1045 0
 2438 0028 FB78     	 ldrb r3,[r7,#3]
 2439 002a 002B     	 cmp r3,#0
 2440 002c 03D0     	 beq .L96
1046:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1047:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (((uint32_t) XMC_CCU4_SLICE_DITHER_PERIOD_MASK) << CCU4_CC4_TC_DITHE_Pos);
 2441              	 .loc 2 1047 0
 2442 002e FB68     	 ldr r3,[r7,#12]
 2443 0030 43F40053 	 orr r3,r3,#8192
 2444 0034 FB60     	 str r3,[r7,#12]
 2445              	.L96:
1048:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1049:../Libraries/XMCLib/src/xmc_ccu4.c ****   if ((bool) true == duty_dither)
 2446              	 .loc 2 1049 0
 2447 0036 BB78     	 ldrb r3,[r7,#2]
 2448 0038 002B     	 cmp r3,#0
 2449 003a 03D0     	 beq .L97
1050:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1051:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (((uint32_t) XMC_CCU4_SLICE_DITHER_DUTYCYCLE_MASK) << CCU4_CC4_TC_DITHE_Pos);
 2450              	 .loc 2 1051 0
 2451 003c FB68     	 ldr r3,[r7,#12]
 2452 003e 43F48043 	 orr r3,r3,#16384
 2453 0042 FB60     	 str r3,[r7,#12]
 2454              	.L97:
1052:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1053:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1054:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 2455              	 .loc 2 1054 0
 2456 0044 7B68     	 ldr r3,[r7,#4]
 2457 0046 FA68     	 ldr r2,[r7,#12]
 2458 0048 5A61     	 str r2,[r3,#20]
1055:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1056:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_SLICE_SetDitherCompareValue((XMC_CCU4_SLICE_t *)slice, (uint8_t)spread);
 2459              	 .loc 2 1056 0
 2460 004a 7B78     	 ldrb r3,[r7,#1]
 2461 004c 7868     	 ldr r0,[r7,#4]
 2462 004e 1946     	 mov r1,r3
 2463 0050 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetDitherCompareValue
1057:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2464              	 .loc 2 1057 0
 2465 0054 1037     	 adds r7,r7,#16
 2466              	.LCFI188:
 2467              	 .cfi_def_cfa_offset 8
 2468 0056 BD46     	 mov sp,r7
 2469              	.LCFI189:
 2470              	 .cfi_def_cfa_register 13
 2471              	 
 2472 0058 80BD     	 pop {r7,pc}
 2473              	 .cfi_endproc
 2474              	.LFE223:
 2476 005a 00BF     	 .section .text.XMC_CCU4_SLICE_SetPrescaler,"ax",%progbits
 2477              	 .align 2
 2478              	 .global XMC_CCU4_SLICE_SetPrescaler
 2479              	 .thumb
 2480              	 .thumb_func
 2482              	XMC_CCU4_SLICE_SetPrescaler:
 2483              	.LFB224:
1058:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1059:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Programs Pre-scalar divider  */
1060:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetPrescaler(XMC_CCU4_SLICE_t *const slice, const uint8_t div_val)
1061:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2484              	 .loc 2 1061 0
 2485              	 .cfi_startproc
 2486              	 
 2487              	 
 2488              	 
 2489 0000 80B4     	 push {r7}
 2490              	.LCFI190:
 2491              	 .cfi_def_cfa_offset 4
 2492              	 .cfi_offset 7,-4
 2493 0002 85B0     	 sub sp,sp,#20
 2494              	.LCFI191:
 2495              	 .cfi_def_cfa_offset 24
 2496 0004 00AF     	 add r7,sp,#0
 2497              	.LCFI192:
 2498              	 .cfi_def_cfa_register 7
 2499 0006 7860     	 str r0,[r7,#4]
 2500 0008 0B46     	 mov r3,r1
 2501 000a FB70     	 strb r3,[r7,#3]
1062:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t fpc;
1063:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1064:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1065:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1066:../Libraries/XMCLib/src/xmc_ccu4.c ****   fpc = slice->FPC;
 2502              	 .loc 2 1066 0
 2503 000c 7B68     	 ldr r3,[r7,#4]
 2504 000e 9B6A     	 ldr r3,[r3,#40]
 2505 0010 FB60     	 str r3,[r7,#12]
1067:../Libraries/XMCLib/src/xmc_ccu4.c ****   fpc &= ~((uint32_t) CCU4_CC4_FPC_PVAL_Msk);
 2506              	 .loc 2 1067 0
 2507 0012 FB68     	 ldr r3,[r7,#12]
 2508 0014 23F47063 	 bic r3,r3,#3840
 2509 0018 FB60     	 str r3,[r7,#12]
1068:../Libraries/XMCLib/src/xmc_ccu4.c ****   fpc |= ((uint32_t) div_val) << CCU4_CC4_FPC_PVAL_Pos;
 2510              	 .loc 2 1068 0
 2511 001a FB78     	 ldrb r3,[r7,#3]
 2512 001c 1B02     	 lsls r3,r3,#8
 2513 001e FA68     	 ldr r2,[r7,#12]
 2514 0020 1343     	 orrs r3,r3,r2
 2515 0022 FB60     	 str r3,[r7,#12]
1069:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->FPC = fpc;
 2516              	 .loc 2 1069 0
 2517 0024 7B68     	 ldr r3,[r7,#4]
 2518 0026 FA68     	 ldr r2,[r7,#12]
 2519 0028 9A62     	 str r2,[r3,#40]
1070:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* 
1071:../Libraries/XMCLib/src/xmc_ccu4.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1072:../Libraries/XMCLib/src/xmc_ccu4.c ****    * compare value.
1073:../Libraries/XMCLib/src/xmc_ccu4.c ****    */
1074:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) div_val;
 2520              	 .loc 2 1074 0
 2521 002a FA78     	 ldrb r2,[r7,#3]
 2522 002c 7B68     	 ldr r3,[r7,#4]
 2523 002e 5A62     	 str r2,[r3,#36]
1075:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2524              	 .loc 2 1075 0
 2525 0030 1437     	 adds r7,r7,#20
 2526              	.LCFI193:
 2527              	 .cfi_def_cfa_offset 4
 2528 0032 BD46     	 mov sp,r7
 2529              	.LCFI194:
 2530              	 .cfi_def_cfa_register 13
 2531              	 
 2532 0034 5DF8047B 	 ldr r7,[sp],#4
 2533              	.LCFI195:
 2534              	 .cfi_restore 7
 2535              	 .cfi_def_cfa_offset 0
 2536 0038 7047     	 bx lr
 2537              	 .cfi_endproc
 2538              	.LFE224:
 2540 003a 00BF     	 .section .text.XMC_CCU4_SLICE_SetInterruptNode,"ax",%progbits
 2541              	 .align 2
 2542              	 .global XMC_CCU4_SLICE_SetInterruptNode
 2543              	 .thumb
 2544              	 .thumb_func
 2546              	XMC_CCU4_SLICE_SetInterruptNode:
 2547              	.LFB225:
1076:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1077:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Binds a capcom event to an NVIC node  */
1078:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetInterruptNode(XMC_CCU4_SLICE_t *const slice,
1079:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_IRQ_ID_t event,
1080:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_SR_ID_t sr)
1081:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2548              	 .loc 2 1081 0
 2549              	 .cfi_startproc
 2550              	 
 2551              	 
 2552              	 
 2553 0000 80B4     	 push {r7}
 2554              	.LCFI196:
 2555              	 .cfi_def_cfa_offset 4
 2556              	 .cfi_offset 7,-4
 2557 0002 87B0     	 sub sp,sp,#28
 2558              	.LCFI197:
 2559              	 .cfi_def_cfa_offset 32
 2560 0004 00AF     	 add r7,sp,#0
 2561              	.LCFI198:
 2562              	 .cfi_def_cfa_register 7
 2563 0006 7860     	 str r0,[r7,#4]
 2564 0008 0B46     	 mov r3,r1
 2565 000a FB70     	 strb r3,[r7,#3]
 2566 000c 1346     	 mov r3,r2
 2567 000e BB70     	 strb r3,[r7,#2]
1082:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t srs;
1083:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t pos;
1084:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t mask;
1085:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1086:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1087:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU4_SLICE_CHECK_SR_ID(sr));
1088:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event)
1089:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1090:../Libraries/XMCLib/src/xmc_ccu4.c ****   srs = slice->SRS;
 2568              	 .loc 2 1090 0
 2569 0010 7B68     	 ldr r3,[r7,#4]
 2570 0012 D3F8A830 	 ldr r3,[r3,#168]
 2571 0016 FB60     	 str r3,[r7,#12]
1091:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1092:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch(event)
 2572              	 .loc 2 1092 0
 2573 0018 FB78     	 ldrb r3,[r7,#3]
 2574 001a 092B     	 cmp r3,#9
 2575 001c 2CD8     	 bhi .L100
 2576 001e 01A2     	 adr r2,.L102
 2577 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2578              	 .p2align 2
 2579              	.L102:
 2580 0024 4D000000 	 .word .L101+1
 2581 0028 4D000000 	 .word .L101+1
 2582 002c 57000000 	 .word .L103+1
 2583 0030 57000000 	 .word .L103+1
 2584 0034 79000000 	 .word .L100+1
 2585 0038 79000000 	 .word .L100+1
 2586 003c 79000000 	 .word .L100+1
 2587 0040 79000000 	 .word .L100+1
 2588 0044 61000000 	 .word .L104+1
 2589 0048 6D000000 	 .word .L105+1
 2590              	 .p2align 1
 2591              	.L101:
1093:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1094:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH:
1095:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH:
1096:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_POSR_Msk);
 2592              	 .loc 2 1096 0
 2593 004c 0323     	 movs r3,#3
 2594 004e 3B61     	 str r3,[r7,#16]
1097:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_POSR_Pos;
 2595              	 .loc 2 1097 0
 2596 0050 0023     	 movs r3,#0
 2597 0052 7B61     	 str r3,[r7,#20]
1098:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2598              	 .loc 2 1098 0
 2599 0054 16E0     	 b .L106
 2600              	.L103:
1099:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1100:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP:
1101:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN:
1102:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_CMSR_Msk);
 2601              	 .loc 2 1102 0
 2602 0056 0C23     	 movs r3,#12
 2603 0058 3B61     	 str r3,[r7,#16]
1103:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_CMSR_Pos;
 2604              	 .loc 2 1103 0
 2605 005a 0223     	 movs r3,#2
 2606 005c 7B61     	 str r3,[r7,#20]
1104:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2607              	 .loc 2 1104 0
 2608 005e 11E0     	 b .L106
 2609              	.L104:
1105:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1106:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_EVENT0:
1107:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E0SR_Msk);
 2610              	 .loc 2 1107 0
 2611 0060 4FF44073 	 mov r3,#768
 2612 0064 3B61     	 str r3,[r7,#16]
1108:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E0SR_Pos;
 2613              	 .loc 2 1108 0
 2614 0066 0823     	 movs r3,#8
 2615 0068 7B61     	 str r3,[r7,#20]
1109:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2616              	 .loc 2 1109 0
 2617 006a 0BE0     	 b .L106
 2618              	.L105:
1110:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1111:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_EVENT1:
1112:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E1SR_Msk);
 2619              	 .loc 2 1112 0
 2620 006c 4FF44063 	 mov r3,#3072
 2621 0070 3B61     	 str r3,[r7,#16]
1113:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E1SR_Pos;
 2622              	 .loc 2 1113 0
 2623 0072 0A23     	 movs r3,#10
 2624 0074 7B61     	 str r3,[r7,#20]
1114:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2625              	 .loc 2 1114 0
 2626 0076 05E0     	 b .L106
 2627              	.L100:
1115:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1116:../Libraries/XMCLib/src/xmc_ccu4.c ****     default:
1117:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E2SR_Msk);
 2628              	 .loc 2 1117 0
 2629 0078 4FF44053 	 mov r3,#12288
 2630 007c 3B61     	 str r3,[r7,#16]
1118:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E2SR_Pos;
 2631              	 .loc 2 1118 0
 2632 007e 0C23     	 movs r3,#12
 2633 0080 7B61     	 str r3,[r7,#20]
1119:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2634              	 .loc 2 1119 0
 2635 0082 00BF     	 nop
 2636              	.L106:
1120:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1121:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1122:../Libraries/XMCLib/src/xmc_ccu4.c ****   srs &= ~mask; 
 2637              	 .loc 2 1122 0
 2638 0084 3B69     	 ldr r3,[r7,#16]
 2639 0086 DB43     	 mvns r3,r3
 2640 0088 FA68     	 ldr r2,[r7,#12]
 2641 008a 1340     	 ands r3,r3,r2
 2642 008c FB60     	 str r3,[r7,#12]
1123:../Libraries/XMCLib/src/xmc_ccu4.c ****   srs |= (uint32_t)sr << pos;
 2643              	 .loc 2 1123 0
 2644 008e BA78     	 ldrb r2,[r7,#2]
 2645 0090 7B69     	 ldr r3,[r7,#20]
 2646 0092 02FA03F3 	 lsl r3,r2,r3
 2647 0096 FA68     	 ldr r2,[r7,#12]
 2648 0098 1343     	 orrs r3,r3,r2
 2649 009a FB60     	 str r3,[r7,#12]
1124:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->SRS = srs;
 2650              	 .loc 2 1124 0
 2651 009c 7B68     	 ldr r3,[r7,#4]
 2652 009e FA68     	 ldr r2,[r7,#12]
 2653 00a0 C3F8A820 	 str r2,[r3,#168]
1125:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2654              	 .loc 2 1125 0
 2655 00a4 1C37     	 adds r7,r7,#28
 2656              	.LCFI199:
 2657              	 .cfi_def_cfa_offset 4
 2658 00a6 BD46     	 mov sp,r7
 2659              	.LCFI200:
 2660              	 .cfi_def_cfa_register 13
 2661              	 
 2662 00a8 5DF8047B 	 ldr r7,[sp],#4
 2663              	.LCFI201:
 2664              	 .cfi_restore 7
 2665              	 .cfi_def_cfa_offset 0
 2666 00ac 7047     	 bx lr
 2667              	 .cfi_endproc
 2668              	.LFE225:
 2670 00ae 00BF     	 .section .text.XMC_CCU4_SLICE_SetPassiveLevel,"ax",%progbits
 2671              	 .align 2
 2672              	 .global XMC_CCU4_SLICE_SetPassiveLevel
 2673              	 .thumb
 2674              	 .thumb_func
 2676              	XMC_CCU4_SLICE_SetPassiveLevel:
 2677              	.LFB226:
1126:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1127:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Asserts passive level for the slice output */
1128:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetPassiveLevel(XMC_CCU4_SLICE_t *const slice,
1129:../Libraries/XMCLib/src/xmc_ccu4.c ****                                     const XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1130:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2678              	 .loc 2 1130 0
 2679              	 .cfi_startproc
 2680              	 
 2681              	 
 2682              	 
 2683 0000 80B4     	 push {r7}
 2684              	.LCFI202:
 2685              	 .cfi_def_cfa_offset 4
 2686              	 .cfi_offset 7,-4
 2687 0002 85B0     	 sub sp,sp,#20
 2688              	.LCFI203:
 2689              	 .cfi_def_cfa_offset 24
 2690 0004 00AF     	 add r7,sp,#0
 2691              	.LCFI204:
 2692              	 .cfi_def_cfa_register 7
 2693 0006 7860     	 str r0,[r7,#4]
 2694 0008 0B46     	 mov r3,r1
 2695 000a FB70     	 strb r3,[r7,#3]
1131:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t psl; 
1132:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1133:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1134:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPassiveLevel:Invalid Passive level", ((level == XMC_CCU4_SLICE_OUTP
1135:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                                                  (level == XMC_CCU4_SLICE_OUTPUT
1136:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1137:../Libraries/XMCLib/src/xmc_ccu4.c ****   psl = slice->PSL;
 2696              	 .loc 2 1137 0
 2697 000c 7B68     	 ldr r3,[r7,#4]
 2698 000e 9B69     	 ldr r3,[r3,#24]
 2699 0010 FB60     	 str r3,[r7,#12]
1138:../Libraries/XMCLib/src/xmc_ccu4.c ****   psl &= ~((uint32_t) CCU4_CC4_PSL_PSL_Msk);
 2700              	 .loc 2 1138 0
 2701 0012 FB68     	 ldr r3,[r7,#12]
 2702 0014 23F00103 	 bic r3,r3,#1
 2703 0018 FB60     	 str r3,[r7,#12]
1139:../Libraries/XMCLib/src/xmc_ccu4.c ****   psl |= (uint32_t) level;
 2704              	 .loc 2 1139 0
 2705 001a FB78     	 ldrb r3,[r7,#3]
 2706 001c FA68     	 ldr r2,[r7,#12]
 2707 001e 1343     	 orrs r3,r3,r2
 2708 0020 FB60     	 str r3,[r7,#12]
1140:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1141:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program CC4 slice output passive level */
1142:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSL = psl;
 2709              	 .loc 2 1142 0
 2710 0022 7B68     	 ldr r3,[r7,#4]
 2711 0024 FA68     	 ldr r2,[r7,#12]
 2712 0026 9A61     	 str r2,[r3,#24]
1143:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2713              	 .loc 2 1143 0
 2714 0028 1437     	 adds r7,r7,#20
 2715              	.LCFI205:
 2716              	 .cfi_def_cfa_offset 4
 2717 002a BD46     	 mov sp,r7
 2718              	.LCFI206:
 2719              	 .cfi_def_cfa_register 13
 2720              	 
 2721 002c 5DF8047B 	 ldr r7,[sp],#4
 2722              	.LCFI207:
 2723              	 .cfi_restore 7
 2724              	 .cfi_def_cfa_offset 0
 2725 0030 7047     	 bx lr
 2726              	 .cfi_endproc
 2727              	.LFE226:
 2729 0032 00BF     	 .text
 2730              	.Letext0:
 2731              	 .file 3 "e:\\davev4\\dave-4.1.4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2732              	 .file 4 "e:\\davev4\\dave-4.1.4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2733              	 .file 5 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 2734              	 .file 6 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest\\Libraries\\XMCLib\\inc/xmc4_scu.h"
 2735              	 .file 7 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest/Libraries/CMSIS/Include/core_cm4.h"
 2736              	 .file 8 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu4.c
    {standard input}:20     .text.XMC_CCU4_StartPrescaler:00000000 $t
    {standard input}:24     .text.XMC_CCU4_StartPrescaler:00000000 XMC_CCU4_StartPrescaler
    {standard input}:66     .text.XMC_CCU4_SLICE_SetDitherCompareValue:00000000 $t
    {standard input}:70     .text.XMC_CCU4_SLICE_SetDitherCompareValue:00000000 XMC_CCU4_SLICE_SetDitherCompareValue
    {standard input}:111    .text.XMC_CCU4_lAssertReset:00000000 $t
    {standard input}:115    .text.XMC_CCU4_lAssertReset:00000000 XMC_CCU4_lAssertReset
    {standard input}:194    .text.XMC_CCU4_lAssertReset:00000054 $d
    {standard input}:203    .text.XMC_CCU4_lDeassertReset:00000000 $t
    {standard input}:207    .text.XMC_CCU4_lDeassertReset:00000000 XMC_CCU4_lDeassertReset
    {standard input}:285    .text.XMC_CCU4_lDeassertReset:00000054 $d
    {standard input}:294    .text.XMC_CCU4_lGateClock:00000000 $t
    {standard input}:298    .text.XMC_CCU4_lGateClock:00000000 XMC_CCU4_lGateClock
    {standard input}:376    .text.XMC_CCU4_lGateClock:00000054 $d
    {standard input}:385    .text.XMC_CCU4_lUngateClock:00000000 $t
    {standard input}:389    .text.XMC_CCU4_lUngateClock:00000000 XMC_CCU4_lUngateClock
    {standard input}:467    .text.XMC_CCU4_lUngateClock:00000054 $d
    {standard input}:476    .text.XMC_CCU4_EnableModule:00000000 $t
    {standard input}:481    .text.XMC_CCU4_EnableModule:00000000 XMC_CCU4_EnableModule
    {standard input}:521    .text.XMC_CCU4_DisableModule:00000000 $t
    {standard input}:526    .text.XMC_CCU4_DisableModule:00000000 XMC_CCU4_DisableModule
    {standard input}:563    .text.XMC_CCU4_Init:00000000 $t
    {standard input}:568    .text.XMC_CCU4_Init:00000000 XMC_CCU4_Init
    {standard input}:625    .text.XMC_CCU4_SetModuleClock:00000000 $t
    {standard input}:630    .text.XMC_CCU4_SetModuleClock:00000000 XMC_CCU4_SetModuleClock
    {standard input}:685    .text.XMC_CCU4_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:690    .text.XMC_CCU4_SetMultiChannelShadowTransferMode:00000000 XMC_CCU4_SetMultiChannelShadowTransferMode
    {standard input}:747    .text.XMC_CCU4_SLICE_CompareInit:00000000 $t
    {standard input}:752    .text.XMC_CCU4_SLICE_CompareInit:00000000 XMC_CCU4_SLICE_CompareInit
    {standard input}:833    .text.XMC_CCU4_SLICE_CaptureInit:00000000 $t
    {standard input}:838    .text.XMC_CCU4_SLICE_CaptureInit:00000000 XMC_CCU4_SLICE_CaptureInit
    {standard input}:903    .text.XMC_CCU4_SLICE_StartConfig:00000000 $t
    {standard input}:908    .text.XMC_CCU4_SLICE_StartConfig:00000000 XMC_CCU4_SLICE_StartConfig
    {standard input}:987    .text.XMC_CCU4_SLICE_StopConfig:00000000 $t
    {standard input}:992    .text.XMC_CCU4_SLICE_StopConfig:00000000 XMC_CCU4_SLICE_StopConfig
    {standard input}:1067   .text.XMC_CCU4_SLICE_LoadConfig:00000000 $t
    {standard input}:1072   .text.XMC_CCU4_SLICE_LoadConfig:00000000 XMC_CCU4_SLICE_LoadConfig
    {standard input}:1127   .text.XMC_CCU4_SLICE_ModulationConfig:00000000 $t
    {standard input}:1132   .text.XMC_CCU4_SLICE_ModulationConfig:00000000 XMC_CCU4_SLICE_ModulationConfig
    {standard input}:1232   .text.XMC_CCU4_SLICE_CountConfig:00000000 $t
    {standard input}:1237   .text.XMC_CCU4_SLICE_CountConfig:00000000 XMC_CCU4_SLICE_CountConfig
    {standard input}:1292   .text.XMC_CCU4_SLICE_GateConfig:00000000 $t
    {standard input}:1297   .text.XMC_CCU4_SLICE_GateConfig:00000000 XMC_CCU4_SLICE_GateConfig
    {standard input}:1352   .text.XMC_CCU4_SLICE_Capture0Config:00000000 $t
    {standard input}:1357   .text.XMC_CCU4_SLICE_Capture0Config:00000000 XMC_CCU4_SLICE_Capture0Config
    {standard input}:1412   .text.XMC_CCU4_SLICE_Capture1Config:00000000 $t
    {standard input}:1417   .text.XMC_CCU4_SLICE_Capture1Config:00000000 XMC_CCU4_SLICE_Capture1Config
    {standard input}:1472   .text.XMC_CCU4_SLICE_DirectionConfig:00000000 $t
    {standard input}:1477   .text.XMC_CCU4_SLICE_DirectionConfig:00000000 XMC_CCU4_SLICE_DirectionConfig
    {standard input}:1532   .text.XMC_CCU4_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:1537   .text.XMC_CCU4_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU4_SLICE_StatusBitOverrideConfig
    {standard input}:1588   .text.XMC_CCU4_SLICE_TrapConfig:00000000 $t
    {standard input}:1593   .text.XMC_CCU4_SLICE_TrapConfig:00000000 XMC_CCU4_SLICE_TrapConfig
    {standard input}:1686   .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:1691   .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:1824   .text.XMC_CCU4_SLICE_ConfigureEvent:00000000 $t
    {standard input}:1829   .text.XMC_CCU4_SLICE_ConfigureEvent:00000000 XMC_CCU4_SLICE_ConfigureEvent
    {standard input}:1967   .text.XMC_CCU4_SLICE_SetInput:00000000 $t
    {standard input}:1972   .text.XMC_CCU4_SLICE_SetInput:00000000 XMC_CCU4_SLICE_SetInput
    {standard input}:2042   .text.XMC_CCU4_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:2047   .text.XMC_CCU4_SLICE_SetTimerRepeatMode:00000000 XMC_CCU4_SLICE_SetTimerRepeatMode
    {standard input}:2103   .text.XMC_CCU4_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:2108   .text.XMC_CCU4_SLICE_SetTimerCountingMode:00000000 XMC_CCU4_SLICE_SetTimerCountingMode
    {standard input}:2164   .text.XMC_CCU4_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:2169   .text.XMC_CCU4_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU4_SLICE_GetCaptureRegisterValue
    {standard input}:2214   .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:2219   .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU4_SLICE_GetLastCapturedTimerValue
    {standard input}:2337   .text.XMC_CCU4_SLICE_GetCapturedValueFromFifo:00000000 $t
    {standard input}:2342   .text.XMC_CCU4_SLICE_GetCapturedValueFromFifo:00000000 XMC_CCU4_SLICE_GetCapturedValueFromFifo
    {standard input}:2397   .text.XMC_CCU4_SLICE_EnableDithering:00000000 $t
    {standard input}:2402   .text.XMC_CCU4_SLICE_EnableDithering:00000000 XMC_CCU4_SLICE_EnableDithering
    {standard input}:2477   .text.XMC_CCU4_SLICE_SetPrescaler:00000000 $t
    {standard input}:2482   .text.XMC_CCU4_SLICE_SetPrescaler:00000000 XMC_CCU4_SLICE_SetPrescaler
    {standard input}:2541   .text.XMC_CCU4_SLICE_SetInterruptNode:00000000 $t
    {standard input}:2546   .text.XMC_CCU4_SLICE_SetInterruptNode:00000000 XMC_CCU4_SLICE_SetInterruptNode
    {standard input}:2580   .text.XMC_CCU4_SLICE_SetInterruptNode:00000024 $d
    {standard input}:2590   .text.XMC_CCU4_SLICE_SetInterruptNode:0000004c $t
    {standard input}:2671   .text.XMC_CCU4_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:2676   .text.XMC_CCU4_SLICE_SetPassiveLevel:00000000 XMC_CCU4_SLICE_SetPassiveLevel
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_EnableClock
