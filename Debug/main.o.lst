   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_GPIO_SetOutputHigh:
  25              	.LFB213:
  26              	 .file 1 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest\\Libraries\\XMCLib\\inc/xmc_gpio.h"
   1:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
   2:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @date 2016-01-12
   4:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
   5:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @cond
   6:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   *************************************************************************************************
   7:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * XMClib v2.1.4 - XMC Peripheral Driver Library 
   8:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
   9:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * All rights reserved.                        
  11:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *                                             
  12:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * following conditions are met:   
  14:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *                                                                              
  15:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * disclaimer.                        
  17:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * 
  18:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * 
  21:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *                                                                              
  24:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *                                                                              
  32:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  **************************************************************************************************
  35:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  36:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Change History
  37:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * --------------
  38:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  39:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * 2015-02-20:
  40:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *      
  43:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * 2015-06-20:
  44:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  46:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @endcond
  47:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  48:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
  49:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
  50:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
  53:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**************************************************************************************************
  54:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * HEADER FILES
  55:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  **************************************************************************************************
  56:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
  57:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #include "xmc_common.h"
  58:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
  59:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
  60:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @{
  62:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
  63:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
  64:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
  65:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  68:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  72:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  74:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Input mode features:
  75:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \if XMC1
  78:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \endif
  80:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  81:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * 
  82:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Output mode features:
  83:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \if XMC4
  85:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \endif
  87:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  88:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  90:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *@{
  91:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
  92:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  
  93:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**************************************************************************************************
  94:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * MACROS
  95:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  **************************************************************************************************
  96:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
  97:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 100:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 											
 102:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 103:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****                                             
 106:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****                                             
 110:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**************************************************************************************************
 111:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * ENUMS
 112:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  **************************************************************************************************
 113:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 114:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 115:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 116:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 118:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** {
 120:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 124:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 125:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 127:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** {
 129:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 134:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**************************************************************************************************
 135:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  **************************************************************************************************
 137:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 138:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #else
 143:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #endif
 145:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 146:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**************************************************************************************************
 147:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * API PROTOTYPES
 148:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  **************************************************************************************************
 149:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 150:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #ifdef __cplusplus
 151:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** extern "C" {
 152:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** #endif
 153:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 154:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 155:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 156:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 160:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return None
 161:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 162:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \if XMC1
 164:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \endif
 168:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \if XMC4
 169:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \endif
 173:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 174:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *  None
 176:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 177:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 181:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 182:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 183:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 184:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  
 185:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  
 187:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 188:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 189:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 193:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return None
 194:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 195:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 200:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *  None
 202:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 203:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 204:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 205:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 207:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 208:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 209:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 210:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 214:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return None
 215:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 216:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 220:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 223:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 226:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 227:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 228:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 229:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** {
 231:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   
 234:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** }
 236:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 237:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 238:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 239:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 242:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return None
 243:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 244:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 247:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 250:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 254:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 255:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 256:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** {
  27              	 .loc 1 257 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
 258:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 260:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  45              	 .loc 1 260 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 5A60     	 str r2,[r3,#4]
 261:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** }
  51              	 .loc 1 261 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE213:
  67              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_GPIO_SetOutputLow:
  73              	.LFB214:
 262:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 263:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 264:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 265:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 268:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return  None
 269:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 270:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 273:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 276:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 280:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 281:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 282:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** {
  74              	 .loc 1 283 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 0B46     	 mov r3,r1
  91 000a FB70     	 strb r3,[r7,#3]
 284:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 286:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  92              	 .loc 1 286 0
  93 000c FB78     	 ldrb r3,[r7,#3]
  94 000e 4FF48032 	 mov r2,#65536
  95 0012 9A40     	 lsls r2,r2,r3
  96 0014 7B68     	 ldr r3,[r7,#4]
  97 0016 5A60     	 str r2,[r3,#4]
 287:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** }
  98              	 .loc 1 287 0
  99 0018 0C37     	 adds r7,r7,#12
 100              	.LCFI9:
 101              	 .cfi_def_cfa_offset 4
 102 001a BD46     	 mov sp,r7
 103              	.LCFI10:
 104              	 .cfi_def_cfa_register 13
 105              	 
 106 001c 5DF8047B 	 ldr r7,[sp],#4
 107              	.LCFI11:
 108              	 .cfi_restore 7
 109              	 .cfi_def_cfa_offset 0
 110 0020 7047     	 bx lr
 111              	 .cfi_endproc
 112              	.LFE214:
 114 0022 00BF     	 .section .text.XMC_GPIO_GetInput,"ax",%progbits
 115              	 .align 2
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_GPIO_GetInput:
 120              	.LFB216:
 288:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 289:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 290:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 291:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 294:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return None
 295:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 296:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 299:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 302:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 306:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 307:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 308:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** {
 310:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 312:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 313:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** }
 314:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 315:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 316:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 317:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 318:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param pin  Port pin number.
 319:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 320:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 321:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 322:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 323:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 324:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 325:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 326:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * None
 327:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 328:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 329:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 330:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 331:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 332:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 333:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 334:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** {
 121              	 .loc 1 334 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	 
 126 0000 80B4     	 push {r7}
 127              	.LCFI12:
 128              	 .cfi_def_cfa_offset 4
 129              	 .cfi_offset 7,-4
 130 0002 83B0     	 sub sp,sp,#12
 131              	.LCFI13:
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	.LCFI14:
 135              	 .cfi_def_cfa_register 7
 136 0006 7860     	 str r0,[r7,#4]
 137 0008 0B46     	 mov r3,r1
 138 000a FB70     	 strb r3,[r7,#3]
 335:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 336:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** 
 337:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
 139              	 .loc 1 337 0
 140 000c 7B68     	 ldr r3,[r7,#4]
 141 000e 5A6A     	 ldr r2,[r3,#36]
 142 0010 FB78     	 ldrb r3,[r7,#3]
 143 0012 22FA03F3 	 lsr r3,r2,r3
 144 0016 03F00103 	 and r3,r3,#1
 338:D:\dholler\Dokumente\uni\bus\xmc\priotest\Libraries\XMCLib\inc\xmc_gpio.h **** }
 145              	 .loc 1 338 0
 146 001a 1846     	 mov r0,r3
 147 001c 0C37     	 adds r7,r7,#12
 148              	.LCFI15:
 149              	 .cfi_def_cfa_offset 4
 150 001e BD46     	 mov sp,r7
 151              	.LCFI16:
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 0020 5DF8047B 	 ldr r7,[sp],#4
 155              	.LCFI17:
 156              	 .cfi_restore 7
 157              	 .cfi_def_cfa_offset 0
 158 0024 7047     	 bx lr
 159              	 .cfi_endproc
 160              	.LFE216:
 162 0026 00BF     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 163              	 .align 2
 164              	 .thumb
 165              	 .thumb_func
 167              	DIGITAL_IO_SetOutputHigh:
 168              	.LFB227:
 169              	 .file 2 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest\\Dave\\Generated/DIGITAL_IO/digital_io.h"
   1:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /*
   2:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
   3:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * @date 2015-12-22
   5:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
   6:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
   9:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.12 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  13:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  16:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  19:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  22:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  25:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  28:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  36:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  40:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  43:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  46:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  49:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  52:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  55:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  56:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  57:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  */
  58:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  59:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  60:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  61:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  62:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  63:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  64:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  65:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  66:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  67:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_common.h>
  68:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  69:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  70:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  71:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  72:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  73:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  74:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  75:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  76:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  77:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** #endif
  78:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  79:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  80:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  81:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  82:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  83:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
  84:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  85:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @{
  86:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
  87:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  88:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
  89:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  90:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
  91:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  92:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** {
  93:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  94:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  95:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  96:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  97:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
  98:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @}
  99:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 100:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 101:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 102:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 103:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 104:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 105:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 106:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @{
 107:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 108:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 109:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 110:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 111:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 112:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 113:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** {
 114:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 115:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 116:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 117:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 118:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 119:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 120:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 121:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 122:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @}
 123:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 124:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 125:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 126:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 127:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 128:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 129:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 130:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 131:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 132:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 133:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** #endif
 134:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 135:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 136:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 137:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @{
 138:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 139:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 140:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 141:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 142:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 143:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 144:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 145:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 146:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 147:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 148:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 149:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 150:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 151:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 152:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @code
 153:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 154:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 155:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 156:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * {
 157:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 158:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 159:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 160:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 161:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 162:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 163:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 164:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 165:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 166:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 167:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 168:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     }
 169:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 170:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 171:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 172:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 173:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 174:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     }
 175:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 176:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  }
 177:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 178:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 179:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 180:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 181:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 182:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 183:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 184:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 185:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 186:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 187:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 188:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 189:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 190:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 191:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 192:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 193:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * None
 194:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 195:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 196:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @code
 197:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 198:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 199:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * {
 200:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 201:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 202:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 203:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 204:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 205:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 206:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   else
 207:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 208:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 209:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 210:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     {
 211:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     }
 212:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 213:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 214:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 215:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 216:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 217:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 218:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  }
 219:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 220:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 221:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 222:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 223:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 224:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 225:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 226:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 227:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 228:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @return None
 229:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 230:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 231:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 232:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 233:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 234:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 235:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 236:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 237:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @code
 238:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 239:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 240:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * {
 241:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 242:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 243:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 244:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 245:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 246:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 247:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   else
 248:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 249:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 250:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 251:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     {
 252:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     }
 253:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 254:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 255:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 256:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 257:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 258:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 259:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 260:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 261:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 262:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * }
 263:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 264:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 265:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 266:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 267:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** {
 170              	 .loc 2 267 0
 171              	 .cfi_startproc
 172              	 
 173              	 
 174 0000 80B5     	 push {r7,lr}
 175              	.LCFI18:
 176              	 .cfi_def_cfa_offset 8
 177              	 .cfi_offset 7,-8
 178              	 .cfi_offset 14,-4
 179 0002 82B0     	 sub sp,sp,#8
 180              	.LCFI19:
 181              	 .cfi_def_cfa_offset 16
 182 0004 00AF     	 add r7,sp,#0
 183              	.LCFI20:
 184              	 .cfi_def_cfa_register 7
 185 0006 7860     	 str r0,[r7,#4]
 268:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 269:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 186              	 .loc 2 269 0
 187 0008 7B68     	 ldr r3,[r7,#4]
 188 000a 1A68     	 ldr r2,[r3]
 189 000c 7B68     	 ldr r3,[r7,#4]
 190 000e 1B7C     	 ldrb r3,[r3,#16]
 191 0010 1046     	 mov r0,r2
 192 0012 1946     	 mov r1,r3
 193 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 270:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** }
 194              	 .loc 2 270 0
 195 0018 0837     	 adds r7,r7,#8
 196              	.LCFI21:
 197              	 .cfi_def_cfa_offset 8
 198 001a BD46     	 mov sp,r7
 199              	.LCFI22:
 200              	 .cfi_def_cfa_register 13
 201              	 
 202 001c 80BD     	 pop {r7,pc}
 203              	 .cfi_endproc
 204              	.LFE227:
 206 001e 00BF     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 207              	 .align 2
 208              	 .thumb
 209              	 .thumb_func
 211              	DIGITAL_IO_SetOutputLow:
 212              	.LFB228:
 271:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 272:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 273:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 274:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 275:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @return None
 276:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 277:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 278:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 279:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 280:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 281:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 282:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 283:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 284:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @code
 285:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 286:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 287:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  {
 288:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 289:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 290:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 291:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    {
 292:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 293:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    }
 294:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    else
 295:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    {
 296:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 297:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 298:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      {
 299:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      }
 300:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    }
 301:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 302:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 303:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 304:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    {
 305:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 306:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *    }
 307:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 308:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 309:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * }
 310:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 311:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 312:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 313:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 314:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** {
 213              	 .loc 2 314 0
 214              	 .cfi_startproc
 215              	 
 216              	 
 217 0000 80B5     	 push {r7,lr}
 218              	.LCFI23:
 219              	 .cfi_def_cfa_offset 8
 220              	 .cfi_offset 7,-8
 221              	 .cfi_offset 14,-4
 222 0002 82B0     	 sub sp,sp,#8
 223              	.LCFI24:
 224              	 .cfi_def_cfa_offset 16
 225 0004 00AF     	 add r7,sp,#0
 226              	.LCFI25:
 227              	 .cfi_def_cfa_register 7
 228 0006 7860     	 str r0,[r7,#4]
 315:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 316:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 229              	 .loc 2 316 0
 230 0008 7B68     	 ldr r3,[r7,#4]
 231 000a 1A68     	 ldr r2,[r3]
 232 000c 7B68     	 ldr r3,[r7,#4]
 233 000e 1B7C     	 ldrb r3,[r3,#16]
 234 0010 1046     	 mov r0,r2
 235 0012 1946     	 mov r1,r3
 236 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 317:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** }
 237              	 .loc 2 317 0
 238 0018 0837     	 adds r7,r7,#8
 239              	.LCFI26:
 240              	 .cfi_def_cfa_offset 8
 241 001a BD46     	 mov sp,r7
 242              	.LCFI27:
 243              	 .cfi_def_cfa_register 13
 244              	 
 245 001c 80BD     	 pop {r7,pc}
 246              	 .cfi_endproc
 247              	.LFE228:
 249 001e 00BF     	 .section .text.DIGITAL_IO_GetInput,"ax",%progbits
 250              	 .align 2
 251              	 .thumb
 252              	 .thumb_func
 254              	DIGITAL_IO_GetInput:
 255              	.LFB230:
 318:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 319:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 320:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Function to Toggle port pin.
 321:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 322:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @return None
 323:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 324:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 325:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to toggle port pin.
 326:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 327:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 328:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputLow(), DIGITAL_IO_SetOutputHigh()
 329:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 330:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 331:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 332:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @code
 333:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 334:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 335:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * {
 336:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 337:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   uint32_t delay_count;;
 338:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 339:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 340:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 341:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 342:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 343:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   else
 344:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 345:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 346:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 347:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      {
 348:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      }
 349:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 350:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 351:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 352:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 353:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 1 -> 0 (if initial output level is logic
 354:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 355:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 356:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      DIGITAL_IO_ToggleOutput(&DIGITAL_IO_0); //toggles : 0 -> 1
 357:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      //Add application code here
 358:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *      for(delay_count = 0;delay_count<0xfffff;delay_count++);
 359:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 360:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 361:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * }
 362:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 363:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 364:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 365:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_ToggleOutput(const DIGITAL_IO_t *const handler)
 366:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** {
 367:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_ToggleOutput: handler null pointer", handler != NULL);
 368:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_ToggleOutput(handler->gpio_port, handler->gpio_pin);
 369:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** }
 370:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 371:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 372:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Function to read input level of port pin.
 373:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 374:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @return uint32_t input logic level. Range:0-1
 375:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 376:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 377:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * This function reads the Pn_IN register and returns the current logical value at the GPIO pin.
 378:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 379:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 380:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  None
 381:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 382:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 383:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * @code
 384:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 385:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 386:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * {
 387:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 388:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   uint32_t pin_status;
 389:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();   // (DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_
 390:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 391:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 392:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 393:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 394:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   else
 395:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 396:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 397:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 398:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     {
 399:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     }
 400:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 401:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 402:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 403:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 404:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     pin_status = DIGITAL_IO_GetInput(&DIGITAL_IO_0);
 405:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     if(pin_status == 1)
 406:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     {
 407:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 408:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     }
 409:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     else
 410:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     {
 411:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *       // Add application code here
 412:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *     }
 413:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 414:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 415:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** * }
 416:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 417:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 418:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 419:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE uint32_t DIGITAL_IO_GetInput(const DIGITAL_IO_t *const handler)
 420:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** {
 256              	 .loc 2 420 0
 257              	 .cfi_startproc
 258              	 
 259              	 
 260 0000 80B5     	 push {r7,lr}
 261              	.LCFI28:
 262              	 .cfi_def_cfa_offset 8
 263              	 .cfi_offset 7,-8
 264              	 .cfi_offset 14,-4
 265 0002 82B0     	 sub sp,sp,#8
 266              	.LCFI29:
 267              	 .cfi_def_cfa_offset 16
 268 0004 00AF     	 add r7,sp,#0
 269              	.LCFI30:
 270              	 .cfi_def_cfa_register 7
 271 0006 7860     	 str r0,[r7,#4]
 421:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_GetInput: handler null pointer", handler != NULL);
 422:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h ****   return XMC_GPIO_GetInput(handler->gpio_port, handler->gpio_pin);
 272              	 .loc 2 422 0
 273 0008 7B68     	 ldr r3,[r7,#4]
 274 000a 1A68     	 ldr r2,[r3]
 275 000c 7B68     	 ldr r3,[r7,#4]
 276 000e 1B7C     	 ldrb r3,[r3,#16]
 277 0010 1046     	 mov r0,r2
 278 0012 1946     	 mov r1,r3
 279 0014 FFF7FEFF 	 bl XMC_GPIO_GetInput
 280 0018 0346     	 mov r3,r0
 423:D:\dholler\Dokumente\uni\bus\xmc\priotest\Dave\Generated/DIGITAL_IO\digital_io.h **** }
 281              	 .loc 2 423 0
 282 001a 1846     	 mov r0,r3
 283 001c 0837     	 adds r7,r7,#8
 284              	.LCFI31:
 285              	 .cfi_def_cfa_offset 8
 286 001e BD46     	 mov sp,r7
 287              	.LCFI32:
 288              	 .cfi_def_cfa_register 13
 289              	 
 290 0020 80BD     	 pop {r7,pc}
 291              	 .cfi_endproc
 292              	.LFE230:
 294              	 .global sendCanFrames
 295 0022 00BF     	 .section .bss.sendCanFrames,"aw",%nobits
 298              	sendCanFrames:
 299 0000 00       	 .space 1
 300              	 .section .rodata
 301              	 .align 2
 302              	.LC0:
 303 0000 00000000 	 .word 0
 304 0004 00000000 	 .word CAN_NODE_0_LMO_01_Config
 305 0008 00000000 	 .word CAN_NODE_0_LMO_02_Config
 306 000c 00000000 	 .word CAN_NODE_0_LMO_03_Config
 307 0010 00000000 	 .word CAN_NODE_0_LMO_04_Config
 308 0014 00000000 	 .word CAN_NODE_0_LMO_05_Config
 309 0018 00000000 	 .word CAN_NODE_0_LMO_06_Config
 310 001c 00000000 	 .word CAN_NODE_0_LMO_07_Config
 311 0020 00000000 	 .word CAN_NODE_0_LMO_08_Config
 312 0024 00000000 	 .word CAN_NODE_0_LMO_09_Config
 313 0028 00000000 	 .word CAN_NODE_0_LMO_10_Config
 314 002c 00000000 	 .word CAN_NODE_0_LMO_11_Config
 315 0030 00000000 	 .word CAN_NODE_0_LMO_12_Config
 316 0034 00000000 	 .word CAN_NODE_0_LMO_13_Config
 317 0038 00000000 	 .word CAN_NODE_0_LMO_14_Config
 318 003c 00000000 	 .word CAN_NODE_0_LMO_15_Config
 319 0040 00000000 	 .word CAN_NODE_0_LMO_16_Config
 320 0044 00000000 	 .word CAN_NODE_0_LMO_18_Config
 321 0048 00000000 	 .word CAN_NODE_0_LMO_19_Config
 322 004c 00000000 	 .word CAN_NODE_0_LMO_20_Config
 323 0050 00000000 	 .word CAN_NODE_0_LMO_21_Config
 324 0054 00000000 	 .word CAN_NODE_0_LMO_22_Config
 325 0058 00000000 	 .word CAN_NODE_0_LMO_23_Config
 326 005c 00000000 	 .word CAN_NODE_0_LMO_24_Config
 327 0060 00000000 	 .word CAN_NODE_0_LMO_25_Config
 328 0064 00000000 	 .word CAN_NODE_0_LMO_26_Config
 329 0068 00000000 	 .word CAN_NODE_0_LMO_27_Config
 330 006c 00000000 	 .word CAN_NODE_0_LMO_28_Config
 331 0070 00000000 	 .word CAN_NODE_0_LMO_29_Config
 332 0074 00000000 	 .word CAN_NODE_0_LMO_30_Config
 333 0078 00000000 	 .word CAN_NODE_0_LMO_31_Config
 334              	 .section .text.main,"ax",%progbits
 335              	 .align 2
 336              	 .global main
 337              	 .thumb
 338              	 .thumb_func
 340              	main:
 341              	.LFB231:
 342              	 .file 3 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2016 Feb 16 21:58:10
   5:../main.c     ****  *  Author: DominikH
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
   9:../main.c     **** #include <stdlib.h>
  10:../main.c     **** 
  11:../main.c     **** /*
  12:../main.c     ****  * >>> ["0x%x"%(x*64) for x in range(31)]
  13:../main.c     ****  ['0x0', '0x40', '0x80', '0xc0', '0x100', '0x140', '0x180', '0x1c0', '0x200', '0x240', '0x280', '0x
  14:../main.c     ****  x480', '0x4c0', '0x500', '0x540', '0x580', '0x5c0', '0x600', '0x640', '0x680', '0x6c0', '0x700', '
  15:../main.c     ****  */
  16:../main.c     **** 
  17:../main.c     **** /**
  18:../main.c     **** 
  19:../main.c     ****  * @brief main() - Application entry point
  20:../main.c     ****  *
  21:../main.c     ****  * <b>Details of function</b><br>
  22:../main.c     ****  * This routine is the application entry point. It is invoked by the device startup code. It is res
  23:../main.c     ****  * invoking the APP initialization dispatcher routine - DAVE_Init() and hosting the place-holder fo
  24:../main.c     ****  * code.
  25:../main.c     ****  */
  26:../main.c     **** 
  27:../main.c     **** typedef enum
  28:../main.c     **** {
  29:../main.c     **** 	NOT_ACTIVATED, ACTIVATED
  30:../main.c     **** } sendCanFrames_t;
  31:../main.c     **** sendCanFrames_t sendCanFrames = NOT_ACTIVATED;
  32:../main.c     **** 
  33:../main.c     **** int main(void)
  34:../main.c     **** {
 343              	 .loc 3 34 0
 344              	 .cfi_startproc
 345              	 
 346              	 
 347 0000 80B5     	 push {r7,lr}
 348              	.LCFI33:
 349              	 .cfi_def_cfa_offset 8
 350              	 .cfi_offset 7,-8
 351              	 .cfi_offset 14,-4
 352 0002 A2B0     	 sub sp,sp,#136
 353              	.LCFI34:
 354              	 .cfi_def_cfa_offset 144
 355 0004 00AF     	 add r7,sp,#0
 356              	.LCFI35:
 357              	 .cfi_def_cfa_register 7
  35:../main.c     **** 
  36:../main.c     **** #define messageObjectsMax (30)
  37:../main.c     **** 
  38:../main.c     **** 	const CAN_NODE_LMO_t * messageObjects[31] =
 358              	 .loc 3 38 0
 359 0006 204A     	 ldr r2,.L16
 360 0008 3B1D     	 adds r3,r7,#4
 361 000a 1146     	 mov r1,r2
 362 000c 7C22     	 movs r2,#124
 363 000e 1846     	 mov r0,r3
 364 0010 FFF7FEFF 	 bl memcpy
  39:../main.c     **** 	{ NULL, &CAN_NODE_0_LMO_01_Config, &CAN_NODE_0_LMO_02_Config,
  40:../main.c     **** 			&CAN_NODE_0_LMO_03_Config, &CAN_NODE_0_LMO_04_Config,
  41:../main.c     **** 			&CAN_NODE_0_LMO_05_Config, &CAN_NODE_0_LMO_06_Config,
  42:../main.c     **** 			&CAN_NODE_0_LMO_07_Config, &CAN_NODE_0_LMO_08_Config,
  43:../main.c     **** 			&CAN_NODE_0_LMO_09_Config, &CAN_NODE_0_LMO_10_Config,
  44:../main.c     **** 			&CAN_NODE_0_LMO_11_Config, &CAN_NODE_0_LMO_12_Config,
  45:../main.c     **** 			&CAN_NODE_0_LMO_13_Config, &CAN_NODE_0_LMO_14_Config,
  46:../main.c     **** 			&CAN_NODE_0_LMO_15_Config, &CAN_NODE_0_LMO_16_Config,
  47:../main.c     **** 			/* &CAN_NODE_0_LMO_17_Config,*/ &CAN_NODE_0_LMO_18_Config,
  48:../main.c     **** 			&CAN_NODE_0_LMO_19_Config, &CAN_NODE_0_LMO_20_Config,
  49:../main.c     **** 			&CAN_NODE_0_LMO_21_Config, &CAN_NODE_0_LMO_22_Config,
  50:../main.c     **** 			&CAN_NODE_0_LMO_23_Config, &CAN_NODE_0_LMO_24_Config,
  51:../main.c     **** 			&CAN_NODE_0_LMO_25_Config, &CAN_NODE_0_LMO_26_Config,
  52:../main.c     **** 			&CAN_NODE_0_LMO_27_Config, &CAN_NODE_0_LMO_28_Config,
  53:../main.c     **** 			&CAN_NODE_0_LMO_29_Config, &CAN_NODE_0_LMO_30_Config,
  54:../main.c     **** 			&CAN_NODE_0_LMO_31_Config
  55:../main.c     **** 	};
  56:../main.c     **** 
  57:../main.c     **** 	DAVE_STATUS_t status;
  58:../main.c     **** 
  59:../main.c     **** 	status = DAVE_Init(); /* Initialization of DAVE APPs  */
 365              	 .loc 3 59 0
 366 0014 FFF7FEFF 	 bl DAVE_Init
 367 0018 0346     	 mov r3,r0
 368 001a 87F88330 	 strb r3,[r7,#131]
  60:../main.c     **** 
  61:../main.c     **** 	if (status == DAVE_STATUS_FAILURE)
 369              	 .loc 3 61 0
 370 001e 97F88330 	 ldrb r3,[r7,#131]
 371 0022 012B     	 cmp r3,#1
 372 0024 00D1     	 bne .L10
 373              	.L11:
  62:../main.c     **** 	{
  63:../main.c     **** 		/* Placeholder for error handler code. The while loop below can be replaced with an user error ha
  64:../main.c     **** 		XMC_DEBUG("DAVE APPs initialization failed\n");
  65:../main.c     **** 
  66:../main.c     **** 		while (1U)
  67:../main.c     **** 		{
  68:../main.c     **** 
  69:../main.c     **** 		}
 374              	 .loc 3 69 0 discriminator 1
 375 0026 FEE7     	 b .L11
 376              	.L10:
  70:../main.c     **** 	}
  71:../main.c     **** 
  72:../main.c     **** 	/* Placeholder for user application code. The while loop below can be replaced with user applicati
  73:../main.c     **** 	while (1U)
  74:../main.c     **** 	{
  75:../main.c     **** 		if (sendCanFrames == ACTIVATED)
 377              	 .loc 3 75 0
 378 0028 184B     	 ldr r3,.L16+4
 379 002a 1B78     	 ldrb r3,[r3]
 380 002c 012B     	 cmp r3,#1
 381 002e 21D1     	 bne .L12
  76:../main.c     **** 		{
  77:../main.c     **** 			sendCanFrames = NOT_ACTIVATED;
 382              	 .loc 3 77 0
 383 0030 164B     	 ldr r3,.L16+4
 384 0032 0022     	 movs r2,#0
 385 0034 1A70     	 strb r2,[r3]
  78:../main.c     **** 
  79:../main.c     **** 			DIGITAL_IO_SetOutputHigh(&LED1);
 386              	 .loc 3 79 0
 387 0036 1648     	 ldr r0,.L16+8
 388 0038 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 389              	.LBB2:
  80:../main.c     **** 			for (int messageObject = 2; messageObject < messageObjectsMax;
 390              	 .loc 3 80 0
 391 003c 0223     	 movs r3,#2
 392 003e C7F88430 	 str r3,[r7,#132]
 393 0042 0FE0     	 b .L13
 394              	.L14:
  81:../main.c     **** 					messageObject++)
  82:../main.c     **** 			{
  83:../main.c     **** 				CAN_NODE_MO_Transmit(messageObjects[messageObject]);
 395              	 .loc 3 83 0
 396 0044 D7F88430 	 ldr r3,[r7,#132]
 397 0048 9B00     	 lsls r3,r3,#2
 398 004a 07F18802 	 add r2,r7,#136
 399 004e 1344     	 add r3,r3,r2
 400 0050 53F8843C 	 ldr r3,[r3,#-132]
 401 0054 1846     	 mov r0,r3
 402 0056 FFF7FEFF 	 bl CAN_NODE_MO_Transmit
  81:../main.c     **** 					messageObject++)
 403              	 .loc 3 81 0
 404 005a D7F88430 	 ldr r3,[r7,#132]
 405 005e 0133     	 adds r3,r3,#1
 406 0060 C7F88430 	 str r3,[r7,#132]
 407              	.L13:
  80:../main.c     **** 			for (int messageObject = 2; messageObject < messageObjectsMax;
 408              	 .loc 3 80 0 discriminator 1
 409 0064 D7F88430 	 ldr r3,[r7,#132]
 410 0068 1D2B     	 cmp r3,#29
 411 006a EBDD     	 ble .L14
 412              	.LBE2:
  84:../main.c     **** 			}
  85:../main.c     **** 			DIGITAL_IO_SetOutputLow(&LED1);
 413              	 .loc 3 85 0
 414 006c 0848     	 ldr r0,.L16+8
 415 006e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 416 0072 08E0     	 b .L15
 417              	.L12:
  86:../main.c     **** 		}
  87:../main.c     **** 		else if (!DIGITAL_IO_GetInput(&Button1) )
 418              	 .loc 3 87 0
 419 0074 0748     	 ldr r0,.L16+12
 420 0076 FFF7FEFF 	 bl DIGITAL_IO_GetInput
 421 007a 0346     	 mov r3,r0
 422 007c 002B     	 cmp r3,#0
 423 007e 02D1     	 bne .L15
  88:../main.c     **** 		{
  89:../main.c     **** 			sendCanFrames = ACTIVATED;
 424              	 .loc 3 89 0
 425 0080 024B     	 ldr r3,.L16+4
 426 0082 0122     	 movs r2,#1
 427 0084 1A70     	 strb r2,[r3]
 428              	.L15:
  90:../main.c     **** 		}
  91:../main.c     **** 	}
 429              	 .loc 3 91 0
 430 0086 CFE7     	 b .L10
 431              	.L17:
 432              	 .align 2
 433              	.L16:
 434 0088 00000000 	 .word .LC0
 435 008c 00000000 	 .word sendCanFrames
 436 0090 00000000 	 .word LED1
 437 0094 00000000 	 .word Button1
 438              	 .cfi_endproc
 439              	.LFE231:
 441              	 .section .text.CAN0_1_IRQHandler,"ax",%progbits
 442              	 .align 2
 443              	 .global CAN0_1_IRQHandler
 444              	 .thumb
 445              	 .thumb_func
 447              	CAN0_1_IRQHandler:
 448              	.LFB232:
  92:../main.c     **** }
  93:../main.c     **** 
  94:../main.c     **** void CanRxInterruptHandler(void)
  95:../main.c     **** {
 449              	 .loc 3 95 0
 450              	 .cfi_startproc
 451              	 
 452              	 
 453 0000 80B5     	 push {r7,lr}
 454              	.LCFI36:
 455              	 .cfi_def_cfa_offset 8
 456              	 .cfi_offset 7,-8
 457              	 .cfi_offset 14,-4
 458 0002 82B0     	 sub sp,sp,#8
 459              	.LCFI37:
 460              	 .cfi_def_cfa_offset 16
 461 0004 00AF     	 add r7,sp,#0
 462              	.LCFI38:
 463              	 .cfi_def_cfa_register 7
  96:../main.c     **** 	/* Check for Node error */
  97:../main.c     **** 	if (CAN_NODE_GetStatus(&CAN_NODE_0) & XMC_CAN_NODE_STATUS_LAST_ERROR_CODE)
 464              	 .loc 3 97 0
 465 0006 1248     	 ldr r0,.L20
 466 0008 FFF7FEFF 	 bl CAN_NODE_GetStatus
 467 000c 0346     	 mov r3,r0
 468 000e 03F00703 	 and r3,r3,#7
 469 0012 002B     	 cmp r3,#0
 470 0014 19D1     	 bne .L18
  98:../main.c     **** 	{
  99:../main.c     **** 		XMC_DEBUG("Something failed\n");
 100:../main.c     **** 	}
 101:../main.c     **** 	else if (CAN_NODE_MO_GetStatus(&CAN_NODE_0_LMO_01_Config)
 471              	 .loc 3 101 0
 472 0016 0F48     	 ldr r0,.L20+4
 473 0018 FFF7FEFF 	 bl CAN_NODE_MO_GetStatus
 474 001c 0346     	 mov r3,r0
 102:../main.c     **** 			& XMC_CAN_MO_STATUS_RX_PENDING)
 475              	 .loc 3 102 0
 476 001e 03F00103 	 and r3,r3,#1
 101:../main.c     **** 			& XMC_CAN_MO_STATUS_RX_PENDING)
 477              	 .loc 3 101 0
 478 0022 002B     	 cmp r3,#0
 479 0024 11D0     	 beq .L18
 480              	.LBB3:
 103:../main.c     **** 	{
 104:../main.c     **** 		static int oldCommand = 0x42;
 105:../main.c     **** 		int currentCommand;
 106:../main.c     **** 		/* Read the received Message object and stores in Request_Node_LMO_02_Config*/
 107:../main.c     **** 		CAN_NODE_MO_Receive(&CAN_NODE_0_LMO_01_Config);
 481              	 .loc 3 107 0
 482 0026 0B48     	 ldr r0,.L20+4
 483 0028 FFF7FEFF 	 bl CAN_NODE_MO_Receive
 108:../main.c     **** 		currentCommand = CAN_NODE_0_LMO_01_Config.mo_ptr->can_data_byte[7];
 484              	 .loc 3 108 0
 485 002c 094B     	 ldr r3,.L20+4
 486 002e 1B68     	 ldr r3,[r3]
 487 0030 DB7D     	 ldrb r3,[r3,#23]
 488 0032 7B60     	 str r3,[r7,#4]
 109:../main.c     **** 
 110:../main.c     **** 		if ( currentCommand != oldCommand )
 489              	 .loc 3 110 0
 490 0034 084B     	 ldr r3,.L20+8
 491 0036 1B68     	 ldr r3,[r3]
 492 0038 7A68     	 ldr r2,[r7,#4]
 493 003a 9A42     	 cmp r2,r3
 494 003c 05D0     	 beq .L18
 111:../main.c     **** 		{
 112:../main.c     **** 			oldCommand = currentCommand;
 495              	 .loc 3 112 0
 496 003e 064A     	 ldr r2,.L20+8
 497 0040 7B68     	 ldr r3,[r7,#4]
 498 0042 1360     	 str r3,[r2]
 113:../main.c     **** 			sendCanFrames = ACTIVATED;
 499              	 .loc 3 113 0
 500 0044 054B     	 ldr r3,.L20+12
 501 0046 0122     	 movs r2,#1
 502 0048 1A70     	 strb r2,[r3]
 503              	.L18:
 504              	.LBE3:
 114:../main.c     **** 		}
 115:../main.c     **** 	}
 116:../main.c     **** }
 505              	 .loc 3 116 0
 506 004a 0837     	 adds r7,r7,#8
 507              	.LCFI39:
 508              	 .cfi_def_cfa_offset 8
 509 004c BD46     	 mov sp,r7
 510              	.LCFI40:
 511              	 .cfi_def_cfa_register 13
 512              	 
 513 004e 80BD     	 pop {r7,pc}
 514              	.L21:
 515              	 .align 2
 516              	.L20:
 517 0050 00000000 	 .word CAN_NODE_0
 518 0054 00000000 	 .word CAN_NODE_0_LMO_01_Config
 519 0058 00000000 	 .word oldCommand.8557
 520 005c 00000000 	 .word sendCanFrames
 521              	 .cfi_endproc
 522              	.LFE232:
 524              	 .section .data.oldCommand.8557,"aw",%progbits
 525              	 .align 2
 528              	oldCommand.8557:
 529 0000 42000000 	 .word 66
 530              	 .text
 531              	.Letext0:
 532              	 .file 4 "e:\\davev4\\dave-4.1.4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 533              	 .file 5 "e:\\davev4\\dave-4.1.4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 534              	 .file 6 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 535              	 .file 7 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest\\Libraries\\XMCLib\\inc/xmc_can.h"
 536              	 .file 8 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest\\Libraries\\XMCLib\\inc/xmc4_gpio.h"
 537              	 .file 9 "d:\\dholler\\dokumente\\uni\\bus\\xmc\\priotest\\dave\\generated\\global_can\\global_can.h"
 538              	 .file 10 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest\\Dave\\Generated/CAN_NODE/can_node.h"
 539              	 .file 11 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest\\Dave\\Generated/DAVE.h"
 540              	 .file 12 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest/Libraries/CMSIS/Include/core_cm4.h"
 541              	 .file 13 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 542              	 .file 14 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest\\Dave\\Generated/CAN_NODE/can_node_extern.h"
 543              	 .file 15 "D:\\dholler\\Dokumente\\uni\\bus\\xmc\\priotest\\Dave\\Generated/DIGITAL_IO/digital_io_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:24     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:68     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:72     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:115    .text.XMC_GPIO_GetInput:00000000 $t
    {standard input}:119    .text.XMC_GPIO_GetInput:00000000 XMC_GPIO_GetInput
    {standard input}:163    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:167    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:207    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:211    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:250    .text.DIGITAL_IO_GetInput:00000000 $t
    {standard input}:254    .text.DIGITAL_IO_GetInput:00000000 DIGITAL_IO_GetInput
    {standard input}:298    .bss.sendCanFrames:00000000 sendCanFrames
    {standard input}:299    .bss.sendCanFrames:00000000 $d
    {standard input}:301    .rodata:00000000 $d
    {standard input}:335    .text.main:00000000 $t
    {standard input}:340    .text.main:00000000 main
    {standard input}:434    .text.main:00000088 $d
    {standard input}:442    .text.CAN0_1_IRQHandler:00000000 $t
    {standard input}:447    .text.CAN0_1_IRQHandler:00000000 CAN0_1_IRQHandler
    {standard input}:517    .text.CAN0_1_IRQHandler:00000050 $d
    {standard input}:528    .data.oldCommand.8557:00000000 oldCommand.8557
    {standard input}:525    .data.oldCommand.8557:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CAN_NODE_0_LMO_01_Config
CAN_NODE_0_LMO_02_Config
CAN_NODE_0_LMO_03_Config
CAN_NODE_0_LMO_04_Config
CAN_NODE_0_LMO_05_Config
CAN_NODE_0_LMO_06_Config
CAN_NODE_0_LMO_07_Config
CAN_NODE_0_LMO_08_Config
CAN_NODE_0_LMO_09_Config
CAN_NODE_0_LMO_10_Config
CAN_NODE_0_LMO_11_Config
CAN_NODE_0_LMO_12_Config
CAN_NODE_0_LMO_13_Config
CAN_NODE_0_LMO_14_Config
CAN_NODE_0_LMO_15_Config
CAN_NODE_0_LMO_16_Config
CAN_NODE_0_LMO_18_Config
CAN_NODE_0_LMO_19_Config
CAN_NODE_0_LMO_20_Config
CAN_NODE_0_LMO_21_Config
CAN_NODE_0_LMO_22_Config
CAN_NODE_0_LMO_23_Config
CAN_NODE_0_LMO_24_Config
CAN_NODE_0_LMO_25_Config
CAN_NODE_0_LMO_26_Config
CAN_NODE_0_LMO_27_Config
CAN_NODE_0_LMO_28_Config
CAN_NODE_0_LMO_29_Config
CAN_NODE_0_LMO_30_Config
CAN_NODE_0_LMO_31_Config
memcpy
DAVE_Init
CAN_NODE_MO_Transmit
LED1
Button1
CAN_NODE_GetStatus
CAN_NODE_MO_GetStatus
CAN_NODE_MO_Receive
CAN_NODE_0
